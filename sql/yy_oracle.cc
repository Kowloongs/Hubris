/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "/home/buildbot/git/mkdist/sql/myskel.m4"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"
#include "json_table.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#if defined (__GNUC__) || defined (__clang__)
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void yyerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
#define __CONCAT_UNDERSCORED(x,y)  x ## _ ## y
#define _CONCAT_UNDERSCORED(x,y)   __CONCAT_UNDERSCORED(x,y)
void _CONCAT_UNDERSCORED(turn_parser_debug_on,yyparse)()
{
  /*
     MYSQLdebug is in sql/yy_*.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

#ifndef _AIX
  extern int yydebug;
#else
  static int yydebug;
#endif
  yydebug= 1;
}
#endif



#line 249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "yy_oracle.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_3_ = 3,                         /* '@'  */
  YYSYMBOL_ABORT_SYM = 4,                  /* ABORT_SYM  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 5,          /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_FORCE_LOOKAHEAD = 6,            /* FORCE_LOOKAHEAD  */
  YYSYMBOL_END_OF_INPUT = 7,               /* END_OF_INPUT  */
  YYSYMBOL_COLON_ORACLE_SYM = 8,           /* COLON_ORACLE_SYM  */
  YYSYMBOL_PARAM_MARKER = 9,               /* PARAM_MARKER  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 10,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_LEFT_PAREN_ALT = 11,            /* LEFT_PAREN_ALT  */
  YYSYMBOL_LEFT_PAREN_WITH = 12,           /* LEFT_PAREN_WITH  */
  YYSYMBOL_LEFT_PAREN_LIKE = 13,           /* LEFT_PAREN_LIKE  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 14,         /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 15,        /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_WITH_CUBE_SYM = 16,             /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 17,           /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 18,           /* WITH_SYSTEM_SYM  */
  YYSYMBOL_IDENT = 19,                     /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 20,              /* IDENT_QUOTED  */
  YYSYMBOL_LEX_HOSTNAME = 21,              /* LEX_HOSTNAME  */
  YYSYMBOL_UNDERSCORE_CHARSET = 22,        /* UNDERSCORE_CHARSET  */
  YYSYMBOL_BIN_NUM = 23,                   /* BIN_NUM  */
  YYSYMBOL_DECIMAL_NUM = 24,               /* DECIMAL_NUM  */
  YYSYMBOL_FLOAT_NUM = 25,                 /* FLOAT_NUM  */
  YYSYMBOL_HEX_NUM = 26,                   /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 27,                /* HEX_STRING  */
  YYSYMBOL_LONG_NUM = 28,                  /* LONG_NUM  */
  YYSYMBOL_NCHAR_STRING = 29,              /* NCHAR_STRING  */
  YYSYMBOL_NUM = 30,                       /* NUM  */
  YYSYMBOL_TEXT_STRING = 31,               /* TEXT_STRING  */
  YYSYMBOL_ULONGLONG_NUM = 32,             /* ULONGLONG_NUM  */
  YYSYMBOL_AND_AND_SYM = 33,               /* AND_AND_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 34,               /* DOT_DOT_SYM  */
  YYSYMBOL_EQUAL_SYM = 35,                 /* EQUAL_SYM  */
  YYSYMBOL_GE = 36,                        /* GE  */
  YYSYMBOL_LE = 37,                        /* LE  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 38,          /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NE = 39,                        /* NE  */
  YYSYMBOL_NOT2_SYM = 40,                  /* NOT2_SYM  */
  YYSYMBOL_OR2_SYM = 41,                   /* OR2_SYM  */
  YYSYMBOL_SET_VAR = 42,                   /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 43,                /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 44,               /* SHIFT_RIGHT  */
  YYSYMBOL_ACCESSIBLE_SYM = 45,            /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 46,                       /* ADD  */
  YYSYMBOL_ALL = 47,                       /* ALL  */
  YYSYMBOL_ALTER = 48,                     /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 49,               /* ANALYZE_SYM  */
  YYSYMBOL_AND_SYM = 50,                   /* AND_SYM  */
  YYSYMBOL_ASC = 51,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 52,            /* ASENSITIVE_SYM  */
  YYSYMBOL_AS = 53,                        /* AS  */
  YYSYMBOL_BEFORE_SYM = 54,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 55,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 56,                    /* BIGINT  */
  YYSYMBOL_BINARY = 57,                    /* BINARY  */
  YYSYMBOL_BIT_AND = 58,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 59,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 60,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 61,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 62,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 63,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 64,                      /* BOTH  */
  YYSYMBOL_BY = 65,                        /* BY  */
  YYSYMBOL_CALL_SYM = 66,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 67,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 68,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 69,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 70,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 71,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 72,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 73,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 74,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 75,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 76,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 77,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 78,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 79,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 80,                    /* CREATE  */
  YYSYMBOL_CROSS = 81,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 82,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 83,                   /* CURDATE  */
  YYSYMBOL_CURRENT_ROLE = 84,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_USER = 85,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR_SYM = 86,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 87,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 88,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 89,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 90,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 91,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 92,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 93,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 94,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 95,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_SYM = 96,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 97,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 98,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 99,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 100,     /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 101,               /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 102,           /* DENSE_RANK_SYM  */
  YYSYMBOL_DESCRIBE = 103,                 /* DESCRIBE  */
  YYSYMBOL_DESC = 104,                     /* DESC  */
  YYSYMBOL_DETERMINISTIC_SYM = 105,        /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 106,                 /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 107,                  /* DIV_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 108,        /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOUBLE_SYM = 109,               /* DOUBLE_SYM  */
  YYSYMBOL_DROP = 110,                     /* DROP  */
  YYSYMBOL_DUAL_SYM = 111,                 /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 112,                 /* EACH_SYM  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 113,       /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSE = 114,                     /* ELSE  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 115,         /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_EMPTY_SYM = 116,                /* EMPTY_SYM  */
  YYSYMBOL_ENCLOSED = 117,                 /* ENCLOSED  */
  YYSYMBOL_ESCAPED = 118,                  /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 119,               /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 120,                   /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 121,              /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 122,                /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 123,                /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 124,          /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_SYM = 125,                /* FLOAT_SYM  */
  YYSYMBOL_FOREIGN = 126,                  /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 127,                  /* FOR_SYM  */
  YYSYMBOL_FROM = 128,                     /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 129,             /* FULLTEXT_SYM  */
  YYSYMBOL_GOTO_ORACLE_SYM = 130,          /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 131,                    /* GRANT  */
  YYSYMBOL_GROUP_CONCAT_SYM = 132,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_JSON_ARRAYAGG_SYM = 133,        /* JSON_ARRAYAGG_SYM  */
  YYSYMBOL_JSON_OBJECTAGG_SYM = 134,       /* JSON_OBJECTAGG_SYM  */
  YYSYMBOL_JSON_TABLE_SYM = 135,           /* JSON_TABLE_SYM  */
  YYSYMBOL_GROUP_SYM = 136,                /* GROUP_SYM  */
  YYSYMBOL_HAVING = 137,                   /* HAVING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 138,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 139,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 140,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IF_SYM = 141,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 142,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 143,               /* IGNORE_SYM  */
  YYSYMBOL_IGNORED_SYM = 144,              /* IGNORED_SYM  */
  YYSYMBOL_INDEX_SYM = 145,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 146,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 147,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 148,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 149,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 150,                   /* INSERT  */
  YYSYMBOL_IN_SYM = 151,                   /* IN_SYM  */
  YYSYMBOL_INTERSECT_SYM = 152,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 153,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 154,                     /* INTO  */
  YYSYMBOL_INT_SYM = 155,                  /* INT_SYM  */
  YYSYMBOL_IS = 156,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 157,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 158,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 159,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 160,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 161,                 /* KILL_SYM  */
  YYSYMBOL_LAG_SYM = 162,                  /* LAG_SYM  */
  YYSYMBOL_LEADING = 163,                  /* LEADING  */
  YYSYMBOL_LEAD_SYM = 164,                 /* LEAD_SYM  */
  YYSYMBOL_LEAVE_SYM = 165,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 166,                     /* LEFT  */
  YYSYMBOL_LIKE = 167,                     /* LIKE  */
  YYSYMBOL_LIMIT = 168,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 169,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 170,                    /* LINES  */
  YYSYMBOL_LOAD = 171,                     /* LOAD  */
  YYSYMBOL_LOCATOR_SYM = 172,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 173,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 174,                 /* LONGBLOB  */
  YYSYMBOL_LONG_SYM = 175,                 /* LONG_SYM  */
  YYSYMBOL_LONGTEXT = 176,                 /* LONGTEXT  */
  YYSYMBOL_LOOP_SYM = 177,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 178,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 179, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 180,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 181,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 182,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 183,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 184,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 185,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 186,               /* MEDIUMTEXT  */
  YYSYMBOL_MIN_SYM = 187,                  /* MIN_SYM  */
  YYSYMBOL_MINUS_ORACLE_SYM = 188,         /* MINUS_ORACLE_SYM  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 189,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 190,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MODIFIES_SYM = 191,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 192,                  /* MOD_SYM  */
  YYSYMBOL_NATURAL = 193,                  /* NATURAL  */
  YYSYMBOL_NEG = 194,                      /* NEG  */
  YYSYMBOL_NESTED_SYM = 195,               /* NESTED_SYM  */
  YYSYMBOL_NOT_SYM = 196,                  /* NOT_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 197,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NOW_SYM = 198,                  /* NOW_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 199,            /* NTH_VALUE_SYM  */
  YYSYMBOL_NTILE_SYM = 200,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 201,                 /* NULL_SYM  */
  YYSYMBOL_NUMERIC_SYM = 202,              /* NUMERIC_SYM  */
  YYSYMBOL_ON = 203,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 204,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 205,               /* OPTIONALLY  */
  YYSYMBOL_ORDER_SYM = 206,                /* ORDER_SYM  */
  YYSYMBOL_ORDINALITY_SYM = 207,           /* ORDINALITY_SYM  */
  YYSYMBOL_OR_SYM = 208,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 209,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 210,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 211,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 212,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 213,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 214,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 215,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 216,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 217,            /* PARTITION_SYM  */
  YYSYMBOL_PATH_SYM = 218,                 /* PATH_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 219,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 220,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 221,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PORTION_SYM = 222,              /* PORTION_SYM  */
  YYSYMBOL_POSITION_SYM = 223,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 224,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 225,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 226,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 227,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 228,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 229,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 230,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 231,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 232,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 233,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 234,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 235,            /* RECURSIVE_SYM  */
  YYSYMBOL_REFERENCES = 236,               /* REFERENCES  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 237,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REGEXP = 238,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 239,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 240,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 241,               /* REPEAT_SYM  */
  YYSYMBOL_REQUIRE_SYM = 242,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 243,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 244,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 245,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 246,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 247,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 248,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 249,                    /* RIGHT  */
  YYSYMBOL_ROW_NUMBER_SYM = 250,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_ROWS_SYM = 251,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 252,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 253,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 254,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 255,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 256,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 257,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 258,                      /* SET  */
  YYSYMBOL_SHOW = 259,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 260,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 261,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 262,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 263,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 264,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQLEXCEPTION_SYM = 265,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQL_SMALL_RESULT = 266,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQLSTATE_SYM = 267,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQL_SYM = 268,                  /* SQL_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 269,           /* SQLWARNING_SYM  */
  YYSYMBOL_SSL_SYM = 270,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 271,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 272,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 273,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 274,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 275,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 276,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 277,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUM_SYM = 278,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 279,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 280,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 281,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 282,               /* TERMINATED  */
  YYSYMBOL_THEN_SYM = 283,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 284,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 285,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 286,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 287,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 288,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 289,              /* TRIGGER_SYM  */
  YYSYMBOL_TRUE_SYM = 290,                 /* TRUE_SYM  */
  YYSYMBOL_UNDO_SYM = 291,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 292,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 293,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 294,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 295,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 296,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 297,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 298,                  /* USE_SYM  */
  YYSYMBOL_USING = 299,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 300,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 301,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 302,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES_IN_SYM = 303,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 304,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VALUES = 305,                   /* VALUES  */
  YYSYMBOL_VARBINARY = 306,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 307,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 308,             /* VARIANCE_SYM  */
  YYSYMBOL_VAR_SAMP_SYM = 309,             /* VAR_SAMP_SYM  */
  YYSYMBOL_VARYING = 310,                  /* VARYING  */
  YYSYMBOL_WHEN_SYM = 311,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 312,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 313,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 314,                     /* WITH  */
  YYSYMBOL_XOR = 315,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 316,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 317,                 /* ZEROFILL  */
  YYSYMBOL_BODY_MARIADB_SYM = 318,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 319,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 320,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 321,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 322,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 323,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 324,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 325,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 326,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ROWNUM_SYM = 327,               /* ROWNUM_SYM  */
  YYSYMBOL_REPLACE = 328,                  /* REPLACE  */
  YYSYMBOL_SUBSTRING = 329,                /* SUBSTRING  */
  YYSYMBOL_TRIM = 330,                     /* TRIM  */
  YYSYMBOL_ACCOUNT_SYM = 331,              /* ACCOUNT_SYM  */
  YYSYMBOL_ACTION = 332,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 333,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 334,              /* ADDDATE_SYM  */
  YYSYMBOL_ADD_MONTHS_SYM = 335,           /* ADD_MONTHS_SYM  */
  YYSYMBOL_AFTER_SYM = 336,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 337,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 338,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 339,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 340,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 341,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 342,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 343,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 344,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 345,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 346,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 347,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 348,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 349,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 350,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 351,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 352,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 353,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 354,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 355,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 356,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 357,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 358,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 359,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 360,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 361,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 362,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 363,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 364,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 365,                  /* CHANGED  */
  YYSYMBOL_CHANNEL_SYM = 366,              /* CHANNEL_SYM  */
  YYSYMBOL_CHARSET = 367,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 368,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 369,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 370,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 371,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 372,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 373,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 374,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 375,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 376,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 377,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 378,            /* COLLATION_SYM  */
  YYSYMBOL_COLUMNS = 379,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 380,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 381,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 382,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 383,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 384,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 385,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 386,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 387,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 388,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 389,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 390,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 391,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 392,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 393,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 394,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 395,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 396,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 397,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 398,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 399,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 400,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 401,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 402,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 403,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 404,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 405,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 406,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 407,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 408,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 409,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 410,                 /* DATETIME  */
  YYSYMBOL_DATE_FORMAT_SYM = 411,          /* DATE_FORMAT_SYM  */
  YYSYMBOL_DATE_SYM = 412,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 413,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 414,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DECODE_MARIADB_SYM = 415,       /* DECODE_MARIADB_SYM  */
  YYSYMBOL_DECODE_ORACLE_SYM = 416,        /* DECODE_ORACLE_SYM  */
  YYSYMBOL_DEFINER_SYM = 417,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 418,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 419,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 420,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 421,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 422,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 423,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 424,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 425,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 426,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 427,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 428,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 429,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 430,               /* ENABLE_SYM  */
  YYSYMBOL_END = 431,                      /* END  */
  YYSYMBOL_ENDS_SYM = 432,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 433,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 434,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 435,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 436,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 437,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 438,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 439,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 440,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 441,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 442,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 443,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 444,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 445,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 446,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 447,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 448,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 449,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPIRE_SYM = 450,               /* EXPIRE_SYM  */
  YYSYMBOL_EXPORT_SYM = 451,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 452,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 453,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 454,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 455,               /* FAULTS_SYM  */
  YYSYMBOL_FEDERATED_SYM = 456,            /* FEDERATED_SYM  */
  YYSYMBOL_FILE_SYM = 457,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 458,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 459,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 460,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 461,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 462,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 463,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 464,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 465,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 466,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 467,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 468,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 469,            /* GENERATED_SYM  */
  YYSYMBOL_GET_FORMAT = 470,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 471,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 472,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 473,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 474,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 475,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 476,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 477,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 478,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 479,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 480,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 481,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 482,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 483,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 484,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 485,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 486,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 487,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 488,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 489,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 490,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 491,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 492,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 493,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 494,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 495,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 496,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 497,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 498,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 499,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 500,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 501,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 502,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 503,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 504,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 505,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 506,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 507,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 508,                /* LEVEL_SYM  */
  YYSYMBOL_LIST_SYM = 509,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 510,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKED_SYM = 511,               /* LOCKED_SYM  */
  YYSYMBOL_LOCKS_SYM = 512,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 513,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 514,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 515, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 516,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 517,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 518,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 519,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 520,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 521,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 522,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 523,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 524,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 525,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 526,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 527,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 528,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 529,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 530,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 531,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 532,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 533,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 534,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 535, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MASTER_DEMOTE_TO_SLAVE_SYM = 536, /* MASTER_DEMOTE_TO_SLAVE_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 537, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 538,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 539,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 540,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 541,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 542,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 543, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 544,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 545,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 546,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 547,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 548,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 549,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 550,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 551,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 552,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 553,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 554,               /* MODIFY_SYM  */
  YYSYMBOL_MONITOR_SYM = 555,              /* MONITOR_SYM  */
  YYSYMBOL_MONTH_SYM = 556,                /* MONTH_SYM  */
  YYSYMBOL_MUTEX_SYM = 557,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 558,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 559,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 560,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 561,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 562,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 563,                /* NCHAR_SYM  */
  YYSYMBOL_NEVER_SYM = 564,                /* NEVER_SYM  */
  YYSYMBOL_NEW_SYM = 565,                  /* NEW_SYM  */
  YYSYMBOL_NEXT_SYM = 566,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 567,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 568,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 569,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 570,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 571,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 572,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 573,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 574,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 575,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 576,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 577,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 578,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 579,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 580,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 581,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 582,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 583,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 584,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 585,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 586,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 587,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 588,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 589,                   /* OPTION  */
  YYSYMBOL_OVERLAPS_SYM = 590,             /* OVERLAPS_SYM  */
  YYSYMBOL_OWNER_SYM = 591,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 592,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 593,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 594,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 595,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 596,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 597,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 598,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 599,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 600,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 601,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 602,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 603,               /* PLUGIN_SYM  */
  YYSYMBOL_PORT_SYM = 604,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 605,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 606,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 607,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 608,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 609,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 610,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 611,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 612,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 613,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 614,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 615,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 616,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 617,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 618,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 619,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 620,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 621,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 622,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 623,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 624,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 625,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 626,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 627,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 628,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 629,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 630,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 631,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 632,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 633,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 634,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 635,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 636,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 637,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLAY_SYM = 638,               /* REPLAY_SYM  */
  YYSYMBOL_REPLICATION = 639,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 640,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 641,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 642,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 643,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 644,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 645,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 646,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 647,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 648,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 649,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 650,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 651,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 652,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 653,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 654,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 655,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 656,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 657,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 658,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 659,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 660,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 661,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 662,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 663,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 664,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 665,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 666,              /* SESSION_SYM  */
  YYSYMBOL_SERVER_SYM = 667,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 668,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 669,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 670,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 671,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 672,               /* SIMPLE_SYM  */
  YYSYMBOL_SKIP_SYM = 673,                 /* SKIP_SYM  */
  YYSYMBOL_SLAVE = 674,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 675,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 676,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 677,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 678,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 679,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 680,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 681,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 682,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 683,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 684,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 685,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 686,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 687,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 688,               /* SQL_THREAD  */
  YYSYMBOL_STAGE_SYM = 689,                /* STAGE_SYM  */
  YYSYMBOL_STARTS_SYM = 690,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 691,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 692,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 693,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 694,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 695,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 696,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 697,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 698,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 699,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 700,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 701,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 702,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 703,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 704,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 705,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 706,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 707,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 708,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 709,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 710,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 711,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 712,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 713,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 714,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 715,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 716,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 717,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 718,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 719,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 720,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 721,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 722,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 723,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_THREADS_SYM = 724,              /* THREADS_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 725,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 726,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 727,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPES_SYM = 728,                /* TYPES_SYM  */
  YYSYMBOL_TYPE_SYM = 729,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 730,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 731,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 732,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 733,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 734,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 735,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 736,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 737,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 738,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 739,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 740,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 741,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 742,                  /* USE_FRM  */
  YYSYMBOL_VALUE_SYM = 743,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 744,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 745,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 746,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 747,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 748,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 749,                 /* VIEW_SYM  */
  YYSYMBOL_VISIBLE_SYM = 750,              /* VISIBLE_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 751,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 752,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 753,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 754,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 755,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 756,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 757,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 758,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 759,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 760,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 761,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 762,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 763,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 764,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 765,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 766,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 767,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 768,           /* PREC_BELOW_NOT  */
  YYSYMBOL_769_ = 769,                     /* '='  */
  YYSYMBOL_770_ = 770,                     /* '>'  */
  YYSYMBOL_771_ = 771,                     /* '<'  */
  YYSYMBOL_772_ = 772,                     /* '|'  */
  YYSYMBOL_773_ = 773,                     /* '&'  */
  YYSYMBOL_774_ = 774,                     /* '-'  */
  YYSYMBOL_775_ = 775,                     /* '+'  */
  YYSYMBOL_776_ = 776,                     /* '*'  */
  YYSYMBOL_777_ = 777,                     /* '/'  */
  YYSYMBOL_778_ = 778,                     /* '%'  */
  YYSYMBOL_779_ = 779,                     /* '^'  */
  YYSYMBOL_780_ = 780,                     /* '~'  */
  YYSYMBOL_SUBQUERY_AS_EXPR = 781,         /* SUBQUERY_AS_EXPR  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 782, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 783,                     /* USER  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 784, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_785_ = 785,                     /* '('  */
  YYSYMBOL_786_ = 786,                     /* ')'  */
  YYSYMBOL_EMPTY_FROM_CLAUSE = 787,        /* EMPTY_FROM_CLAUSE  */
  YYSYMBOL_788_ = 788,                     /* ','  */
  YYSYMBOL_789_ = 789,                     /* '!'  */
  YYSYMBOL_790_ = 790,                     /* '{'  */
  YYSYMBOL_791_ = 791,                     /* '}'  */
  YYSYMBOL_792_ = 792,                     /* ';'  */
  YYSYMBOL_793_ = 793,                     /* '.'  */
  YYSYMBOL_YYACCEPT = 794,                 /* $accept  */
  YYSYMBOL_query = 795,                    /* query  */
  YYSYMBOL_796_1 = 796,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 797,         /* opt_end_of_input  */
  YYSYMBOL_directly_executable_statement = 798, /* directly_executable_statement  */
  YYSYMBOL_verb_clause = 799,              /* verb_clause  */
  YYSYMBOL_deallocate = 800,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 801,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 802,                  /* prepare  */
  YYSYMBOL_803_2 = 803,                    /* $@2  */
  YYSYMBOL_execute = 804,                  /* execute  */
  YYSYMBOL_805_3 = 805,                    /* $@3  */
  YYSYMBOL_806_4 = 806,                    /* $@4  */
  YYSYMBOL_execute_using = 807,            /* execute_using  */
  YYSYMBOL_808_5 = 808,                    /* $@5  */
  YYSYMBOL_execute_params = 809,           /* execute_params  */
  YYSYMBOL_help = 810,                     /* help  */
  YYSYMBOL_811_6 = 811,                    /* $@6  */
  YYSYMBOL_change = 812,                   /* change  */
  YYSYMBOL_813_7 = 813,                    /* $@7  */
  YYSYMBOL_master_defs = 814,              /* master_defs  */
  YYSYMBOL_master_def = 815,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 816,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 817,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 818,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 819,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 820,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 821,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 822,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 823, /* optional_connection_name  */
  YYSYMBOL_connection_name = 824,          /* connection_name  */
  YYSYMBOL_optional_for_channel = 825,     /* optional_for_channel  */
  YYSYMBOL_for_channel = 826,              /* for_channel  */
  YYSYMBOL_create = 827,                   /* create  */
  YYSYMBOL_828_8 = 828,                    /* $@8  */
  YYSYMBOL_829_9 = 829,                    /* $@9  */
  YYSYMBOL_830_10 = 830,                   /* $@10  */
  YYSYMBOL_831_11 = 831,                   /* $@11  */
  YYSYMBOL_832_12 = 832,                   /* $@12  */
  YYSYMBOL_833_13 = 833,                   /* $@13  */
  YYSYMBOL_834_14 = 834,                   /* $@14  */
  YYSYMBOL_835_15 = 835,                   /* $@15  */
  YYSYMBOL_836_16 = 836,                   /* $@16  */
  YYSYMBOL_837_17 = 837,                   /* $@17  */
  YYSYMBOL_838_18 = 838,                   /* $@18  */
  YYSYMBOL_839_19 = 839,                   /* $@19  */
  YYSYMBOL_840_20 = 840,                   /* $@20  */
  YYSYMBOL_841_21 = 841,                   /* $@21  */
  YYSYMBOL_842_22 = 842,                   /* $@22  */
  YYSYMBOL_843_23 = 843,                   /* $@23  */
  YYSYMBOL_844_24 = 844,                   /* $@24  */
  YYSYMBOL_opt_sequence = 845,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 846,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 847,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 848,          /* force_lookahead  */
  YYSYMBOL_server_def = 849,               /* server_def  */
  YYSYMBOL_850_25 = 850,                   /* $@25  */
  YYSYMBOL_server_options_list = 851,      /* server_options_list  */
  YYSYMBOL_server_option = 852,            /* server_option  */
  YYSYMBOL_event_tail = 853,               /* event_tail  */
  YYSYMBOL_854_26 = 854,                   /* $@26  */
  YYSYMBOL_ev_schedule_time = 855,         /* ev_schedule_time  */
  YYSYMBOL_856_27 = 856,                   /* $@27  */
  YYSYMBOL_opt_ev_status = 857,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 858,                /* ev_starts  */
  YYSYMBOL_ev_ends = 859,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 860,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 861,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 862,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 863,              /* ev_sql_stmt  */
  YYSYMBOL_864_28 = 864,                   /* $@28  */
  YYSYMBOL_clear_privileges = 865,         /* clear_privileges  */
  YYSYMBOL_opt_aggregate = 866,            /* opt_aggregate  */
  YYSYMBOL_sp_handler = 867,               /* sp_handler  */
  YYSYMBOL_sp_name = 868,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 869,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 870,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 871,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 872,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 873,                  /* sp_suid  */
  YYSYMBOL_call = 874,                     /* call  */
  YYSYMBOL_875_29 = 875,                   /* $@29  */
  YYSYMBOL_876_30 = 876,                   /* $@30  */
  YYSYMBOL_877_31 = 877,                   /* $@31  */
  YYSYMBOL_opt_sp_cparam_list = 878,       /* opt_sp_cparam_list  */
  YYSYMBOL_opt_sp_cparams = 879,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 880,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 881,          /* sp_fdparam_list  */
  YYSYMBOL_882_32 = 882,                   /* $@32  */
  YYSYMBOL_sp_fdparams = 883,              /* sp_fdparams  */
  YYSYMBOL_sp_param_name = 884,            /* sp_param_name  */
  YYSYMBOL_sp_pdparam_list = 885,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 886,              /* sp_pdparams  */
  YYSYMBOL_sp_parameter_type = 887,        /* sp_parameter_type  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 888, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_889_33 = 889,                   /* $@33  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 890, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_sp_proc_stmts = 891,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 892,           /* sp_proc_stmts1  */
  YYSYMBOL_optionally_qualified_column_ident = 893, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_definition = 894,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 895, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 896,            /* row_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 897, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_variable_list = 898,    /* sp_decl_variable_list  */
  YYSYMBOL_899_34 = 899,                   /* $@34  */
  YYSYMBOL_sp_decl_handler = 900,          /* sp_decl_handler  */
  YYSYMBOL_901_35 = 901,                   /* $@35  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 902, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 903,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 904,           /* sp_cursor_stmt  */
  YYSYMBOL_905_36 = 905,                   /* $@36  */
  YYSYMBOL_sp_handler_type = 906,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 907,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 908,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 909,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 910,                 /* sqlstate  */
  YYSYMBOL_opt_value = 911,                /* opt_value  */
  YYSYMBOL_sp_hcond = 912,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 913,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 914,              /* signal_stmt  */
  YYSYMBOL_signal_value = 915,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 916,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 917, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 918, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 919,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 920, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 921,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 922,          /* get_diagnostics  */
  YYSYMBOL_which_area = 923,               /* which_area  */
  YYSYMBOL_diagnostics_information = 924,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 925,    /* statement_information  */
  YYSYMBOL_statement_information_item = 926, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 927, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 928, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 929,         /* condition_number  */
  YYSYMBOL_condition_information = 930,    /* condition_information  */
  YYSYMBOL_condition_information_item = 931, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 932, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 933,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 934,           /* sp_decl_idents  */
  YYSYMBOL_sp_proc_stmt_if = 935,          /* sp_proc_stmt_if  */
  YYSYMBOL_936_37 = 936,                   /* $@37  */
  YYSYMBOL_sp_proc_stmt_statement = 937,   /* sp_proc_stmt_statement  */
  YYSYMBOL_938_38 = 938,                   /* $@38  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 939,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 940,      /* sp_proc_stmt_return  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 941, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 942, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_sp_proc_stmt_leave = 943,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 944,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 945, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_expr_lex = 946,                 /* expr_lex  */
  YYSYMBOL_947_39 = 947,                   /* @39  */
  YYSYMBOL_assignment_source_lex = 948,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 949,   /* assignment_source_expr  */
  YYSYMBOL_950_40 = 950,                   /* $@40  */
  YYSYMBOL_for_loop_bound_expr = 951,      /* for_loop_bound_expr  */
  YYSYMBOL_952_41 = 952,                   /* $@41  */
  YYSYMBOL_cursor_actual_parameters = 953, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 954, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_with_cursor = 955, /* sp_proc_stmt_with_cursor  */
  YYSYMBOL_sp_proc_stmt_open = 956,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 957,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 958,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 959,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 960,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 961,                    /* sp_if  */
  YYSYMBOL_962_42 = 962,                   /* $@42  */
  YYSYMBOL_963_43 = 963,                   /* $@43  */
  YYSYMBOL_sp_elseifs = 964,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 965,  /* case_stmt_specification  */
  YYSYMBOL_966_44 = 966,                   /* $@44  */
  YYSYMBOL_case_stmt_body = 967,           /* case_stmt_body  */
  YYSYMBOL_968_45 = 968,                   /* $@45  */
  YYSYMBOL_simple_when_clause_list = 969,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 970, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 971,       /* simple_when_clause  */
  YYSYMBOL_972_46 = 972,                   /* $@46  */
  YYSYMBOL_searched_when_clause = 973,     /* searched_when_clause  */
  YYSYMBOL_974_47 = 974,                   /* $@47  */
  YYSYMBOL_else_clause_opt = 975,          /* else_clause_opt  */
  YYSYMBOL_sp_opt_label = 976,             /* sp_opt_label  */
  YYSYMBOL_opt_sp_for_loop_direction = 977, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 978, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 979,       /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 980,                /* loop_body  */
  YYSYMBOL_repeat_body = 981,              /* repeat_body  */
  YYSYMBOL_pop_sp_loop_label = 982,        /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 983,       /* sp_labeled_control  */
  YYSYMBOL_984_48 = 984,                   /* $@48  */
  YYSYMBOL_985_49 = 985,                   /* $@49  */
  YYSYMBOL_986_50 = 986,                   /* $@50  */
  YYSYMBOL_987_51 = 987,                   /* $@51  */
  YYSYMBOL_988_52 = 988,                   /* $@52  */
  YYSYMBOL_989_53 = 989,                   /* $@53  */
  YYSYMBOL_sp_unlabeled_control = 990,     /* sp_unlabeled_control  */
  YYSYMBOL_991_54 = 991,                   /* $@54  */
  YYSYMBOL_992_55 = 992,                   /* $@55  */
  YYSYMBOL_993_56 = 993,                   /* $@56  */
  YYSYMBOL_994_57 = 994,                   /* $@57  */
  YYSYMBOL_995_58 = 995,                   /* $@58  */
  YYSYMBOL_trg_action_time = 996,          /* trg_action_time  */
  YYSYMBOL_trg_event = 997,                /* trg_event  */
  YYSYMBOL_create_body = 998,              /* create_body  */
  YYSYMBOL_999_59 = 999,                   /* $@59  */
  YYSYMBOL_create_like = 1000,             /* create_like  */
  YYSYMBOL_opt_create_select = 1001,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1002, /* create_select_query_expression  */
  YYSYMBOL_opt_create_partitioning = 1003, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1004,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1005,            /* partitioning  */
  YYSYMBOL_1006_60 = 1006,                 /* $@60  */
  YYSYMBOL_have_partitioning = 1007,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1008,         /* partition_entry  */
  YYSYMBOL_1009_61 = 1009,                 /* $@61  */
  YYSYMBOL_partition = 1010,               /* partition  */
  YYSYMBOL_1011_62 = 1011,                 /* $@62  */
  YYSYMBOL_part_type_def = 1012,           /* part_type_def  */
  YYSYMBOL_1013_63 = 1013,                 /* $@63  */
  YYSYMBOL_1014_64 = 1014,                 /* $@64  */
  YYSYMBOL_1015_65 = 1015,                 /* $@65  */
  YYSYMBOL_opt_linear = 1016,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1017,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1018,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1019,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1020,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1021,        /* part_column_list  */
  YYSYMBOL_part_func = 1022,               /* part_func  */
  YYSYMBOL_sub_part_func = 1023,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1024,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1025,            /* opt_sub_part  */
  YYSYMBOL_1026_66 = 1026,                 /* $@66  */
  YYSYMBOL_1027_67 = 1027,                 /* $@67  */
  YYSYMBOL_sub_part_field_list = 1028,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1029,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1030,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1031,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1032,               /* part_defs  */
  YYSYMBOL_part_def_list = 1033,           /* part_def_list  */
  YYSYMBOL_opt_partition = 1034,           /* opt_partition  */
  YYSYMBOL_part_definition = 1035,         /* part_definition  */
  YYSYMBOL_1036_68 = 1036,                 /* $@68  */
  YYSYMBOL_part_name = 1037,               /* part_name  */
  YYSYMBOL_opt_part_values = 1038,         /* opt_part_values  */
  YYSYMBOL_1039_69 = 1039,                 /* $@69  */
  YYSYMBOL_1040_70 = 1040,                 /* $@70  */
  YYSYMBOL_part_func_max = 1041,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1042,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1043,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1044,         /* part_value_item  */
  YYSYMBOL_1045_71 = 1045,                 /* $@71  */
  YYSYMBOL_1046_72 = 1046,                 /* $@72  */
  YYSYMBOL_part_value_item_list = 1047,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1048,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1049,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1050,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1051,     /* sub_part_definition  */
  YYSYMBOL_1052_73 = 1052,                 /* $@73  */
  YYSYMBOL_sub_name = 1053,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1054,        /* opt_part_options  */
  YYSYMBOL_part_option_list = 1055,        /* part_option_list  */
  YYSYMBOL_part_option = 1056,             /* part_option  */
  YYSYMBOL_opt_subpart_options = 1057,     /* opt_subpart_options  */
  YYSYMBOL_subpart_option_list = 1058,     /* subpart_option_list  */
  YYSYMBOL_server_part_option = 1059,      /* server_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1060, /* opt_versioning_rotation  */
  YYSYMBOL_1061_74 = 1061,                 /* $@74  */
  YYSYMBOL_opt_versioning_interval_start = 1062, /* opt_versioning_interval_start  */
  YYSYMBOL_opt_vers_auto_part = 1063,      /* opt_vers_auto_part  */
  YYSYMBOL_opt_as = 1064,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1065, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1066, /* create_database_options  */
  YYSYMBOL_create_database_option = 1067,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1068, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1069,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1070,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1071, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1072, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1073,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1074,     /* create_table_option  */
  YYSYMBOL_1075_75 = 1075,                 /* $@75  */
  YYSYMBOL_engine_defined_option = 1076,   /* engine_defined_option  */
  YYSYMBOL_opt_versioning_option = 1077,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1078,       /* versioning_option  */
  YYSYMBOL_default_charset = 1079,         /* default_charset  */
  YYSYMBOL_default_collation = 1080,       /* default_collation  */
  YYSYMBOL_storage_engines = 1081,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1082,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1083,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1084,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1085,                /* udf_type  */
  YYSYMBOL_create_field_list = 1086,       /* create_field_list  */
  YYSYMBOL_create_field_list_parens = 1087, /* create_field_list_parens  */
  YYSYMBOL_field_list = 1088,              /* field_list  */
  YYSYMBOL_field_list_item = 1089,         /* field_list_item  */
  YYSYMBOL_column_def = 1090,              /* column_def  */
  YYSYMBOL_key_def = 1091,                 /* key_def  */
  YYSYMBOL_1092_76 = 1092,                 /* $@76  */
  YYSYMBOL_1093_77 = 1093,                 /* $@77  */
  YYSYMBOL_1094_78 = 1094,                 /* $@78  */
  YYSYMBOL_1095_79 = 1095,                 /* $@79  */
  YYSYMBOL_1096_80 = 1096,                 /* $@80  */
  YYSYMBOL_1097_81 = 1097,                 /* $@81  */
  YYSYMBOL_1098_82 = 1098,                 /* $@82  */
  YYSYMBOL_constraint_def = 1099,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1100,  /* period_for_system_time  */
  YYSYMBOL_period_for_application_time = 1101, /* period_for_application_time  */
  YYSYMBOL_opt_check_constraint = 1102,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1103,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1104,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1105,          /* opt_constraint  */
  YYSYMBOL_constraint = 1106,              /* constraint  */
  YYSYMBOL_field_spec = 1107,              /* field_spec  */
  YYSYMBOL_1108_83 = 1108,                 /* @83  */
  YYSYMBOL_field_type_or_serial = 1109,    /* field_type_or_serial  */
  YYSYMBOL_1110_84 = 1110,                 /* $@84  */
  YYSYMBOL_1111_85 = 1111,                 /* $@85  */
  YYSYMBOL_opt_serial_attribute = 1112,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1113, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1114,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1115, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1116,               /* field_def  */
  YYSYMBOL_1117_86 = 1117,                 /* $@86  */
  YYSYMBOL_opt_generated_always = 1118,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1119,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1120,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1121, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1122,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1123,         /* parse_vcol_expr  */
  YYSYMBOL_1124_87 = 1124,                 /* $@87  */
  YYSYMBOL_parenthesized_expr = 1125,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1126,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1127,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1128,     /* column_default_expr  */
  YYSYMBOL_field_type = 1129,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1130,    /* qualified_field_type  */
  YYSYMBOL_field_type_all = 1131,          /* field_type_all  */
  YYSYMBOL_field_type_numeric = 1132,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1133, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1134,       /* field_type_string  */
  YYSYMBOL_field_type_temporal = 1135,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1136,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1137,         /* field_type_misc  */
  YYSYMBOL_char = 1138,                    /* char  */
  YYSYMBOL_nchar = 1139,                   /* nchar  */
  YYSYMBOL_varchar = 1140,                 /* varchar  */
  YYSYMBOL_nvarchar = 1141,                /* nvarchar  */
  YYSYMBOL_int_type = 1142,                /* int_type  */
  YYSYMBOL_real_type = 1143,               /* real_type  */
  YYSYMBOL_srid_option = 1144,             /* srid_option  */
  YYSYMBOL_float_options = 1145,           /* float_options  */
  YYSYMBOL_precision = 1146,               /* precision  */
  YYSYMBOL_field_options = 1147,           /* field_options  */
  YYSYMBOL_last_field_options = 1148,      /* last_field_options  */
  YYSYMBOL_field_length_str = 1149,        /* field_length_str  */
  YYSYMBOL_field_length = 1150,            /* field_length  */
  YYSYMBOL_field_scale = 1151,             /* field_scale  */
  YYSYMBOL_opt_field_length = 1152,        /* opt_field_length  */
  YYSYMBOL_opt_field_scale = 1153,         /* opt_field_scale  */
  YYSYMBOL_opt_precision = 1154,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1155,          /* attribute_list  */
  YYSYMBOL_attribute = 1156,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1157,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1158,          /* opt_compressed  */
  YYSYMBOL_opt_enable = 1159,              /* opt_enable  */
  YYSYMBOL_compressed = 1160,              /* compressed  */
  YYSYMBOL_compressed_deprecated_data_type_attribute = 1161, /* compressed_deprecated_data_type_attribute  */
  YYSYMBOL_compressed_deprecated_column_attribute = 1162, /* compressed_deprecated_column_attribute  */
  YYSYMBOL_asrow_attribute = 1163,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1164,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1165,  /* with_or_without_system  */
  YYSYMBOL_charset = 1166,                 /* charset  */
  YYSYMBOL_charset_name = 1167,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1168, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1169,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1170, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1171, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1172,          /* collation_name  */
  YYSYMBOL_collation_name_or_default = 1173, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1174,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1175,        /* charset_or_alias  */
  YYSYMBOL_opt_binary = 1176,              /* opt_binary  */
  YYSYMBOL_binary = 1177,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1178,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1179,             /* ws_nweights  */
  YYSYMBOL_1180_88 = 1180,                 /* $@88  */
  YYSYMBOL_ws_level_flag_desc = 1181,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1182,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1183,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1184,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1185,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1186,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1187,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1188,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1189,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1190,             /* opt_primary  */
  YYSYMBOL_references = 1191,              /* references  */
  YYSYMBOL_opt_ref_list = 1192,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1193,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1194,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1195,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1196,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1197,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1198,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1199,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1200,           /* keys_or_index  */
  YYSYMBOL_fulltext = 1201,                /* fulltext  */
  YYSYMBOL_spatial = 1202,                 /* spatial  */
  YYSYMBOL_normal_key_options = 1203,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1204,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1205,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1206,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1207,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1208,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1209, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1210, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1211,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1212,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1213,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1214,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1215,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1216,          /* btree_or_rtree  */
  YYSYMBOL_ignorability = 1217,            /* ignorability  */
  YYSYMBOL_key_list = 1218,                /* key_list  */
  YYSYMBOL_opt_without_overlaps = 1219,    /* opt_without_overlaps  */
  YYSYMBOL_key_part = 1220,                /* key_part  */
  YYSYMBOL_opt_ident = 1221,               /* opt_ident  */
  YYSYMBOL_string_list = 1222,             /* string_list  */
  YYSYMBOL_alter = 1223,                   /* alter  */
  YYSYMBOL_1224_89 = 1224,                 /* $@89  */
  YYSYMBOL_1225_90 = 1225,                 /* $@90  */
  YYSYMBOL_1226_91 = 1226,                 /* $@91  */
  YYSYMBOL_1227_92 = 1227,                 /* $@92  */
  YYSYMBOL_1228_93 = 1228,                 /* $@93  */
  YYSYMBOL_1229_94 = 1229,                 /* $@94  */
  YYSYMBOL_1230_95 = 1230,                 /* $@95  */
  YYSYMBOL_1231_96 = 1231,                 /* $@96  */
  YYSYMBOL_1232_97 = 1232,                 /* $@97  */
  YYSYMBOL_1233_98 = 1233,                 /* $@98  */
  YYSYMBOL_1234_99 = 1234,                 /* $@99  */
  YYSYMBOL_1235_100 = 1235,                /* $@100  */
  YYSYMBOL_1236_101 = 1236,                /* $@101  */
  YYSYMBOL_account_locking_option = 1237,  /* account_locking_option  */
  YYSYMBOL_opt_password_expire_option = 1238, /* opt_password_expire_option  */
  YYSYMBOL_opt_account_locking_and_opt_password_expiration = 1239, /* opt_account_locking_and_opt_password_expiration  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1240, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1241,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1242,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1243,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1244,          /* alter_commands  */
  YYSYMBOL_1245_102 = 1245,                /* $@102  */
  YYSYMBOL_1246_103 = 1246,                /* $@103  */
  YYSYMBOL_1247_104 = 1247,                /* $@104  */
  YYSYMBOL_1248_105 = 1248,                /* $@105  */
  YYSYMBOL_remove_partitioning = 1249,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1250, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1251,      /* add_partition_rule  */
  YYSYMBOL_1252_106 = 1252,                /* $@106  */
  YYSYMBOL_add_part_extra = 1253,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1254,    /* reorg_partition_rule  */
  YYSYMBOL_1255_107 = 1255,                /* $@107  */
  YYSYMBOL_reorg_parts_rule = 1256,        /* reorg_parts_rule  */
  YYSYMBOL_1257_108 = 1257,                /* $@108  */
  YYSYMBOL_alt_part_name_list = 1258,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1259,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1260,              /* alter_list  */
  YYSYMBOL_add_column = 1261,              /* add_column  */
  YYSYMBOL_alter_list_item = 1262,         /* alter_list_item  */
  YYSYMBOL_opt_index_lock_algorithm = 1263, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1264,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1265,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1266,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1267,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1268,           /* alter_options  */
  YYSYMBOL_1269_109 = 1269,                /* $@109  */
  YYSYMBOL_alter_options_part2 = 1270,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1271,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1272,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1273,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1274,               /* opt_place  */
  YYSYMBOL_opt_to = 1275,                  /* opt_to  */
  YYSYMBOL_slave = 1276,                   /* slave  */
  YYSYMBOL_1277_110 = 1277,                /* $@110  */
  YYSYMBOL_1278_111 = 1278,                /* $@111  */
  YYSYMBOL_start = 1279,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1280, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1281, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1282, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1283,       /* slave_thread_opts  */
  YYSYMBOL_1284_112 = 1284,                /* $@112  */
  YYSYMBOL_slave_thread_opt_list = 1285,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1286,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1287,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1288,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1289,                /* checksum  */
  YYSYMBOL_1290_113 = 1290,                /* $@113  */
  YYSYMBOL_opt_checksum_type = 1291,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1292,    /* repair_table_or_view  */
  YYSYMBOL_1293_114 = 1293,                /* $@114  */
  YYSYMBOL_repair = 1294,                  /* repair  */
  YYSYMBOL_1295_115 = 1295,                /* $@115  */
  YYSYMBOL_opt_mi_repair_type = 1296,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1297,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1298,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1299,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1300,                 /* analyze  */
  YYSYMBOL_1301_116 = 1301,                /* $@116  */
  YYSYMBOL_analyze_table_list = 1302,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1303, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1304, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1305,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1306, /* persistent_column_stat_spec  */
  YYSYMBOL_1307_117 = 1307,                /* $@117  */
  YYSYMBOL_persistent_index_stat_spec = 1308, /* persistent_index_stat_spec  */
  YYSYMBOL_1309_118 = 1309,                /* $@118  */
  YYSYMBOL_table_column_list = 1310,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1311,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1312,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1313,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1314,     /* check_view_or_table  */
  YYSYMBOL_1315_119 = 1315,                /* $@119  */
  YYSYMBOL_check = 1316,                   /* check  */
  YYSYMBOL_1317_120 = 1317,                /* $@120  */
  YYSYMBOL_opt_mi_check_type = 1318,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1319,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1320,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1321,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1322,                /* optimize  */
  YYSYMBOL_1323_121 = 1323,                /* $@121  */
  YYSYMBOL_opt_no_write_to_binlog = 1324,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1325,                  /* rename  */
  YYSYMBOL_1326_122 = 1326,                /* $@122  */
  YYSYMBOL_rename_list = 1327,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1328,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1329,          /* table_to_table  */
  YYSYMBOL_keycache = 1330,                /* keycache  */
  YYSYMBOL_1331_123 = 1331,                /* $@123  */
  YYSYMBOL_keycache_list_or_parts = 1332,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1333,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1334,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1335, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1336,          /* key_cache_name  */
  YYSYMBOL_preload = 1337,                 /* preload  */
  YYSYMBOL_1338_124 = 1338,                /* $@124  */
  YYSYMBOL_preload_list_or_parts = 1339,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1340,            /* preload_list  */
  YYSYMBOL_preload_keys = 1341,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1342,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1343,           /* adm_partition  */
  YYSYMBOL_1344_125 = 1344,                /* $@125  */
  YYSYMBOL_cache_keys_spec = 1345,         /* cache_keys_spec  */
  YYSYMBOL_1346_126 = 1346,                /* $@126  */
  YYSYMBOL_cache_key_list_or_empty = 1347, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1348,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1349,                  /* select  */
  YYSYMBOL_1350_127 = 1350,                /* $@127  */
  YYSYMBOL_1351_128 = 1351,                /* $@128  */
  YYSYMBOL_select_into = 1352,             /* select_into  */
  YYSYMBOL_1353_129 = 1353,                /* $@129  */
  YYSYMBOL_1354_130 = 1354,                /* $@130  */
  YYSYMBOL_simple_table = 1355,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 1356, /* table_value_constructor  */
  YYSYMBOL_1357_131 = 1357,                /* $@131  */
  YYSYMBOL_query_specification_start = 1358, /* query_specification_start  */
  YYSYMBOL_1359_132 = 1359,                /* $@132  */
  YYSYMBOL_1360_133 = 1360,                /* $@133  */
  YYSYMBOL_query_specification = 1361,     /* query_specification  */
  YYSYMBOL_select_into_query_specification = 1362, /* select_into_query_specification  */
  YYSYMBOL_query_expression = 1363,        /* query_expression  */
  YYSYMBOL_query_expression_no_with_clause = 1364, /* query_expression_no_with_clause  */
  YYSYMBOL_query_expression_body_ext = 1365, /* query_expression_body_ext  */
  YYSYMBOL_1366_134 = 1366,                /* $@134  */
  YYSYMBOL_1367_135 = 1367,                /* $@135  */
  YYSYMBOL_query_expression_body_ext_parens = 1368, /* query_expression_body_ext_parens  */
  YYSYMBOL_query_expression_body = 1369,   /* query_expression_body  */
  YYSYMBOL_1370_136 = 1370,                /* $@136  */
  YYSYMBOL_query_primary = 1371,           /* query_primary  */
  YYSYMBOL_query_simple = 1372,            /* query_simple  */
  YYSYMBOL_subselect = 1373,               /* subselect  */
  YYSYMBOL_subquery = 1374,                /* subquery  */
  YYSYMBOL_opt_from_clause = 1375,         /* opt_from_clause  */
  YYSYMBOL_from_clause = 1376,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1377,    /* table_reference_list  */
  YYSYMBOL_select_options = 1378,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1379,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1380,           /* history_point  */
  YYSYMBOL_for_portion_of_time_clause = 1381, /* for_portion_of_time_clause  */
  YYSYMBOL_opt_for_portion_of_time_clause = 1382, /* opt_for_portion_of_time_clause  */
  YYSYMBOL_opt_for_system_time_clause = 1383, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1384,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1385,      /* select_option_list  */
  YYSYMBOL_select_option = 1386,           /* select_option  */
  YYSYMBOL_select_lock_type = 1387,        /* select_lock_type  */
  YYSYMBOL_opt_select_lock_type = 1388,    /* opt_select_lock_type  */
  YYSYMBOL_opt_lock_wait_timeout_new = 1389, /* opt_lock_wait_timeout_new  */
  YYSYMBOL_select_item_list = 1390,        /* select_item_list  */
  YYSYMBOL_select_item = 1391,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1392,      /* remember_tok_start  */
  YYSYMBOL_remember_name = 1393,           /* remember_name  */
  YYSYMBOL_remember_end = 1394,            /* remember_end  */
  YYSYMBOL_select_alias = 1395,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1396, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1397,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1398,         /* optional_braces  */
  YYSYMBOL_expr = 1399,                    /* expr  */
  YYSYMBOL_boolean_test = 1400,            /* boolean_test  */
  YYSYMBOL_predicate = 1401,               /* predicate  */
  YYSYMBOL_bit_expr = 1402,                /* bit_expr  */
  YYSYMBOL_or = 1403,                      /* or  */
  YYSYMBOL_and = 1404,                     /* and  */
  YYSYMBOL_not = 1405,                     /* not  */
  YYSYMBOL_not2 = 1406,                    /* not2  */
  YYSYMBOL_comp_op = 1407,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1408,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1409,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1410,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1411,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1412,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1413,      /* string_dyncol_type  */
  YYSYMBOL_dyncall_create_element = 1414,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1415,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1416,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1417,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1418,           /* trim_operands  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1419, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1420,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1421,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1422,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1423, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1424, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1425,   /* function_call_keyword  */
  YYSYMBOL_substring_operands = 1426,      /* substring_operands  */
  YYSYMBOL_function_call_nonkeyword = 1427, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1428,  /* function_call_conflict  */
  YYSYMBOL_function_call_generic = 1429,   /* function_call_generic  */
  YYSYMBOL_1430_137 = 1430,                /* @137  */
  YYSYMBOL_fulltext_options = 1431,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1432, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1433,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1434,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1435,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1436,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1437,                /* sum_expr  */
  YYSYMBOL_1438_138 = 1438,                /* $@138  */
  YYSYMBOL_1439_139 = 1439,                /* $@139  */
  YYSYMBOL_1440_140 = 1440,                /* $@140  */
  YYSYMBOL_1441_141 = 1441,                /* $@141  */
  YYSYMBOL_1442_142 = 1442,                /* $@142  */
  YYSYMBOL_window_func_expr = 1443,        /* window_func_expr  */
  YYSYMBOL_window_func = 1444,             /* window_func  */
  YYSYMBOL_simple_window_func = 1445,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1446, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1447,     /* percentile_function  */
  YYSYMBOL_1448_143 = 1448,                /* $@143  */
  YYSYMBOL_inverse_distribution_function_def = 1449, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1450, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1451,             /* window_name  */
  YYSYMBOL_variable = 1452,                /* variable  */
  YYSYMBOL_1453_144 = 1453,                /* $@144  */
  YYSYMBOL_variable_aux = 1454,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1455,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1456,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1457,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1458,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1459,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause = 1460,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1461,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1462,             /* in_sum_expr  */
  YYSYMBOL_1463_145 = 1463,                /* $@145  */
  YYSYMBOL_cast_type = 1464,               /* cast_type  */
  YYSYMBOL_cast_type_numeric = 1465,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1466,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1467,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1468,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1469,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1470,              /* ident_list  */
  YYSYMBOL_when_list = 1471,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1472,      /* when_list_opt_else  */
  YYSYMBOL_decode_when_list_oracle = 1473, /* decode_when_list_oracle  */
  YYSYMBOL_table_ref = 1474,               /* table_ref  */
  YYSYMBOL_json_text_literal = 1475,       /* json_text_literal  */
  YYSYMBOL_json_text_literal_or_num = 1476, /* json_text_literal_or_num  */
  YYSYMBOL_join_table_list = 1477,         /* join_table_list  */
  YYSYMBOL_json_table_columns_clause = 1478, /* json_table_columns_clause  */
  YYSYMBOL_json_table_columns_list = 1479, /* json_table_columns_list  */
  YYSYMBOL_json_table_column = 1480,       /* json_table_column  */
  YYSYMBOL_1481_146 = 1481,                /* $@146  */
  YYSYMBOL_1482_147 = 1482,                /* $@147  */
  YYSYMBOL_json_table_column_type = 1483,  /* json_table_column_type  */
  YYSYMBOL_json_table_field_type = 1484,   /* json_table_field_type  */
  YYSYMBOL_json_opt_on_empty_or_error = 1485, /* json_opt_on_empty_or_error  */
  YYSYMBOL_json_on_response = 1486,        /* json_on_response  */
  YYSYMBOL_json_on_error_response = 1487,  /* json_on_error_response  */
  YYSYMBOL_json_on_empty_response = 1488,  /* json_on_empty_response  */
  YYSYMBOL_table_function = 1489,          /* table_function  */
  YYSYMBOL_1490_148 = 1490,                /* $@148  */
  YYSYMBOL_1491_149 = 1491,                /* $@149  */
  YYSYMBOL_esc_table_ref = 1492,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1493,      /* derived_table_list  */
  YYSYMBOL_join_table = 1494,              /* join_table  */
  YYSYMBOL_1495_150 = 1495,                /* $@150  */
  YYSYMBOL_1496_151 = 1496,                /* $@151  */
  YYSYMBOL_1497_152 = 1497,                /* $@152  */
  YYSYMBOL_1498_153 = 1498,                /* $@153  */
  YYSYMBOL_1499_154 = 1499,                /* $@154  */
  YYSYMBOL_1500_155 = 1500,                /* $@155  */
  YYSYMBOL_inner_join = 1501,              /* inner_join  */
  YYSYMBOL_normal_join = 1502,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1503,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1504,           /* use_partition  */
  YYSYMBOL_table_factor = 1505,            /* table_factor  */
  YYSYMBOL_table_primary_ident_opt_parens = 1506, /* table_primary_ident_opt_parens  */
  YYSYMBOL_table_primary_derived_opt_parens = 1507, /* table_primary_derived_opt_parens  */
  YYSYMBOL_table_reference_list_parens = 1508, /* table_reference_list_parens  */
  YYSYMBOL_nested_table_reference_list = 1509, /* nested_table_reference_list  */
  YYSYMBOL_join_table_parens = 1510,       /* join_table_parens  */
  YYSYMBOL_table_primary_ident = 1511,     /* table_primary_ident  */
  YYSYMBOL_table_primary_derived = 1512,   /* table_primary_derived  */
  YYSYMBOL_opt_outer = 1513,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1514,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1515,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1516,   /* index_hint_definition  */
  YYSYMBOL_1517_156 = 1517,                /* $@156  */
  YYSYMBOL_1518_157 = 1518,                /* $@157  */
  YYSYMBOL_index_hints_list = 1519,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1520,    /* opt_index_hints_list  */
  YYSYMBOL_1521_158 = 1521,                /* $@158  */
  YYSYMBOL_opt_key_definition = 1522,      /* opt_key_definition  */
  YYSYMBOL_1523_159 = 1523,                /* $@159  */
  YYSYMBOL_opt_key_usage_list = 1524,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1525,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1526,          /* key_usage_list  */
  YYSYMBOL_using_list = 1527,              /* using_list  */
  YYSYMBOL_interval = 1528,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1529,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1530,          /* date_time_type  */
  YYSYMBOL_table_alias = 1531,             /* table_alias  */
  YYSYMBOL_opt_table_alias_clause = 1532,  /* opt_table_alias_clause  */
  YYSYMBOL_table_alias_clause = 1533,      /* table_alias_clause  */
  YYSYMBOL_opt_all = 1534,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1535,        /* opt_where_clause  */
  YYSYMBOL_1536_160 = 1536,                /* $@160  */
  YYSYMBOL_opt_having_clause = 1537,       /* opt_having_clause  */
  YYSYMBOL_1538_161 = 1538,                /* $@161  */
  YYSYMBOL_opt_group_clause = 1539,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1540,              /* group_list  */
  YYSYMBOL_olap_opt = 1541,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1542,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1543,         /* window_def_list  */
  YYSYMBOL_window_def = 1544,              /* window_def  */
  YYSYMBOL_window_spec = 1545,             /* window_spec  */
  YYSYMBOL_1546_162 = 1546,                /* $@162  */
  YYSYMBOL_opt_window_ref = 1547,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1548, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1549, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1550, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1551,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1552,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1553,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1554,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1555, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1556,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1557,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1558,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1559,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1560,            /* order_clause  */
  YYSYMBOL_1561_163 = 1561,                /* $@163  */
  YYSYMBOL_order_list = 1562,              /* order_list  */
  YYSYMBOL_order_dir = 1563,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1564,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause = 1565,            /* limit_clause  */
  YYSYMBOL_fetch_first_clause = 1566,      /* fetch_first_clause  */
  YYSYMBOL_first_or_next = 1567,           /* first_or_next  */
  YYSYMBOL_row_or_rows = 1568,             /* row_or_rows  */
  YYSYMBOL_only_or_with_ties = 1569,       /* only_or_with_ties  */
  YYSYMBOL_opt_global_limit_clause = 1570, /* opt_global_limit_clause  */
  YYSYMBOL_limit_options = 1571,           /* limit_options  */
  YYSYMBOL_limit_option = 1572,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1573,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1574,     /* delete_limit_clause  */
  YYSYMBOL_order_limit_lock = 1575,        /* order_limit_lock  */
  YYSYMBOL_opt_order_limit_lock = 1576,    /* opt_order_limit_lock  */
  YYSYMBOL_query_expression_tail = 1577,   /* query_expression_tail  */
  YYSYMBOL_opt_query_expression_tail = 1578, /* opt_query_expression_tail  */
  YYSYMBOL_opt_procedure_or_into = 1579,   /* opt_procedure_or_into  */
  YYSYMBOL_order_or_limit = 1580,          /* order_or_limit  */
  YYSYMBOL_opt_plus = 1581,                /* opt_plus  */
  YYSYMBOL_int_num = 1582,                 /* int_num  */
  YYSYMBOL_ulong_num = 1583,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1584,          /* real_ulong_num  */
  YYSYMBOL_longlong_num = 1585,            /* longlong_num  */
  YYSYMBOL_ulonglong_num = 1586,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1587,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1588,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1589,                 /* dec_num  */
  YYSYMBOL_choice = 1590,                  /* choice  */
  YYSYMBOL_bool = 1591,                    /* bool  */
  YYSYMBOL_procedure_clause = 1592,        /* procedure_clause  */
  YYSYMBOL_1593_164 = 1593,                /* $@164  */
  YYSYMBOL_procedure_list = 1594,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1595,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1596,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1597,    /* select_var_list_init  */
  YYSYMBOL_1598_165 = 1598,                /* $@165  */
  YYSYMBOL_select_var_list = 1599,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1600,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1601,           /* select_outvar  */
  YYSYMBOL_into = 1602,                    /* into  */
  YYSYMBOL_into_destination = 1603,        /* into_destination  */
  YYSYMBOL_1604_166 = 1604,                /* $@166  */
  YYSYMBOL_1605_167 = 1605,                /* $@167  */
  YYSYMBOL_do = 1606,                      /* do  */
  YYSYMBOL_1607_168 = 1607,                /* $@168  */
  YYSYMBOL_drop = 1608,                    /* drop  */
  YYSYMBOL_1609_169 = 1609,                /* $@169  */
  YYSYMBOL_1610_170 = 1610,                /* $@170  */
  YYSYMBOL_1611_171 = 1611,                /* $@171  */
  YYSYMBOL_1612_172 = 1612,                /* $@172  */
  YYSYMBOL_table_list = 1613,              /* table_list  */
  YYSYMBOL_table_name = 1614,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1615, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1616,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1617,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1618, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1619,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1620,           /* opt_temporary  */
  YYSYMBOL_insert = 1621,                  /* insert  */
  YYSYMBOL_1622_173 = 1622,                /* $@173  */
  YYSYMBOL_1623_174 = 1623,                /* $@174  */
  YYSYMBOL_replace = 1624,                 /* replace  */
  YYSYMBOL_1625_175 = 1625,                /* $@175  */
  YYSYMBOL_1626_176 = 1626,                /* $@176  */
  YYSYMBOL_insert_start = 1627,            /* insert_start  */
  YYSYMBOL_stmt_end = 1628,                /* stmt_end  */
  YYSYMBOL_insert_lock_option = 1629,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1630,     /* replace_lock_option  */
  YYSYMBOL_insert_replace_option = 1631,   /* insert_replace_option  */
  YYSYMBOL_opt_into = 1632,                /* opt_into  */
  YYSYMBOL_insert_table = 1633,            /* insert_table  */
  YYSYMBOL_1634_177 = 1634,                /* $@177  */
  YYSYMBOL_insert_field_spec = 1635,       /* insert_field_spec  */
  YYSYMBOL_1636_178 = 1636,                /* $@178  */
  YYSYMBOL_insert_field_list = 1637,       /* insert_field_list  */
  YYSYMBOL_opt_fields = 1638,              /* opt_fields  */
  YYSYMBOL_fields = 1639,                  /* fields  */
  YYSYMBOL_insert_values = 1640,           /* insert_values  */
  YYSYMBOL_values_list = 1641,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1642,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1643,          /* ident_eq_value  */
  YYSYMBOL_equal = 1644,                   /* equal  */
  YYSYMBOL_opt_equal = 1645,               /* opt_equal  */
  YYSYMBOL_opt_with = 1646,                /* opt_with  */
  YYSYMBOL_opt_by = 1647,                  /* opt_by  */
  YYSYMBOL_no_braces = 1648,               /* no_braces  */
  YYSYMBOL_1649_179 = 1649,                /* $@179  */
  YYSYMBOL_no_braces_with_names = 1650,    /* no_braces_with_names  */
  YYSYMBOL_1651_180 = 1651,                /* $@180  */
  YYSYMBOL_opt_values = 1652,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1653,   /* opt_values_with_names  */
  YYSYMBOL_values = 1654,                  /* values  */
  YYSYMBOL_values_with_names = 1655,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1656,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1657, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1658,       /* opt_insert_update  */
  YYSYMBOL_1659_181 = 1659,                /* $@181  */
  YYSYMBOL_1660_182 = 1660,                /* $@182  */
  YYSYMBOL_update_table_list = 1661,       /* update_table_list  */
  YYSYMBOL_update = 1662,                  /* update  */
  YYSYMBOL_1663_183 = 1663,                /* $@183  */
  YYSYMBOL_1664_184 = 1664,                /* $@184  */
  YYSYMBOL_1665_185 = 1665,                /* $@185  */
  YYSYMBOL_update_list = 1666,             /* update_list  */
  YYSYMBOL_update_elem = 1667,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1668,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1669,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1670,        /* opt_low_priority  */
  YYSYMBOL_delete = 1671,                  /* delete  */
  YYSYMBOL_1672_186 = 1672,                /* $@186  */
  YYSYMBOL_opt_delete_system_time = 1673,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1674,            /* delete_part2  */
  YYSYMBOL_delete_single_table = 1675,     /* delete_single_table  */
  YYSYMBOL_delete_single_table_for_period = 1676, /* delete_single_table_for_period  */
  YYSYMBOL_single_multi = 1677,            /* single_multi  */
  YYSYMBOL_1678_187 = 1678,                /* $@187  */
  YYSYMBOL_1679_188 = 1679,                /* $@188  */
  YYSYMBOL_1680_189 = 1680,                /* $@189  */
  YYSYMBOL_1681_190 = 1681,                /* $@190  */
  YYSYMBOL_opt_returning = 1682,           /* opt_returning  */
  YYSYMBOL_1683_191 = 1683,                /* $@191  */
  YYSYMBOL_table_wild_list = 1684,         /* table_wild_list  */
  YYSYMBOL_table_wild_one = 1685,          /* table_wild_one  */
  YYSYMBOL_opt_wild = 1686,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1687,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1688,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1689,                /* truncate  */
  YYSYMBOL_1690_192 = 1690,                /* $@192  */
  YYSYMBOL_1691_193 = 1691,                /* $@193  */
  YYSYMBOL_opt_table_sym = 1692,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1693,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1694,            /* profile_defs  */
  YYSYMBOL_profile_def = 1695,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1696,        /* opt_profile_args  */
  YYSYMBOL_show = 1697,                    /* show  */
  YYSYMBOL_1698_194 = 1698,                /* $@194  */
  YYSYMBOL_show_param = 1699,              /* show_param  */
  YYSYMBOL_1700_195 = 1700,                /* $@195  */
  YYSYMBOL_1701_196 = 1701,                /* $@196  */
  YYSYMBOL_show_engine_param = 1702,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1703,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1704,             /* opt_storage  */
  YYSYMBOL_opt_db = 1705,                  /* opt_db  */
  YYSYMBOL_opt_full = 1706,                /* opt_full  */
  YYSYMBOL_from_or_in = 1707,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1708,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1709,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1710,          /* wild_and_where  */
  YYSYMBOL_describe = 1711,                /* describe  */
  YYSYMBOL_1712_197 = 1712,                /* $@197  */
  YYSYMBOL_1713_198 = 1713,                /* $@198  */
  YYSYMBOL_explainable_command = 1714,     /* explainable_command  */
  YYSYMBOL_describe_command = 1715,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1716,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1717,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1718,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1719,     /* opt_describe_column  */
  YYSYMBOL_explain_for_connection = 1720,  /* explain_for_connection  */
  YYSYMBOL_flush = 1721,                   /* flush  */
  YYSYMBOL_1722_199 = 1722,                /* $@199  */
  YYSYMBOL_flush_options = 1723,           /* flush_options  */
  YYSYMBOL_1724_200 = 1724,                /* $@200  */
  YYSYMBOL_opt_flush_lock = 1725,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1726,              /* flush_lock  */
  YYSYMBOL_1727_201 = 1727,                /* $@201  */
  YYSYMBOL_flush_options_list = 1728,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1729,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1730,          /* opt_table_list  */
  YYSYMBOL_backup = 1731,                  /* backup  */
  YYSYMBOL_backup_statements = 1732,       /* backup_statements  */
  YYSYMBOL_1733_202 = 1733,                /* $@202  */
  YYSYMBOL_opt_delete_gtid_domain = 1734,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1735,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1736,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1737, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1738,                   /* reset  */
  YYSYMBOL_1739_203 = 1739,                /* $@203  */
  YYSYMBOL_reset_options = 1740,           /* reset_options  */
  YYSYMBOL_reset_option = 1741,            /* reset_option  */
  YYSYMBOL_1742_204 = 1742,                /* $@204  */
  YYSYMBOL_1743_205 = 1743,                /* $@205  */
  YYSYMBOL_slave_reset_options = 1744,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1745,    /* master_reset_options  */
  YYSYMBOL_purge = 1746,                   /* purge  */
  YYSYMBOL_1747_206 = 1747,                /* $@206  */
  YYSYMBOL_kill = 1748,                    /* kill  */
  YYSYMBOL_1749_207 = 1749,                /* $@207  */
  YYSYMBOL_kill_type = 1750,               /* kill_type  */
  YYSYMBOL_kill_option = 1751,             /* kill_option  */
  YYSYMBOL_opt_connection = 1752,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1753,               /* kill_expr  */
  YYSYMBOL_shutdown = 1754,                /* shutdown  */
  YYSYMBOL_1755_208 = 1755,                /* $@208  */
  YYSYMBOL_shutdown_option = 1756,         /* shutdown_option  */
  YYSYMBOL_use = 1757,                     /* use  */
  YYSYMBOL_load = 1758,                    /* load  */
  YYSYMBOL_1759_209 = 1759,                /* $@209  */
  YYSYMBOL_1760_210 = 1760,                /* $@210  */
  YYSYMBOL_1761_211 = 1761,                /* $@211  */
  YYSYMBOL_1762_212 = 1762,                /* $@212  */
  YYSYMBOL_data_or_xml = 1763,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1764,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1765,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1766,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1767,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1768,         /* field_term_list  */
  YYSYMBOL_field_term = 1769,              /* field_term  */
  YYSYMBOL_opt_line_term = 1770,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1771,          /* line_term_list  */
  YYSYMBOL_line_term = 1772,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1773, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1774,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1775,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1776,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1777,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1778,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1779,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1780,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1781,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1782,            /* text_literal  */
  YYSYMBOL_text_string = 1783,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1784,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1785,            /* param_marker  */
  YYSYMBOL_signed_literal = 1786,          /* signed_literal  */
  YYSYMBOL_literal = 1787,                 /* literal  */
  YYSYMBOL_NUM_literal = 1788,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1789,        /* temporal_literal  */
  YYSYMBOL_with_clause = 1790,             /* with_clause  */
  YYSYMBOL_1791_213 = 1791,                /* $@213  */
  YYSYMBOL_opt_recursive = 1792,           /* opt_recursive  */
  YYSYMBOL_with_list = 1793,               /* with_list  */
  YYSYMBOL_with_list_element = 1794,       /* with_list_element  */
  YYSYMBOL_opt_cycle = 1795,               /* opt_cycle  */
  YYSYMBOL_1796_214 = 1796,                /* $@214  */
  YYSYMBOL_opt_with_column_list = 1797,    /* opt_with_column_list  */
  YYSYMBOL_with_column_list = 1798,        /* with_column_list  */
  YYSYMBOL_ident_sys_alloc = 1799,         /* ident_sys_alloc  */
  YYSYMBOL_comma_separated_ident_list = 1800, /* comma_separated_ident_list  */
  YYSYMBOL_with_element_head = 1801,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1802,            /* insert_ident  */
  YYSYMBOL_table_wild = 1803,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1804, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1805,             /* order_ident  */
  YYSYMBOL_simple_ident = 1806,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1807,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1808,             /* field_ident  */
  YYSYMBOL_table_ident = 1809,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1810,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1811,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1812,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1813,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1814,               /* IDENT_sys  */
  YYSYMBOL_TEXT_STRING_sys = 1815,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1816,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1817,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1818,       /* ident_table_alias  */
  YYSYMBOL_ident_cli_set_usual_case = 1819, /* ident_cli_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1820,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1821,                   /* ident  */
  YYSYMBOL_label_ident = 1822,             /* label_ident  */
  YYSYMBOL_ident_or_text = 1823,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1824,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1825,            /* user_or_role  */
  YYSYMBOL_user = 1826,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1827,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1828,           /* keyword_ident  */
  YYSYMBOL_keyword_sysvar_name = 1829,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_set_usual_case = 1830,  /* keyword_set_usual_case  */
  YYSYMBOL_non_reserved_keyword_udt = 1831, /* non_reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_var_not_label = 1832, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1833,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1834,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1835, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sysvar_type = 1836,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1837,       /* keyword_data_type  */
  YYSYMBOL_keyword_cast_type = 1838,       /* keyword_cast_type  */
  YYSYMBOL_keyword_sp_var_and_label = 1839, /* keyword_sp_var_and_label  */
  YYSYMBOL_reserved_keyword_udt_not_param_type = 1840, /* reserved_keyword_udt_not_param_type  */
  YYSYMBOL_set = 1841,                     /* set  */
  YYSYMBOL_1842_215 = 1842,                /* $@215  */
  YYSYMBOL_set_param = 1843,               /* set_param  */
  YYSYMBOL_1844_216 = 1844,                /* $@216  */
  YYSYMBOL_1845_217 = 1845,                /* $@217  */
  YYSYMBOL_1846_218 = 1846,                /* $@218  */
  YYSYMBOL_set_stmt_option_list = 1847,    /* set_stmt_option_list  */
  YYSYMBOL_start_option_value_list_following_option_type = 1848, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1849_219 = 1849,                /* $@219  */
  YYSYMBOL_option_value_list = 1850,       /* option_value_list  */
  YYSYMBOL_option_value = 1851,            /* option_value  */
  YYSYMBOL_1852_220 = 1852,                /* $@220  */
  YYSYMBOL_option_type = 1853,             /* option_type  */
  YYSYMBOL_opt_var_type = 1854,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1855,      /* opt_var_ident_type  */
  YYSYMBOL_set_stmt_option = 1856,         /* set_stmt_option  */
  YYSYMBOL_1857_221 = 1857,                /* $@221  */
  YYSYMBOL_1858_222 = 1858,                /* $@222  */
  YYSYMBOL_1859_223 = 1859,                /* $@223  */
  YYSYMBOL_option_value_following_option_type = 1860, /* option_value_following_option_type  */
  YYSYMBOL_1861_224 = 1861,                /* $@224  */
  YYSYMBOL_1862_225 = 1862,                /* $@225  */
  YYSYMBOL_1863_226 = 1863,                /* $@226  */
  YYSYMBOL_option_value_no_option_type = 1864, /* option_value_no_option_type  */
  YYSYMBOL_1865_227 = 1865,                /* $@227  */
  YYSYMBOL_1866_228 = 1866,                /* $@228  */
  YYSYMBOL_1867_229 = 1867,                /* $@229  */
  YYSYMBOL_1868_230 = 1868,                /* $@230  */
  YYSYMBOL_1869_231 = 1869,                /* $@231  */
  YYSYMBOL_1870_232 = 1870,                /* $@232  */
  YYSYMBOL_1871_233 = 1871,                /* $@233  */
  YYSYMBOL_1872_234 = 1872,                /* $@234  */
  YYSYMBOL_1873_235 = 1873,                /* $@235  */
  YYSYMBOL_1874_236 = 1874,                /* $@236  */
  YYSYMBOL_transaction_characteristics = 1875, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1876, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1877,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1878, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1879,         /* isolation_types  */
  YYSYMBOL_text_or_password = 1880,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1881,     /* set_expr_or_default  */
  YYSYMBOL_lock = 1882,                    /* lock  */
  YYSYMBOL_1883_237 = 1883,                /* $@237  */
  YYSYMBOL_opt_lock_wait_timeout = 1884,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1885,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1886,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1887,              /* table_lock  */
  YYSYMBOL_lock_option = 1888,             /* lock_option  */
  YYSYMBOL_unlock = 1889,                  /* unlock  */
  YYSYMBOL_1890_238 = 1890,                /* $@238  */
  YYSYMBOL_handler = 1891,                 /* handler  */
  YYSYMBOL_1892_239 = 1892,                /* $@239  */
  YYSYMBOL_handler_tail = 1893,            /* handler_tail  */
  YYSYMBOL_1894_240 = 1894,                /* $@240  */
  YYSYMBOL_handler_read_or_scan = 1895,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1896,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1897,   /* handler_rkey_function  */
  YYSYMBOL_1898_241 = 1898,                /* $@241  */
  YYSYMBOL_handler_rkey_mode = 1899,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1900,                  /* revoke  */
  YYSYMBOL_revoke_command = 1901,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1902,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1903,                   /* grant  */
  YYSYMBOL_grant_command = 1904,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1905,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1906,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1907,               /* role_list  */
  YYSYMBOL_current_role = 1908,            /* current_role  */
  YYSYMBOL_role_name = 1909,               /* role_name  */
  YYSYMBOL_grant_role = 1910,              /* grant_role  */
  YYSYMBOL_opt_table = 1911,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1912,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1913,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1914,   /* object_privilege_list  */
  YYSYMBOL_column_list_privilege = 1915,   /* column_list_privilege  */
  YYSYMBOL_column_privilege = 1916,        /* column_privilege  */
  YYSYMBOL_object_privilege = 1917,        /* object_privilege  */
  YYSYMBOL_opt_and = 1918,                 /* opt_and  */
  YYSYMBOL_require_list = 1919,            /* require_list  */
  YYSYMBOL_require_list_element = 1920,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1921,             /* grant_ident  */
  YYSYMBOL_user_list = 1922,               /* user_list  */
  YYSYMBOL_grant_list = 1923,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1924,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1925,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1926,             /* using_or_as  */
  YYSYMBOL_grant_user = 1927,              /* grant_user  */
  YYSYMBOL_auth_expression = 1928,         /* auth_expression  */
  YYSYMBOL_auth_token = 1929,              /* auth_token  */
  YYSYMBOL_opt_auth_str = 1930,            /* opt_auth_str  */
  YYSYMBOL_opt_require_clause = 1931,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1932,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1933,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 1934,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 1935,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 1936,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 1937,       /* grant_option_list  */
  YYSYMBOL_grant_option = 1938,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 1939,      /* begin_stmt_mariadb  */
  YYSYMBOL_1940_242 = 1940,                /* $@242  */
  YYSYMBOL_compound_statement = 1941,      /* compound_statement  */
  YYSYMBOL_opt_not = 1942,                 /* opt_not  */
  YYSYMBOL_opt_work = 1943,                /* opt_work  */
  YYSYMBOL_opt_chain = 1944,               /* opt_chain  */
  YYSYMBOL_opt_release = 1945,             /* opt_release  */
  YYSYMBOL_commit = 1946,                  /* commit  */
  YYSYMBOL_rollback = 1947,                /* rollback  */
  YYSYMBOL_savepoint = 1948,               /* savepoint  */
  YYSYMBOL_release = 1949,                 /* release  */
  YYSYMBOL_unit_type_decl = 1950,          /* unit_type_decl  */
  YYSYMBOL_union_option = 1951,            /* union_option  */
  YYSYMBOL_query_expression_option = 1952, /* query_expression_option  */
  YYSYMBOL_definer_opt = 1953,             /* definer_opt  */
  YYSYMBOL_no_definer = 1954,              /* no_definer  */
  YYSYMBOL_definer = 1955,                 /* definer  */
  YYSYMBOL_view_algorithm = 1956,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 1957,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 1958,               /* view_suid  */
  YYSYMBOL_view_list_opt = 1959,           /* view_list_opt  */
  YYSYMBOL_view_list = 1960,               /* view_list  */
  YYSYMBOL_view_select = 1961,             /* view_select  */
  YYSYMBOL_1962_243 = 1962,                /* $@243  */
  YYSYMBOL_view_check_option = 1963,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 1964,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 1965, /* trigger_follows_precedes_clause  */
  YYSYMBOL_trigger_tail = 1966,            /* trigger_tail  */
  YYSYMBOL_1967_244 = 1967,                /* $@244  */
  YYSYMBOL_1968_245 = 1968,                /* $@245  */
  YYSYMBOL_1969_246 = 1969,                /* $@246  */
  YYSYMBOL_1970_247 = 1970,                /* $@247  */
  YYSYMBOL_1971_248 = 1971,                /* $@248  */
  YYSYMBOL_sf_return_type = 1972,          /* sf_return_type  */
  YYSYMBOL_1973_249 = 1973,                /* $@249  */
  YYSYMBOL_xa = 1974,                      /* xa  */
  YYSYMBOL_opt_format_xid = 1975,          /* opt_format_xid  */
  YYSYMBOL_xid = 1976,                     /* xid  */
  YYSYMBOL_begin_or_start = 1977,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 1978,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 1979,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 1980,             /* opt_suspend  */
  YYSYMBOL_1981_250 = 1981,                /* $@250  */
  YYSYMBOL_opt_migrate = 1982,             /* opt_migrate  */
  YYSYMBOL_install = 1983,                 /* install  */
  YYSYMBOL_uninstall = 1984,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 1985,          /* keep_gcc_happy  */
  YYSYMBOL__empty = 1986,                  /* _empty  */
  YYSYMBOL_statement = 1987,               /* statement  */
  YYSYMBOL_sp_statement = 1988,            /* sp_statement  */
  YYSYMBOL_1989_251 = 1989,                /* $@251  */
  YYSYMBOL_1990_252 = 1990,                /* $@252  */
  YYSYMBOL_1991_253 = 1991,                /* $@253  */
  YYSYMBOL_sp_if_then_statements = 1992,   /* sp_if_then_statements  */
  YYSYMBOL_sp_case_then_statements = 1993, /* sp_case_then_statements  */
  YYSYMBOL_reserved_keyword_udt = 1994,    /* reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_block_section = 1995, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_label = 1996,           /* keyword_label  */
  YYSYMBOL_keyword_sp_decl = 1997,         /* keyword_sp_decl  */
  YYSYMBOL_opt_truncate_table_storage_clause = 1998, /* opt_truncate_table_storage_clause  */
  YYSYMBOL_ident_for_loop_index = 1999,    /* ident_for_loop_index  */
  YYSYMBOL_row_field_name = 2000,          /* row_field_name  */
  YYSYMBOL_while_body = 2001,              /* while_body  */
  YYSYMBOL_2002_254 = 2002,                /* $@254  */
  YYSYMBOL_for_loop_statements = 2003,     /* for_loop_statements  */
  YYSYMBOL_sp_control_label = 2004,        /* sp_control_label  */
  YYSYMBOL_sp_block_label = 2005,          /* sp_block_label  */
  YYSYMBOL_remember_end_opt = 2006,        /* remember_end_opt  */
  YYSYMBOL_sp_opt_default = 2007,          /* sp_opt_default  */
  YYSYMBOL_sp_opt_inout = 2008,            /* sp_opt_inout  */
  YYSYMBOL_sp_proc_stmts1_implicit_block = 2009, /* sp_proc_stmts1_implicit_block  */
  YYSYMBOL_2010_255 = 2010,                /* $@255  */
  YYSYMBOL_remember_lex = 2011,            /* remember_lex  */
  YYSYMBOL_keyword_directly_assignable = 2012, /* keyword_directly_assignable  */
  YYSYMBOL_ident_directly_assignable = 2013, /* ident_directly_assignable  */
  YYSYMBOL_ident_cli_directly_assignable = 2014, /* ident_cli_directly_assignable  */
  YYSYMBOL_set_assign = 2015,              /* set_assign  */
  YYSYMBOL_2016_256 = 2016,                /* $@256  */
  YYSYMBOL_2017_257 = 2017,                /* $@257  */
  YYSYMBOL_2018_258 = 2018,                /* $@258  */
  YYSYMBOL_labels_declaration_oracle = 2019, /* labels_declaration_oracle  */
  YYSYMBOL_label_declaration_oracle = 2020, /* label_declaration_oracle  */
  YYSYMBOL_opt_exception_clause = 2021,    /* opt_exception_clause  */
  YYSYMBOL_exception_handlers = 2022,      /* exception_handlers  */
  YYSYMBOL_exception_handler = 2023,       /* exception_handler  */
  YYSYMBOL_2024_259 = 2024,                /* $@259  */
  YYSYMBOL_sp_no_param = 2025,             /* sp_no_param  */
  YYSYMBOL_opt_sp_parenthesized_fdparam_list = 2026, /* opt_sp_parenthesized_fdparam_list  */
  YYSYMBOL_opt_sp_parenthesized_pdparam_list = 2027, /* opt_sp_parenthesized_pdparam_list  */
  YYSYMBOL_opt_sp_name = 2028,             /* opt_sp_name  */
  YYSYMBOL_opt_package_routine_end_name = 2029, /* opt_package_routine_end_name  */
  YYSYMBOL_sp_tail_is = 2030,              /* sp_tail_is  */
  YYSYMBOL_sp_instr_addr = 2031,           /* sp_instr_addr  */
  YYSYMBOL_sp_body = 2032,                 /* sp_body  */
  YYSYMBOL_2033_260 = 2033,                /* $@260  */
  YYSYMBOL_2034_261 = 2034,                /* $@261  */
  YYSYMBOL_2035_262 = 2035,                /* $@262  */
  YYSYMBOL_create_package_chistic = 2036,  /* create_package_chistic  */
  YYSYMBOL_create_package_chistics = 2037, /* create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics = 2038, /* opt_create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics_init = 2039, /* opt_create_package_chistics_init  */
  YYSYMBOL_2040_263 = 2040,                /* $@263  */
  YYSYMBOL_package_implementation_executable_section = 2041, /* package_implementation_executable_section  */
  YYSYMBOL_package_implementation_declare_section = 2042, /* package_implementation_declare_section  */
  YYSYMBOL_package_implementation_declare_section_list1 = 2043, /* package_implementation_declare_section_list1  */
  YYSYMBOL_package_implementation_declare_section_list2 = 2044, /* package_implementation_declare_section_list2  */
  YYSYMBOL_package_routine_lex = 2045,     /* package_routine_lex  */
  YYSYMBOL_package_specification_function = 2046, /* package_specification_function  */
  YYSYMBOL_2047_264 = 2047,                /* $@264  */
  YYSYMBOL_package_specification_procedure = 2048, /* package_specification_procedure  */
  YYSYMBOL_2049_265 = 2049,                /* $@265  */
  YYSYMBOL_package_implementation_routine_definition = 2050, /* package_implementation_routine_definition  */
  YYSYMBOL_package_implementation_function_body = 2051, /* package_implementation_function_body  */
  YYSYMBOL_2052_266 = 2052,                /* $@266  */
  YYSYMBOL_package_implementation_procedure_body = 2053, /* package_implementation_procedure_body  */
  YYSYMBOL_2054_267 = 2054,                /* $@267  */
  YYSYMBOL_package_implementation_item_declaration = 2055, /* package_implementation_item_declaration  */
  YYSYMBOL_opt_package_specification_element_list = 2056, /* opt_package_specification_element_list  */
  YYSYMBOL_package_specification_element_list = 2057, /* package_specification_element_list  */
  YYSYMBOL_package_specification_element = 2058, /* package_specification_element  */
  YYSYMBOL_sp_decl_variable_list_anchored = 2059, /* sp_decl_variable_list_anchored  */
  YYSYMBOL_sp_param_name_and_mode = 2060,  /* sp_param_name_and_mode  */
  YYSYMBOL_sp_param = 2061,                /* sp_param  */
  YYSYMBOL_sp_param_anchored = 2062,       /* sp_param_anchored  */
  YYSYMBOL_sf_c_chistics_and_body_standalone = 2063, /* sf_c_chistics_and_body_standalone  */
  YYSYMBOL_2064_268 = 2064,                /* $@268  */
  YYSYMBOL_sp_tail_standalone = 2065,      /* sp_tail_standalone  */
  YYSYMBOL_2066_269 = 2066,                /* $@269  */
  YYSYMBOL_2067_270 = 2067,                /* $@270  */
  YYSYMBOL_drop_routine = 2068,            /* drop_routine  */
  YYSYMBOL_create_routine = 2069,          /* create_routine  */
  YYSYMBOL_2070_271 = 2070,                /* $@271  */
  YYSYMBOL_2071_272 = 2071,                /* $@272  */
  YYSYMBOL_2072_273 = 2072,                /* $@273  */
  YYSYMBOL_2073_274 = 2073,                /* $@274  */
  YYSYMBOL_2074_275 = 2074,                /* $@275  */
  YYSYMBOL_2075_276 = 2075,                /* $@276  */
  YYSYMBOL_2076_277 = 2076,                /* $@277  */
  YYSYMBOL_opt_sp_decl_body_list = 2077,   /* opt_sp_decl_body_list  */
  YYSYMBOL_sp_decl_body_list = 2078,       /* sp_decl_body_list  */
  YYSYMBOL_2079_278 = 2079,                /* $@278  */
  YYSYMBOL_sp_decl_non_handler_list = 2080, /* sp_decl_non_handler_list  */
  YYSYMBOL_sp_decl_handler_list = 2081,    /* sp_decl_handler_list  */
  YYSYMBOL_opt_sp_decl_handler_list = 2082, /* opt_sp_decl_handler_list  */
  YYSYMBOL_sp_decl_non_handler = 2083,     /* sp_decl_non_handler  */
  YYSYMBOL_2084_279 = 2084,                /* $@279  */
  YYSYMBOL_sp_proc_stmt = 2085,            /* sp_proc_stmt  */
  YYSYMBOL_sp_labelable_stmt = 2086,       /* sp_labelable_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 2087, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_labeled_block = 2088,        /* sp_labeled_block  */
  YYSYMBOL_2089_280 = 2089,                /* $@280  */
  YYSYMBOL_2090_281 = 2090,                /* $@281  */
  YYSYMBOL_2091_282 = 2091,                /* $@282  */
  YYSYMBOL_opt_not_atomic = 2092,          /* opt_not_atomic  */
  YYSYMBOL_sp_unlabeled_block = 2093,      /* sp_unlabeled_block  */
  YYSYMBOL_2094_283 = 2094,                /* $@283  */
  YYSYMBOL_2095_284 = 2095,                /* $@284  */
  YYSYMBOL_2096_285 = 2096,                /* $@285  */
  YYSYMBOL_sp_block_statements_and_exceptions = 2097, /* sp_block_statements_and_exceptions  */
  YYSYMBOL_2098_286 = 2098                 /* $@286  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 335 "/home/buildbot/git/sql/sql_yacc.yy"

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  760
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   107766

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  794
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1305
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3838
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6469

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1027


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   789,     2,     2,     2,   778,   773,     2,
     785,   786,   776,   775,   788,   774,   793,   777,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   792,
     771,   769,   770,     2,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   779,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   790,   772,   791,   780,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   781,   782,   783,   784,   787
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  1908,  1908,  1918,  1917,  1942,  1949,  1951,  1955,  1956,
    1957,  1962,  1963,  1964,  1965,  1966,  1967,  1968,  1969,  1970,
    1971,  1972,  1973,  1974,  1975,  1976,  1977,  1978,  1979,  1980,
    1981,  1982,  1983,  1984,  1985,  1986,  1987,  1988,  1989,  1990,
    1991,  1992,  1993,  1994,  1995,  1996,  1997,  1998,  1999,  2000,
    2001,  2002,  2003,  2004,  2005,  2006,  2007,  2008,  2009,  2010,
    2011,  2012,  2013,  2014,  2015,  2016,  2017,  2018,  2019,  2020,
    2021,  2025,  2032,  2033,  2038,  2037,  2048,  2054,  2056,  2053,
    2065,  2067,  2066,  2076,  2081,  2093,  2092,  2109,  2108,  2118,
    2119,  2123,  2127,  2131,  2135,  2139,  2143,  2153,  2158,  2162,
    2166,  2170,  2174,  2178,  2183,  2187,  2192,  2220,  2224,  2228,
    2233,  2236,  2238,  2239,  2243,  2249,  2251,  2252,  2256,  2262,
    2264,  2265,  2269,  2276,  2280,  2295,  2299,  2305,  2311,  2317,
    2323,  2331,  2335,  2339,  2351,  2354,  2359,  2381,  2393,  2380,
    2416,  2415,  2471,  2478,  2470,  2490,  2497,  2489,  2510,  2516,
    2509,  2528,  2534,  2527,  2546,  2545,  2559,  2557,  2573,  2571,
    2585,  2584,  2595,  2594,  2604,  2611,  2618,  2618,  2621,  2625,
    2626,  2630,  2631,  2635,  2640,  2646,  2652,  2660,  2666,  2672,
    2680,  2688,  2696,  2704,  2712,  2720,  2732,  2748,  2748,  2752,
    2751,  2763,  2764,  2768,  2773,  2778,  2783,  2788,  2793,  2798,
    2806,  2805,  2838,  2837,  2844,  2851,  2852,  2858,  2864,  2874,
    2880,  2886,  2888,  2895,  2896,  2900,  2910,  2911,  2919,  2919,
    2961,  2970,  2971,  2976,  2977,  2978,  2979,  2984,  2989,  2997,
    2998,  3002,  3003,  3008,  3010,  3012,  3014,  3016,  3018,  3020,
    3026,  3027,  3031,  3032,  3037,  3036,  3047,  3046,  3057,  3056,
    3069,  3071,  3074,  3076,  3080,  3084,  3093,  3098,  3098,  3108,
    3109,  3113,  3121,  3123,  3127,  3128,  3132,  3133,  3134,  3139,
    3138,  3150,  3154,  3155,  3159,  3160,  3165,  3171,  3177,  3187,
    3195,  3200,  3208,  3212,  3221,  3219,  3233,  3241,  3246,  3245,
    3259,  3261,  3266,  3276,  3275,  3294,  3295,  3296,  3297,  3302,
    3304,  3309,  3324,  3332,  3336,  3356,  3357,  3361,  3365,  3371,
    3377,  3383,  3389,  3399,  3404,  3412,  3420,  3425,  3431,  3432,
    3438,  3441,  3445,  3453,  3470,  3472,  3490,  3496,  3498,  3500,
    3502,  3504,  3506,  3508,  3510,  3512,  3514,  3516,  3518,  3520,
    3525,  3533,  3549,  3550,  3555,  3561,  3570,  3577,  3586,  3595,
    3600,  3614,  3616,  3618,  3627,  3632,  3639,  3648,  3657,  3659,
    3661,  3663,  3665,  3667,  3669,  3671,  3673,  3675,  3677,  3679,
    3681,  3683,  3688,  3689,  3697,  3709,  3725,  3724,  3735,  3735,
    3757,  3758,  3762,  3769,  3780,  3785,  3790,  3795,  3803,  3808,
    3813,  3818,  3827,  3835,  3843,  3852,  3852,  3876,  3886,  3885,
    3907,  3906,  3927,  3933,  3941,  3942,  3946,  3947,  3948,  3952,
    3960,  3965,  3970,  3978,  3979,  3987,  4005,  4021,  4041,  4046,
    4040,  4058,  4060,  4061,  4062,  4067,  4066,  4137,  4136,  4143,
    4148,  4149,  4153,  4154,  4159,  4158,  4174,  4173,  4188,  4198,
    4202,  4203,  4208,  4209,  4213,  4221,  4226,  4233,  4242,  4256,
    4264,  4273,  4272,  4280,  4279,  4287,  4292,  4299,  4286,  4309,
    4308,  4319,  4318,  4328,  4327,  4337,  4344,  4336,  4359,  4358,
    4370,  4372,  4377,  4379,  4381,  4387,  4386,  4389,  4390,  4404,
    4405,  4409,  4410,  4420,  4425,  4436,  4473,  4474,  4479,  4478,
    4494,  4509,  4508,  4530,  4529,  4535,  4543,  4542,  4545,  4547,
    4550,  4549,  4558,  4561,  4560,  4569,  4570,  4576,  4577,  4594,
    4595,  4599,  4600,  4604,  4618,  4628,  4639,  4648,  4649,  4662,
    4664,  4663,  4668,  4666,  4677,  4678,  4682,  4696,  4708,  4709,
    4722,  4731,  4753,  4754,  4757,  4759,  4764,  4763,  4787,  4799,
    4815,  4814,  4829,  4828,  4842,  4849,  4856,  4876,  4894,  4898,
    4925,  4937,  4938,  4943,  4952,  4942,  4977,  4978,  4982,  4993,
    5012,  5025,  5051,  5052,  5057,  5056,  5093,  5102,  5103,  5107,
    5108,  5112,  5113,  5121,  5122,  5126,  5127,  5131,  5133,  5139,
    5145,  5147,  5149,  5151,  5153,  5155,  5160,  5161,  5161,  5170,
    5182,  5185,  5193,  5196,  5206,  5207,  5211,  5212,  5216,  5217,
    5221,  5222,  5223,  5232,  5235,  5243,  5246,  5253,  5257,  5263,
    5265,  5269,  5270,  5274,  5275,  5276,  5280,  5295,  5300,  5305,
    5310,  5315,  5320,  5325,  5340,  5346,  5361,  5366,  5381,  5387,
    5405,  5410,  5415,  5420,  5425,  5430,  5436,  5435,  5461,  5462,
    5463,  5468,  5473,  5478,  5480,  5482,  5484,  5490,  5495,  5500,
    5504,  5509,  5513,  5520,  5527,  5532,  5539,  5541,  5545,  5564,
    5572,  5581,  5591,  5602,  5603,  5604,  5605,  5606,  5607,  5608,
    5612,  5613,  5614,  5618,  5619,  5620,  5621,  5626,  5633,  5640,
    5641,  5645,  5646,  5647,  5648,  5649,  5653,  5655,  5666,  5665,
    5673,  5672,  5680,  5679,  5687,  5686,  5696,  5693,  5704,  5702,
    5711,  5710,  5729,  5737,  5745,  5753,  5754,  5758,  5768,  5769,
    5773,  5774,  5778,  5783,  5782,  5821,  5820,  5833,  5832,  5843,
    5844,  5848,  5849,  5853,  5854,  5858,  5859,  5863,  5864,  5865,
    5866,  5872,  5871,  5879,  5885,  5894,  5895,  5900,  5903,  5907,
    5911,  5918,  5919,  5923,  5924,  5928,  5934,  5940,  5941,  5949,
    5948,  5970,  5971,  5981,  5989,  6001,  6001,  6004,  6005,  6012,
    6019,  6023,  6031,  6032,  6033,  6034,  6035,  6036,  6041,  6046,
    6054,  6058,  6059,  6073,  6077,  6081,  6085,  6087,  6094,  6096,
    6102,  6103,  6104,  6105,  6109,  6113,  6118,  6122,  6126,  6130,
    6135,  6139,  6146,  6162,  6163,  6170,  6177,  6185,  6189,  6193,
    6197,  6201,  6205,  6209,  6213,  6215,  6217,  6219,  6221,  6223,
    6225,  6227,  6234,  6236,  6241,  6245,  6246,  6250,  6251,  6255,
    6256,  6257,  6258,  6259,  6263,  6264,  6265,  6266,  6267,  6271,
    6277,  6278,  6283,  6285,  6292,  6293,  6294,  6298,  6302,  6303,
    6304,  6305,  6306,  6307,  6311,  6315,  6316,  6317,  6318,  6321,
    6325,  6330,  6331,  6335,  6336,  6340,  6341,  6346,  6351,  6355,
    6361,  6366,  6374,  6375,  6382,  6386,  6390,  6391,  6395,  6396,
    6400,  6401,  6405,  6413,  6421,  6430,  6434,  6440,  6444,  6445,
    6449,  6462,  6468,  6478,  6479,  6483,  6490,  6494,  6495,  6499,
    6500,  6504,  6513,  6517,  6518,  6522,  6530,  6531,  6535,  6536,
    6540,  6541,  6542,  6550,  6551,  6555,  6559,  6563,  6568,  6569,
    6574,  6578,  6584,  6588,  6595,  6596,  6601,  6600,  6613,  6614,
    6618,  6621,  6622,  6623,  6624,  6628,  6636,  6643,  6644,  6648,
    6658,  6659,  6663,  6664,  6667,  6669,  6673,  6685,  6686,  6690,
    6697,  6710,  6711,  6713,  6715,  6721,  6726,  6732,  6738,  6745,
    6755,  6756,  6757,  6758,  6759,  6763,  6764,  6768,  6769,  6773,
    6774,  6778,  6779,  6780,  6784,  6788,  6800,  6801,  6805,  6806,
    6810,  6811,  6815,  6816,  6820,  6821,  6825,  6826,  6830,  6831,
    6836,  6837,  6838,  6842,  6844,  6849,  6854,  6856,  6860,  6864,
    6871,  6872,  6876,  6880,  6881,  6891,  6892,  6893,  6897,  6898,
    6902,  6907,  6915,  6916,  6924,  6930,  6942,  6943,  6947,  6949,
    6959,  6975,  6958,  6998,  6997,  7014,  7013,  7028,  7037,  7036,
    7044,  7043,  7051,  7050,  7064,  7058,  7072,  7071,  7111,  7110,
    7117,  7124,  7136,  7146,  7123,  7155,  7159,  7167,  7170,  7174,
    7178,  7186,  7188,  7189,  7190,  7191,  7195,  7196,  7197,  7198,
    7202,  7203,  7215,  7216,  7221,  7222,  7225,  7227,  7235,  7243,
    7245,  7247,  7248,  7256,  7257,  7263,  7272,  7270,  7283,  7296,
    7295,  7308,  7306,  7319,  7326,  7336,  7337,  7343,  7355,  7354,
    7394,  7401,  7405,  7411,  7409,  7426,  7428,  7433,  7441,  7440,
    7454,  7458,  7457,  7469,  7470,  7474,  7487,  7488,  7492,  7496,
    7503,  7508,  7512,  7519,  7526,  7530,  7535,  7543,  7551,  7561,
    7572,  7582,  7593,  7603,  7609,  7615,  7622,  7632,  7637,  7643,
    7648,  7658,  7663,  7669,  7674,  7678,  7683,  7684,  7685,  7690,
    7695,  7699,  7709,  7711,  7712,  7713,  7714,  7718,  7723,  7731,
    7736,  7744,  7745,  7749,  7750,  7754,  7754,  7757,  7759,  7763,
    7764,  7768,  7769,  7777,  7778,  7779,  7783,  7784,  7789,  7798,
    7799,  7800,  7801,  7806,  7805,  7815,  7814,  7822,  7829,  7839,
    7856,  7859,  7866,  7870,  7877,  7881,  7885,  7892,  7892,  7898,
    7899,  7903,  7904,  7905,  7909,  7910,  7919,  7926,  7927,  7932,
    7931,  7943,  7944,  7945,  7949,  7951,  7950,  7957,  7956,  7977,
    7978,  7982,  7983,  7987,  7988,  7989,  7993,  7994,  7999,  7998,
    8019,  8020,  8024,  8029,  8030,  8037,  8039,  8044,  8046,  8045,
    8058,  8060,  8059,  8073,  8074,  8079,  8088,  8089,  8090,  8094,
    8101,  8111,  8119,  8128,  8130,  8129,  8135,  8134,  8157,  8158,
    8162,  8163,  8167,  8168,  8169,  8170,  8171,  8172,  8176,  8177,
    8182,  8181,  8202,  8203,  8204,  8209,  8208,  8219,  8226,  8232,
    8241,  8242,  8246,  8262,  8261,  8274,  8275,  8279,  8280,  8284,
    8295,  8306,  8307,  8312,  8311,  8326,  8327,  8331,  8332,  8336,
    8347,  8359,  8358,  8366,  8366,  8375,  8376,  8381,  8382,  8392,
    8391,  8406,  8405,  8424,  8423,  8440,  8438,  8459,  8460,  8465,
    8464,  8478,  8487,  8477,  8497,  8509,  8573,  8578,  8593,  8594,
    8609,  8608,  8624,  8623,  8636,  8638,  8653,  8661,  8659,  8674,
    8692,  8694,  8704,  8708,  8749,  8758,  8768,  8769,  8773,  8777,
    8783,  8790,  8792,  8801,  8805,  8809,  8816,  8825,  8829,  8836,
    8853,  8856,  8864,  8867,  8874,  8878,  8882,  8886,  8893,  8894,
    8898,  8899,  8908,  8921,  8927,  8938,  8941,  8949,  8952,  8958,
    8964,  8973,  8974,  8975,  8995,  9000,  9022,  9028,  9034,  9040,
    9041,  9042,  9043,  9044,  9048,  9049,  9050,  9054,  9055,  9056,
    9060,  9061,  9066,  9117,  9124,  9167,  9173,  9177,  9183,  9189,
    9195,  9201,  9207,  9213,  9219,  9225,  9231,  9237,  9243,  9247,
    9253,  9262,  9268,  9276,  9282,  9291,  9297,  9305,  9315,  9321,
    9328,  9335,  9343,  9349,  9358,  9362,  9368,  9374,  9380,  9386,
    9393,  9399,  9405,  9411,  9417,  9424,  9430,  9436,  9442,  9448,
    9454,  9460,  9466,  9472,  9476,  9477,  9481,  9482,  9486,  9487,
    9491,  9492,  9496,  9497,  9498,  9499,  9500,  9501,  9505,  9506,
    9511,  9514,  9518,  9519,  9520,  9524,  9525,  9526,  9527,  9528,
    9529,  9533,  9534,  9535,  9539,  9544,  9551,  9573,  9580,  9589,
    9590,  9591,  9592,  9596,  9605,  9606,  9607,  9608,  9609,  9610,
    9611,  9612,  9644,  9645,  9646,  9647,  9648,  9649,  9650,  9651,
    9652,  9660,  9668,  9669,  9676,  9682,  9687,  9697,  9702,  9707,
    9713,  9718,  9724,  9735,  9742,  9747,  9752,  9757,  9762,  9767,
    9772,  9780,  9781,  9782,  9783,  9791,  9792,  9801,  9802,  9808,
    9812,  9818,  9824,  9833,  9834,  9843,  9850,  9864,  9870,  9876,
    9885,  9894,  9900,  9906,  9912,  9918,  9933,  9944,  9950,  9956,
    9962,  9968,  9974,  9982,  9989,  9993,  9999, 10007, 10016, 10020,
   10024, 10028, 10048, 10055, 10062, 10068, 10075, 10082, 10088, 10094,
   10100, 10106, 10112, 10118, 10124, 10130, 10137, 10143, 10154, 10161,
   10167, 10174, 10180, 10185, 10190, 10196, 10202, 10207, 10214, 10221,
   10229, 10236, 10243, 10250, 10257, 10272, 10278, 10284, 10290, 10296,
   10303, 10309, 10315, 10324, 10335, 10342, 10348, 10354, 10361, 10369,
   10375, 10381, 10387, 10393, 10401, 10407, 10413, 10419, 10425, 10433,
   10445, 10465, 10464, 10538, 10544, 10550, 10556, 10561, 10569, 10571,
   10576, 10577, 10581, 10582, 10586, 10587, 10591, 10598, 10606, 10633,
   10639, 10645, 10651, 10657, 10663, 10672, 10679, 10681, 10678, 10688,
   10699, 10705, 10711, 10717, 10723, 10729, 10735, 10741, 10747, 10754,
   10753, 10774, 10773, 10804, 10803, 10817, 10826, 10844, 10846, 10848,
   10863, 10870, 10877, 10884, 10891, 10898, 10905, 10912, 10919, 10926,
   10937, 10944, 10955, 10966, 10986, 10985, 10991, 11008, 11014, 11023,
   11032, 11042, 11041, 11053, 11068, 11081, 11086, 11094, 11095, 11100,
   11105, 11108, 11110, 11114, 11119, 11127, 11128, 11133, 11140, 11150,
   11149, 11166, 11168, 11174, 11180, 11186, 11190, 11191, 11192, 11197,
   11202, 11210, 11211, 11212, 11213, 11214, 11215, 11216, 11217, 11221,
   11222, 11223, 11224, 11231, 11232, 11236, 11241, 11249, 11250, 11254,
   11261, 11269, 11278, 11288, 11289, 11298, 11307, 11319, 11320, 11332,
   11336, 11340, 11348, 11349, 11353, 11357, 11361, 11368, 11372, 11377,
   11378, 11384, 11383, 11412, 11411, 11427, 11436, 11448, 11460, 11461,
   11462, 11463, 11468, 11469, 11470, 11471, 11472, 11476, 11480, 11484,
   11494, 11501, 11509, 11515, 11508, 11561, 11562, 11568, 11573, 11587,
   11595, 11593, 11613, 11611, 11624, 11636, 11634, 11654, 11653, 11665,
   11678, 11676, 11697, 11696, 11709, 11723, 11724, 11725, 11729, 11730,
   11738, 11739, 11743, 11752, 11753, 11754, 11759, 11760, 11764, 11765,
   11769, 11770, 11774, 11775, 11783, 11791, 11799, 11800, 11813, 11829,
   11836, 11848, 11849, 11854, 11858, 11859, 11860, 11864, 11865, 11870,
   11869, 11875, 11874, 11882, 11883, 11886, 11888, 11888, 11892, 11892,
   11897, 11898, 11902, 11904, 11909, 11910, 11914, 11925, 11939, 11940,
   11941, 11942, 11943, 11944, 11945, 11946, 11947, 11948, 11949, 11950,
   11954, 11955, 11956, 11957, 11958, 11959, 11960, 11961, 11962, 11966,
   11967, 11968, 11969, 11972, 11974, 11975, 11979, 11980, 11984, 11992,
   11994, 11998, 12000, 11999, 12013, 12016, 12015, 12033, 12035, 12039,
   12044, 12052, 12053, 12070, 12093, 12094, 12100, 12101, 12105, 12118,
   12117, 12126, 12127, 12136, 12137, 12141, 12142, 12146, 12147, 12161,
   12162, 12166, 12176, 12185, 12192, 12199, 12209, 12210, 12217, 12227,
   12228, 12230, 12232, 12234, 12236, 12245, 12249, 12250, 12254, 12268,
   12269, 12275, 12274, 12285, 12291, 12300, 12301, 12302, 12308, 12309,
   12314, 12321, 12327, 12332, 12343, 12353, 12364, 12371, 12379, 12389,
   12390, 12394, 12395, 12399, 12400, 12405, 12412, 12419, 12426, 12436,
   12441, 12446, 12450, 12456, 12462, 12471, 12479, 12483, 12490, 12491,
   12495, 12500, 12505, 12518, 12522, 12526, 12530, 12535, 12538, 12542,
   12551, 12559, 12570, 12572, 12576, 12577, 12581, 12582, 12583, 12584,
   12585, 12586, 12590, 12591, 12592, 12593, 12594, 12598, 12599, 12600,
   12601, 12605, 12606, 12607, 12608, 12609, 12613, 12614, 12615, 12616,
   12617, 12621, 12626, 12627, 12631, 12632, 12636, 12637, 12638, 12643,
   12642, 12674, 12675, 12679, 12680, 12684, 12694, 12694, 12706, 12707,
   12710, 12730, 12740, 12745, 12753, 12759, 12771, 12758, 12773, 12788,
   12801, 12800, 12823, 12822, 12832, 12831, 12854, 12860, 12864, 12869,
   12868, 12877, 12882, 12888, 12895, 12893, 12904, 12908, 12909, 12913,
   12925, 12938, 12939, 12943, 12957, 12961, 12970, 12973, 12980, 12981,
   12989, 12996, 12988, 13009, 13016, 13008, 13027, 13036, 13045, 13053,
   13054, 13058, 13059, 13063, 13064, 13072, 13072, 13075, 13075, 13088,
   13089, 13091, 13090, 13103, 13109, 13111, 13115, 13117, 13123, 13127,
   13128, 13132, 13133, 13137, 13147, 13148, 13152, 13153, 13157, 13158,
   13162, 13163, 13168, 13167, 13184, 13183, 13199, 13200, 13204, 13205,
   13209, 13214, 13222, 13230, 13241, 13242, 13251, 13252, 13260, 13262,
   13264, 13262, 13274, 13286, 13293, 13303, 13322, 13292, 13329, 13330,
   13334, 13341, 13349, 13350, 13354, 13364, 13365, 13372, 13371, 13392,
   13395, 13402, 13403, 13413, 13428, 13436, 13449, 13455, 13448, 13460,
   13466, 13459, 13474, 13478, 13477, 13511, 13512, 13516, 13531, 13549,
   13550, 13554, 13555, 13559, 13560, 13561, 13566, 13577, 13565, 13587,
   13589, 13592, 13594, 13597, 13598, 13601, 13605, 13609, 13613, 13617,
   13621, 13625, 13629, 13633, 13641, 13644, 13654, 13653, 13672, 13679,
   13687, 13695, 13703, 13711, 13719, 13726, 13733, 13739, 13741, 13743,
   13752, 13756, 13761, 13760, 13767, 13766, 13773, 13782, 13789, 13794,
   13799, 13804, 13809, 13814, 13816, 13818, 13820, 13827, 13835, 13837,
   13845, 13852, 13859, 13867, 13873, 13878, 13886, 13894, 13902, 13906,
   13910, 13917, 13924, 13931, 13938, 13944, 13950, 13956, 13962, 13968,
   13976, 13981, 13988, 13995, 14002, 14009, 14016, 14023, 14028, 14033,
   14038, 14043, 14048, 14060, 14068, 14090, 14092, 14094, 14099, 14100,
   14103, 14105, 14109, 14110, 14114, 14115, 14119, 14120, 14124, 14125,
   14129, 14130, 14134, 14135, 14144, 14156, 14155, 14174, 14173, 14183,
   14184, 14185, 14186, 14187, 14188, 14192, 14193, 14197, 14204, 14205,
   14207, 14208, 14212, 14213, 14226, 14227, 14228, 14244, 14268, 14267,
   14279, 14278, 14290, 14295, 14296, 14309, 14312, 14311, 14324, 14325,
   14330, 14332, 14334, 14336, 14338, 14340, 14348, 14350, 14352, 14354,
   14359, 14361, 14369, 14371, 14373, 14375, 14377, 14379, 14396, 14397,
   14401, 14405, 14418, 14417, 14432, 14442, 14443, 14446, 14448, 14449,
   14453, 14469, 14470, 14475, 14474, 14484, 14485, 14489, 14489, 14494,
   14493, 14499, 14503, 14504, 14508, 14509, 14516, 14521, 14520, 14535,
   14534, 14549, 14550, 14551, 14555, 14556, 14557, 14566, 14567, 14571,
   14575, 14583, 14583, 14588, 14589, 14598, 14610, 14624, 14635, 14648,
   14609, 14659, 14660, 14664, 14665, 14669, 14670, 14678, 14682, 14683,
   14684, 14687, 14689, 14693, 14694, 14698, 14703, 14710, 14715, 14722,
   14724, 14728, 14729, 14733, 14738, 14746, 14747, 14751, 14753, 14761,
   14762, 14766, 14767, 14768, 14772, 14774, 14779, 14780, 14795, 14796,
   14800, 14801, 14805, 14818, 14823, 14828, 14833, 14841, 14849, 14854,
   14862, 14870, 14885, 14892, 14898, 14908, 14909, 14917, 14918, 14919,
   14920, 14934, 14940, 14946, 14952, 14958, 14964, 14985, 14995, 15005,
   15011, 15018, 15028, 15035, 15042, 15053, 15052, 15077, 15078, 15083,
   15084, 15089, 15113, 15116, 15115, 15131, 15135, 15140, 15144, 15154,
   15160, 15169, 15187, 15188, 15192, 15197, 15205, 15210, 15218, 15223,
   15228, 15233, 15239, 15244, 15252, 15257, 15262, 15267, 15273, 15281,
   15282, 15293, 15301, 15305, 15311, 15317, 15327, 15333, 15342, 15352,
   15353, 15357, 15358, 15359, 15363, 15371, 15379, 15387, 15395, 15396,
   15404, 15405, 15409, 15410, 15415, 15424, 15425, 15433, 15434, 15442,
   15443, 15444, 15448, 15459, 15488, 15497, 15497, 15499, 15509, 15510,
   15511, 15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519, 15520,
   15525, 15526, 15527, 15528, 15529, 15530, 15531, 15532, 15533, 15534,
   15535, 15536, 15537, 15541, 15542, 15543, 15544, 15545, 15546, 15547,
   15548, 15549, 15550, 15551, 15552, 15553, 15557, 15558, 15559, 15560,
   15561, 15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569, 15573,
   15574, 15575, 15576, 15577, 15578, 15579, 15580, 15593, 15594, 15595,
   15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603, 15604, 15605,
   15606, 15607, 15608, 15609, 15610, 15611, 15612, 15613, 15614, 15615,
   15616, 15617, 15618, 15619, 15620, 15621, 15622, 15623, 15624, 15625,
   15626, 15627, 15628, 15629, 15630, 15631, 15632, 15633, 15634, 15635,
   15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643, 15644, 15645,
   15646, 15687, 15688, 15689, 15690, 15691, 15692, 15703, 15704, 15705,
   15706, 15707, 15708, 15709, 15710, 15711, 15712, 15716, 15717, 15718,
   15722, 15723, 15724, 15733, 15734, 15735, 15736, 15737, 15738, 15739,
   15740, 15741, 15742, 15743, 15744, 15745, 15746, 15747, 15748, 15749,
   15750, 15751, 15752, 15753, 15754, 15755, 15756, 15757, 15758, 15763,
   15771, 15772, 15773, 15774, 15775, 15776, 15777, 15778, 15779, 15780,
   15781, 15782, 15783, 15784, 15785, 15786, 15787, 15788, 15789, 15790,
   15791, 15792, 15793, 15794, 15795, 15796, 15797, 15798, 15799, 15800,
   15801, 15802, 15803, 15804, 15805, 15806, 15807, 15808, 15809, 15810,
   15811, 15812, 15813, 15814, 15815, 15816, 15817, 15818, 15819, 15824,
   15825, 15826, 15827, 15828, 15829, 15830, 15831, 15832, 15833, 15834,
   15835, 15836, 15837, 15838, 15839, 15840, 15841, 15842, 15843, 15844,
   15845, 15846, 15847, 15848, 15849, 15850, 15851, 15852, 15853, 15854,
   15855, 15856, 15857, 15858, 15859, 15860, 15861, 15862, 15863, 15864,
   15865, 15866, 15867, 15868, 15869, 15870, 15871, 15872, 15873, 15874,
   15875, 15876, 15877, 15878, 15879, 15880, 15881, 15882, 15883, 15884,
   15885, 15886, 15887, 15888, 15889, 15890, 15891, 15892, 15893, 15894,
   15895, 15896, 15897, 15898, 15899, 15900, 15901, 15902, 15903, 15904,
   15905, 15906, 15907, 15908, 15909, 15910, 15911, 15912, 15913, 15914,
   15915, 15916, 15917, 15918, 15919, 15920, 15921, 15922, 15923, 15924,
   15925, 15926, 15927, 15928, 15929, 15930, 15931, 15932, 15933, 15934,
   15935, 15936, 15937, 15938, 15939, 15940, 15941, 15942, 15943, 15947,
   15948, 15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956, 15957,
   15958, 15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966, 15967,
   15968, 15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976, 15977,
   15978, 15979, 15980, 15981, 15982, 15983, 15984, 15985, 15986, 15987,
   15988, 15989, 15990, 15991, 15992, 15993, 15994, 15995, 15996, 15997,
   15998, 15999, 16000, 16001, 16002, 16003, 16004, 16005, 16006, 16007,
   16008, 16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016, 16017,
   16018, 16019, 16020, 16021, 16022, 16023, 16024, 16025, 16026, 16027,
   16028, 16029, 16030, 16034, 16035, 16036, 16037, 16038, 16039, 16040,
   16041, 16042, 16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050,
   16051, 16052, 16053, 16054, 16055, 16056, 16057, 16058, 16059, 16060,
   16061, 16062, 16063, 16064, 16065, 16066, 16067, 16068, 16072, 16073,
   16074, 16075, 16076, 16077, 16078, 16079, 16080, 16081, 16082, 16083,
   16084, 16085, 16086, 16087, 16088, 16089, 16090, 16091, 16092, 16093,
   16094, 16095, 16096, 16097, 16098, 16099, 16100, 16101, 16102, 16103,
   16104, 16105, 16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113,
   16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127,
   16128, 16129, 16130, 16131, 16132, 16133, 16134, 16135, 16136, 16137,
   16138, 16139, 16140, 16141, 16142, 16143, 16144, 16145, 16146, 16147,
   16148, 16149, 16150, 16151, 16152, 16153, 16154, 16155, 16156, 16157,
   16158, 16159, 16160, 16161, 16162, 16163, 16164, 16165, 16166, 16167,
   16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177,
   16178, 16179, 16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187,
   16188, 16189, 16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197,
   16198, 16199, 16200, 16201, 16202, 16203, 16204, 16205, 16206, 16207,
   16208, 16209, 16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217,
   16218, 16219, 16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227,
   16228, 16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237,
   16238, 16240, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249,
   16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259,
   16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267, 16268, 16269,
   16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277, 16278, 16279,
   16280, 16281, 16282, 16283, 16284, 16285, 16286, 16287, 16288, 16289,
   16290, 16291, 16292, 16293, 16294, 16295, 16296, 16297, 16298, 16299,
   16300, 16301, 16302, 16303, 16304, 16305, 16306, 16307, 16308, 16309,
   16310, 16311, 16312, 16313, 16314, 16315, 16316, 16317, 16318, 16319,
   16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329,
   16330, 16331, 16332, 16333, 16334, 16335, 16336, 16337, 16338, 16339,
   16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347, 16348, 16349,
   16350, 16351, 16352, 16353, 16354, 16355, 16356, 16368, 16367, 16380,
   16381, 16383, 16382, 16394, 16393, 16400, 16398, 16418, 16419, 16424,
   16425, 16427, 16426, 16440, 16441, 16447, 16446, 16451, 16455, 16456,
   16457, 16461, 16462, 16463, 16464, 16468, 16469, 16470, 16471, 16480,
   16479, 16493, 16492, 16507, 16506, 16524, 16523, 16537, 16536, 16550,
   16549, 16565, 16564, 16578, 16577, 16591, 16590, 16603, 16602, 16620,
   16619, 16631, 16630, 16642, 16641, 16652, 16670, 16681, 16688, 16697,
   16719, 16735, 16747, 16746, 16760, 16759, 16771, 16770, 16784, 16785,
   16786, 16787, 16791, 16810, 16828, 16829, 16833, 16834, 16835, 16836,
   16841, 16846, 16851, 16862, 16863, 16864, 16870, 16876, 16888, 16887,
   16901, 16902, 16908, 16917, 16918, 16922, 16923, 16927, 16946, 16947,
   16948, 16953, 16954, 16959, 16958, 16976, 16975, 16987, 16996, 17006,
   17005, 17048, 17049, 17053, 17054, 17058, 17059, 17060, 17061, 17063,
   17062, 17075, 17076, 17077, 17078, 17079, 17085, 17090, 17095, 17100,
   17104, 17109, 17118, 17120, 17125, 17130, 17136, 17142, 17147, 17159,
   17160, 17164, 17165, 17169, 17174, 17182, 17191, 17212, 17212, 17214,
   17216, 17220, 17221, 17228, 17230, 17234, 17239, 17246, 17250, 17259,
   17266, 17267, 17268, 17269, 17273, 17274, 17275, 17276, 17277, 17278,
   17279, 17280, 17281, 17282, 17283, 17284, 17285, 17286, 17287, 17288,
   17289, 17290, 17291, 17292, 17293, 17294, 17295, 17296, 17297, 17298,
   17299, 17300, 17301, 17302, 17303, 17304, 17305, 17306, 17307, 17308,
   17309, 17310, 17311, 17312, 17313, 17314, 17318, 17319, 17323, 17324,
   17328, 17335, 17342, 17352, 17361, 17367, 17374, 17382, 17387, 17395,
   17400, 17408, 17413, 17420, 17420, 17421, 17421, 17424, 17430, 17436,
   17441, 17448, 17454, 17461, 17470, 17474, 17480, 17488, 17490, 17494,
   17498, 17502, 17509, 17514, 17519, 17524, 17529, 17537, 17538, 17542,
   17543, 17548, 17549, 17553, 17554, 17558, 17559, 17563, 17564, 17569,
   17568, 17578, 17587, 17588, 17592, 17593, 17598, 17599, 17600, 17605,
   17606, 17607, 17611, 17623, 17632, 17638, 17647, 17656, 17669, 17671,
   17673, 17681, 17682, 17683, 17687, 17688, 17694, 17695, 17696, 17697,
   17698, 17699, 17700, 17710, 17711, 17716, 17729, 17743, 17744, 17745,
   17749, 17750, 17754, 17755, 17760, 17761, 17765, 17771, 17780, 17780,
   17794, 17795, 17796, 17797, 17807, 17809, 17815, 17821, 17831, 17840,
   17846, 17851, 17855, 17829, 17904, 17904, 17919, 17923, 17927, 17931,
   17935, 17939, 17947, 17948, 17964, 17971, 17978, 17991, 17992, 17993,
   17997, 17998, 17999, 18003, 18004, 18009, 18011, 18010, 18016, 18017,
   18021, 18026, 18033, 18038, 18047, 18053, 18482, 18483, 18487, 18489,
   18488, 18502, 18501, 18514, 18513, 18527, 18531, 18535, 18540, 18541,
   18547, 18548, 18549, 18550, 18551, 18552, 18553, 18554, 18558, 18559,
   18560, 18561, 18562, 18563, 18564, 18565, 18569, 18570, 18571, 18576,
   18580, 18589, 18588, 18601, 18607, 18611, 18621, 18630, 18631, 18632,
   18636, 18637, 18638, 18642, 18642, 18654, 18660, 18661, 18662, 18663,
   18664, 18665, 18666, 18667, 18671, 18672, 18680, 18681, 18687, 18686,
   18703, 18702, 18721, 18720, 18744, 18745, 18749, 18758, 18759, 18763,
   18764, 18769, 18768, 18783, 18791, 18792, 18796, 18797, 18802, 18803,
   18808, 18809, 18813, 18814, 18818, 18822, 18826, 18832, 18822, 18841,
   18843, 18848, 18849, 18853, 18854, 18858, 18858, 18864, 18870, 18878,
   18879, 18880, 18886, 18887, 18893, 18894, 18900, 18911, 18910, 18938,
   18937, 18963, 18972, 18981, 18987, 18986, 19006, 19005, 19025, 19029,
   19030, 19034, 19035, 19039, 19046, 19056, 19064, 19075, 19083, 19088,
   19093, 19097, 19102, 19107, 19112, 19122, 19121, 19136, 19144, 19135,
   19158, 19163, 19168, 19173, 19181, 19194, 19193, 19204, 19202, 19218,
   19216, 19230, 19241, 19237, 19261, 19273, 19278, 19257, 19291, 19295,
   19300, 19299, 19308, 19312, 19313, 19320, 19321, 19328, 19329, 19333,
   19334, 19341, 19352, 19351, 19370, 19371, 19372, 19373, 19374, 19375,
   19379, 19380, 19381, 19382, 19383, 19384, 19385, 19386, 19387, 19388,
   19389, 19393, 19394, 19395, 19396, 19403, 19401, 19417, 19421, 19415,
   19437, 19438, 19443, 19442, 19457, 19463, 19456, 19480, 19478
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "'@'", "ABORT_SYM",
  "IMPOSSIBLE_ACTION", "FORCE_LOOKAHEAD", "END_OF_INPUT",
  "COLON_ORACLE_SYM", "PARAM_MARKER", "FOR_SYSTEM_TIME_SYM",
  "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "ORACLE_CONCAT_SYM", "PERCENT_ORACLE_SYM", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITH_SYSTEM_SYM", "IDENT", "IDENT_QUOTED",
  "LEX_HOSTNAME", "UNDERSCORE_CHARSET", "BIN_NUM", "DECIMAL_NUM",
  "FLOAT_NUM", "HEX_NUM", "HEX_STRING", "LONG_NUM", "NCHAR_STRING", "NUM",
  "TEXT_STRING", "ULONGLONG_NUM", "AND_AND_SYM", "DOT_DOT_SYM",
  "EQUAL_SYM", "GE", "LE", "MYSQL_CONCAT_SYM", "NE", "NOT2_SYM", "OR2_SYM",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "ACCESSIBLE_SYM", "ADD", "ALL",
  "ALTER", "ANALYZE_SYM", "AND_SYM", "ASC", "ASENSITIVE_SYM", "AS",
  "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BIT_AND", "BIT_OR",
  "BIT_XOR", "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM",
  "BOTH", "BY", "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE",
  "CHAR_SYM", "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_ROLE", "CURRENT_USER", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESCRIBE",
  "DESC", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DO_DOMAIN_IDS_SYM",
  "DOUBLE_SYM", "DROP", "DUAL_SYM", "EACH_SYM", "ELSEIF_MARIADB_SYM",
  "ELSE", "ELSIF_ORACLE_SYM", "EMPTY_SYM", "ENCLOSED", "ESCAPED",
  "EXCEPT_SYM", "EXISTS", "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM",
  "FIRST_VALUE_SYM", "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FROM",
  "FULLTEXT_SYM", "GOTO_ORACLE_SYM", "GRANT", "GROUP_CONCAT_SYM",
  "JSON_ARRAYAGG_SYM", "JSON_OBJECTAGG_SYM", "JSON_TABLE_SYM", "GROUP_SYM",
  "HAVING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM",
  "IF_SYM", "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "IGNORED_SYM",
  "INDEX_SYM", "INFILE", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "IN_SYM", "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM",
  "IS", "ITERATE_SYM", "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM",
  "LAG_SYM", "LEADING", "LEAD_SYM", "LEAVE_SYM", "LEFT", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LOAD", "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB",
  "LONG_SYM", "LONGTEXT", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MIN_SYM",
  "MINUS_ORACLE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MODIFIES_SYM", "MOD_SYM", "NATURAL", "NEG", "NESTED_SYM", "NOT_SYM",
  "NO_WRITE_TO_BINLOG", "NOW_SYM", "NTH_VALUE_SYM", "NTILE_SYM",
  "NULL_SYM", "NUMERIC_SYM", "ON", "OPTIMIZE", "OPTIONALLY", "ORDER_SYM",
  "ORDINALITY_SYM", "OR_SYM", "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OVER_SYM", "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PATH_SYM",
  "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM", "PERCENT_RANK_SYM",
  "PORTION_SYM", "POSITION_SYM", "PRECISION", "PRIMARY_SYM",
  "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM",
  "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM",
  "REFERENCES", "REF_SYSTEM_ID_SYM", "REGEXP", "RELEASE_SYM", "RENAME",
  "REPEAT_SYM", "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT",
  "ROW_NUMBER_SYM", "ROWS_SYM", "ROWTYPE_ORACLE_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SHOW", "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQL_BIG_RESULT", "SQLEXCEPTION_SYM", "SQL_SMALL_RESULT",
  "SQLSTATE_SYM", "SQL_SYM", "SQLWARNING_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM", "TERMINATED",
  "THEN_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRIGGER_SYM", "TRUE_SYM", "UNDO_SYM", "UNION_SYM", "UNIQUE_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES_IN_SYM",
  "VALUES_LESS_SYM", "VALUES", "VARBINARY", "VARCHAR", "VARIANCE_SYM",
  "VAR_SAMP_SYM", "VARYING", "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH",
  "XOR", "YEAR_MONTH_SYM", "ZEROFILL", "BODY_MARIADB_SYM",
  "ELSEIF_ORACLE_SYM", "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM",
  "GOTO_MARIADB_SYM", "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM",
  "RAISE_MARIADB_SYM", "ROWTYPE_MARIADB_SYM", "ROWNUM_SYM", "REPLACE",
  "SUBSTRING", "TRIM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM",
  "ADD_MONTHS_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM", "ASCII_SYM", "AT_SYM",
  "ATOMIC_SYM", "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC",
  "AUTO_SYM", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM",
  "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM", "BINLOG_SYM", "BIT_SYM",
  "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM", "BTREE_SYM", "BYTE_SYM",
  "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGED",
  "CHANNEL_SYM", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM",
  "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM",
  "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM",
  "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM", "FEDERATED_SYM", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM",
  "FORCE_SYM", "FORMAT_SYM", "FOUND_SYM", "FULL", "FUNCTION_SYM",
  "GENERAL", "GENERATED_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM",
  "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM", "HELP_SYM",
  "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM", "HOUR_SYM",
  "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM", "IMMEDIATE_SYM",
  "IMPORT", "INCREMENT_SYM", "INDEXES", "INITIAL_SIZE_SYM",
  "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM", "IO_SYM", "IPC_SYM",
  "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM", "INVISIBLE_SYM", "JSON_SYM",
  "KEY_BLOCK_SIZE", "LANGUAGE_SYM", "LAST_SYM", "LAST_VALUE",
  "LASTVAL_SYM", "LEAVES", "LESS_SYM", "LEVEL_SYM", "LIST_SYM",
  "LOCAL_SYM", "LOCKED_SYM", "LOCKS_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_USE_GTID_SYM", "MASTER_HEARTBEAT_PERIOD_SYM",
  "MASTER_DEMOTE_TO_SLAVE_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONITOR_SYM",
  "MONTH_SYM", "MUTEX_SYM", "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM",
  "NAME_SYM", "NATIONAL_SYM", "NCHAR_SYM", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM",
  "NONE_SYM", "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OVERLAPS_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM",
  "PARTIAL", "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM",
  "PERIOD_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPLAY_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SKIP_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "THREADS_SYM", "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "UNBOUNDED_SYM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VISIBLE_SYM", "VIRTUAL_SYM",
  "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM",
  "WITHIN", "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM",
  "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'",
  "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "','", "'!'", "'{'", "'}'", "';'", "'.'", "$accept", "query", "$@1",
  "opt_end_of_input", "directly_executable_statement", "verb_clause",
  "deallocate", "deallocate_or_drop", "prepare", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_params", "help", "$@6", "change",
  "$@7", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "do_domain_id_list", "do_domain_id",
  "ignore_domain_id_list", "ignore_domain_id", "master_file_def",
  "optional_connection_name", "connection_name", "optional_for_channel",
  "for_channel", "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13",
  "$@14", "$@15", "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22",
  "$@23", "$@24", "opt_sequence", "sequence_defs", "sequence_def",
  "force_lookahead", "server_def", "$@25", "server_options_list",
  "server_option", "event_tail", "$@26", "ev_schedule_time", "$@27",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@28",
  "clear_privileges", "opt_aggregate", "sp_handler", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call", "$@29", "$@30", "$@31", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "$@32", "sp_fdparams",
  "sp_param_name", "sp_pdparam_list", "sp_pdparams", "sp_parameter_type",
  "sp_parenthesized_pdparam_list", "$@33", "sp_parenthesized_fdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "optionally_qualified_column_ident",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "$@34",
  "sp_decl_handler", "$@35", "opt_parenthesized_cursor_formal_parameters",
  "sp_cursor_stmt_lex", "sp_cursor_stmt", "$@36", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "raise_stmt_oracle", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_ident", "sp_decl_idents", "sp_proc_stmt_if", "$@37",
  "sp_proc_stmt_statement", "$@38", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "sp_proc_stmt_exit_oracle",
  "sp_proc_stmt_continue_oracle", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle", "expr_lex", "@39",
  "assignment_source_lex", "assignment_source_expr", "$@40",
  "for_loop_bound_expr", "$@41", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_with_cursor",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@42", "$@43",
  "sp_elseifs", "case_stmt_specification", "$@44", "case_stmt_body",
  "$@45", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@46", "searched_when_clause", "$@47",
  "else_clause_opt", "sp_opt_label", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "repeat_body", "pop_sp_loop_label", "sp_labeled_control", "$@48", "$@49",
  "$@50", "$@51", "$@52", "$@53", "sp_unlabeled_control", "$@54", "$@55",
  "$@56", "$@57", "$@58", "trg_action_time", "trg_event", "create_body",
  "$@59", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@60", "have_partitioning",
  "partition_entry", "$@61", "partition", "$@62", "part_type_def", "$@63",
  "$@64", "$@65", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@66",
  "$@67", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "opt_partition",
  "part_definition", "$@68", "part_name", "opt_part_values", "$@69",
  "$@70", "part_func_max", "part_values_in", "part_value_list",
  "part_value_item", "$@71", "$@72", "part_value_item_list",
  "part_value_expr_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "$@73", "sub_name", "opt_part_options",
  "part_option_list", "part_option", "opt_subpart_options",
  "subpart_option_list", "server_part_option", "opt_versioning_rotation",
  "$@74", "opt_versioning_interval_start", "opt_vers_auto_part", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@75", "engine_defined_option",
  "opt_versioning_option", "versioning_option", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "create_field_list_parens", "field_list", "field_list_item",
  "column_def", "key_def", "$@76", "$@77", "$@78", "$@79", "$@80", "$@81",
  "$@82", "constraint_def", "period_for_system_time",
  "period_for_application_time", "opt_check_constraint",
  "check_constraint", "opt_constraint_no_id", "opt_constraint",
  "constraint", "field_spec", "@83", "field_type_or_serial", "$@84",
  "$@85", "opt_serial_attribute", "opt_serial_attribute_list",
  "opt_asrow_attribute", "opt_asrow_attribute_list", "field_def", "$@86",
  "opt_generated_always", "vcol_opt_specifier", "vcol_opt_attribute",
  "vcol_opt_attribute_list", "vcol_attribute", "parse_vcol_expr", "$@87",
  "parenthesized_expr", "virtual_column_func", "expr_or_literal",
  "column_default_expr", "field_type", "qualified_field_type",
  "field_type_all", "field_type_numeric", "opt_binary_and_compression",
  "field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "last_field_options", "field_length_str",
  "field_length", "field_scale", "opt_field_length", "opt_field_scale",
  "opt_precision", "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "opt_enable", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "collation_name_or_default", "opt_default",
  "charset_or_alias", "opt_binary", "binary", "opt_bin_mod", "ws_nweights",
  "$@88", "ws_level_flag_desc", "ws_level_flag_reverse", "ws_level_flags",
  "ws_level_number", "ws_level_list_item", "ws_level_list",
  "ws_level_range", "ws_level_list_or_range", "opt_ws_levels",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "fulltext", "spatial", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "opt_USING_key_algorithm",
  "opt_key_algorithm_clause", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "ignorability", "key_list", "opt_without_overlaps",
  "key_part", "opt_ident", "string_list", "alter", "$@89", "$@90", "$@91",
  "$@92", "$@93", "$@94", "$@95", "$@96", "$@97", "$@98", "$@99", "$@100",
  "$@101", "account_locking_option", "opt_password_expire_option",
  "opt_account_locking_and_opt_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@102", "$@103", "$@104", "$@105",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@106", "add_part_extra", "reorg_partition_rule", "$@107",
  "reorg_parts_rule", "$@108", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@109", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@110", "$@111",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@112", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@113", "opt_checksum_type", "repair_table_or_view", "$@114", "repair",
  "$@115", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@116", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@117",
  "persistent_index_stat_spec", "$@118", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@119", "check", "$@120", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@121", "opt_no_write_to_binlog", "rename", "$@122", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@123",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@124",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@125", "cache_keys_spec",
  "$@126", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "$@127", "$@128", "select_into", "$@129", "$@130", "simple_table",
  "table_value_constructor", "$@131", "query_specification_start", "$@132",
  "$@133", "query_specification", "select_into_query_specification",
  "query_expression", "query_expression_no_with_clause",
  "query_expression_body_ext", "$@134", "$@135",
  "query_expression_body_ext_parens", "query_expression_body", "$@136",
  "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "boolean_test", "predicate", "bit_expr", "or", "and", "not",
  "not2", "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "substring_operands", "function_call_nonkeyword",
  "function_call_conflict", "function_call_generic", "@137",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "$@138",
  "$@139", "$@140", "$@141", "$@142", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@143", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@144",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@145", "cast_type",
  "cast_type_numeric", "cast_type_temporal", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "when_list", "when_list_opt_else",
  "decode_when_list_oracle", "table_ref", "json_text_literal",
  "json_text_literal_or_num", "join_table_list",
  "json_table_columns_clause", "json_table_columns_list",
  "json_table_column", "$@146", "$@147", "json_table_column_type",
  "json_table_field_type", "json_opt_on_empty_or_error",
  "json_on_response", "json_on_error_response", "json_on_empty_response",
  "table_function", "$@148", "$@149", "esc_table_ref",
  "derived_table_list", "join_table", "$@150", "$@151", "$@152", "$@153",
  "$@154", "$@155", "inner_join", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "table_primary_ident_opt_parens",
  "table_primary_derived_opt_parens", "table_reference_list_parens",
  "nested_table_reference_list", "join_table_parens",
  "table_primary_ident", "table_primary_derived", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@156",
  "$@157", "index_hints_list", "opt_index_hints_list", "$@158",
  "opt_key_definition", "$@159", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias_clause",
  "table_alias_clause", "opt_all", "opt_where_clause", "$@160",
  "opt_having_clause", "$@161", "opt_group_clause", "group_list",
  "olap_opt", "opt_window_clause", "window_def_list", "window_def",
  "window_spec", "$@162", "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@163", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "fetch_first_clause", "first_or_next", "row_or_rows",
  "only_or_with_ties", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@164", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@165",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@166", "$@167", "do", "$@168", "drop", "$@169",
  "$@170", "$@171", "$@172", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@173", "$@174", "replace", "$@175", "$@176",
  "insert_start", "stmt_end", "insert_lock_option", "replace_lock_option",
  "insert_replace_option", "opt_into", "insert_table", "$@177",
  "insert_field_spec", "$@178", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@179", "no_braces_with_names", "$@180", "opt_values",
  "opt_values_with_names", "values", "values_with_names", "expr_or_ignore",
  "expr_or_ignore_or_default", "opt_insert_update", "$@181", "$@182",
  "update_table_list", "update", "$@183", "$@184", "$@185", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@186", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "delete_single_table_for_period",
  "single_multi", "$@187", "$@188", "$@189", "$@190", "opt_returning",
  "$@191", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@192", "$@193",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@194", "show_param", "$@195", "$@196",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@197", "$@198", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "explain_for_connection", "flush", "$@199",
  "flush_options", "$@200", "opt_flush_lock", "flush_lock", "$@201",
  "flush_options_list", "flush_option", "opt_table_list", "backup",
  "backup_statements", "$@202", "opt_delete_gtid_domain",
  "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@203", "reset_options",
  "reset_option", "$@204", "$@205", "slave_reset_options",
  "master_reset_options", "purge", "$@206", "kill", "$@207", "kill_type",
  "kill_option", "opt_connection", "kill_expr", "shutdown", "$@208",
  "shutdown_option", "use", "load", "$@209", "$@210", "$@211", "$@212",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "with_clause", "$@213",
  "opt_recursive", "with_list", "with_list_element", "opt_cycle", "$@214",
  "opt_with_column_list", "with_column_list", "ident_sys_alloc",
  "comma_separated_ident_list", "with_element_head", "insert_ident",
  "table_wild", "select_sublist_qualified_asterisk", "order_ident",
  "simple_ident", "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias",
  "ident_cli_set_usual_case", "ident_sysvar_name", "ident", "label_ident",
  "ident_or_text", "user_maybe_role", "user_or_role", "user",
  "keyword_table_alias", "keyword_ident", "keyword_sysvar_name",
  "keyword_set_usual_case", "non_reserved_keyword_udt",
  "keyword_sp_var_not_label", "keyword_sp_head", "keyword_verb_clause",
  "keyword_set_special_case", "keyword_sysvar_type", "keyword_data_type",
  "keyword_cast_type", "keyword_sp_var_and_label",
  "reserved_keyword_udt_not_param_type", "set", "$@215", "set_param",
  "$@216", "$@217", "$@218", "set_stmt_option_list",
  "start_option_value_list_following_option_type", "$@219",
  "option_value_list", "option_value", "$@220", "option_type",
  "opt_var_type", "opt_var_ident_type", "set_stmt_option", "$@221",
  "$@222", "$@223", "option_value_following_option_type", "$@224", "$@225",
  "$@226", "option_value_no_option_type", "$@227", "$@228", "$@229",
  "$@230", "$@231", "$@232", "$@233", "$@234", "$@235", "$@236",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "$@237",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@238", "handler", "$@239",
  "handler_tail", "$@240", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@241", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "role_name", "grant_role", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "column_list_privilege",
  "column_privilege", "object_privilege", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "user_and_role_list", "via_or_with", "using_or_as", "grant_user",
  "auth_expression", "auth_token", "opt_auth_str", "opt_require_clause",
  "resource_option", "resource_option_list", "opt_resource_options",
  "opt_grant_options", "opt_grant_option", "grant_option_list",
  "grant_option", "begin_stmt_mariadb", "$@242", "compound_statement",
  "opt_not", "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@243", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@244", "$@245", "$@246", "$@247", "$@248",
  "sf_return_type", "$@249", "xa", "opt_format_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "$@250", "opt_migrate", "install", "uninstall", "keep_gcc_happy",
  "_empty", "statement", "sp_statement", "$@251", "$@252", "$@253",
  "sp_if_then_statements", "sp_case_then_statements",
  "reserved_keyword_udt", "keyword_sp_block_section", "keyword_label",
  "keyword_sp_decl", "opt_truncate_table_storage_clause",
  "ident_for_loop_index", "row_field_name", "while_body", "$@254",
  "for_loop_statements", "sp_control_label", "sp_block_label",
  "remember_end_opt", "sp_opt_default", "sp_opt_inout",
  "sp_proc_stmts1_implicit_block", "$@255", "remember_lex",
  "keyword_directly_assignable", "ident_directly_assignable",
  "ident_cli_directly_assignable", "set_assign", "$@256", "$@257", "$@258",
  "labels_declaration_oracle", "label_declaration_oracle",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@259", "sp_no_param", "opt_sp_parenthesized_fdparam_list",
  "opt_sp_parenthesized_pdparam_list", "opt_sp_name",
  "opt_package_routine_end_name", "sp_tail_is", "sp_instr_addr", "sp_body",
  "$@260", "$@261", "$@262", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@263",
  "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@264",
  "package_specification_procedure", "$@265",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@266",
  "package_implementation_procedure_body", "$@267",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "sp_decl_variable_list_anchored", "sp_param_name_and_mode", "sp_param",
  "sp_param_anchored", "sf_c_chistics_and_body_standalone", "$@268",
  "sp_tail_standalone", "$@269", "$@270", "drop_routine", "create_routine",
  "$@271", "$@272", "$@273", "$@274", "$@275", "$@276", "$@277",
  "opt_sp_decl_body_list", "sp_decl_body_list", "$@278",
  "sp_decl_non_handler_list", "sp_decl_handler_list",
  "opt_sp_decl_handler_list", "sp_decl_non_handler", "$@279",
  "sp_proc_stmt", "sp_labelable_stmt", "sp_proc_stmt_compound_ok",
  "sp_labeled_block", "$@280", "$@281", "$@282", "opt_not_atomic",
  "sp_unlabeled_block", "$@283", "$@284", "$@285",
  "sp_block_statements_and_exceptions", "$@286", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5790)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3838)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
   39826, -5790, -5790, 94506, -5790, -5790,  3160,  1106, 94506, -5790,
      53, -5790,   368, -5790, -5790, -5790, -5790,  3810, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,   135,  1084, -5790, -5790,  1103,
   -5790, -5790, -5790, -5790,   732, 80313,    31,  1047, -5790, 84048,
   -5790, -5790, -5790, -5790, 84048, -5790, -5790, 94506, -5790, -5790,
     460, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
     608, -5790,  1850,  2317, -5790, -5790, -5790, -5790, -5790, -5790,
    1323, -5790, -5790, -5790, -5790, -5790, -5790,  1084, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,   756, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,   926,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, 95253, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,   272, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    2174, -5790, -5790, -5790, -5790, -5790,   267, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    1799, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, 94506,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  1103, -5790,
   -5790, -5790,  1774, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,   756, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   94506, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,   211, -5790, -5790,   234, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  1849, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  2484, -5790, -5790,   190,  1569,  1947, -5790,
   -5790,  1312, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,  4545, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,  1881, -5790, -5790, -5790, -5790,  3821,
    2055, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, 48071, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,   190, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,   191, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,  1261, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, 96000, 94506,  1480,  1547, 94506,
    1870, 81060,  1870, -5790,   483, -5790, -5790,  1933, -5790,  1691,
   -5790,  1084,  1553,  1639,  2168,  2511,   124,  2304, 81807,  1040,
    1870, -5790,  1936,  1870,  1870,  1870,  1870,  1870,  1870, -5790,
    1870,  1870,  1105,103470, 69855, -5790, -5790,    36,  2487, -5790,
   -5790, -5790, -5790, -5790, -5790,  6174,  1084, 23665,  2628, -5790,
   -5790,  2193,  4645,  1999, -5790,  2479, -5790, -5790, 94506, -5790,
    1870,  6174, -5790,  2479, 70602,  4096, 51817,  8241,  2479,  1084,
    2575, -5790,  1991, -5790, -5790, -5790, -5790, -5790, -5790, 94506,
   -5790,   756, -5790, -5790,  2444, -5790, -5790, 81060, -5790, -5790,
   -5790, -5790, -5790,  2781, 23665,   270,  2540, -5790, -5790,  2422,
   48818, 81060,  2706,  2511,  2728, -5790,  1810,   417, -5790,  2127,
    2207,  2511,  2023,  2216,  2511,  2622,  1870,  1870, -5790, -5790,
    2818,  2818,  2818,  2434,  2818, -5790,  2818,  2790,  2138,   669,
   -5790, -5790,  2147, 94506,  2706, -5790,  2706, -5790,  2798,  2706,
    2706,  2279,  2804,  2809,   180,  2063,   223,   223,  1933, 43589,
     342,  2648, -5790,  2790,  1444,  1370,  1416,  1416,  1416,  1444,
     190,  1444, -5790,  3552,  1691,  3443, 94506, -5790,  2840, -5790,
    2190, -5790, -5790, -5790, 94506, 94506,   210, -5790,  2252, -5790,
    2204,  1549, 72096, -5790,  2887, -5790, -5790, -5790, -5790, -5790,
   -5790,  2740,   707,  2356,  2585,  2286, -5790,  2764, 81060, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, 94506,  2259, -5790,
   -5790, 23665,  2940,  2168, -5790,  2749, -5790, -5790, -5790, -5790,
   48818, -5790, -5790, -5790,103470, -5790, -5790, -5790,  1304, 66867,
   -5790,  2269,  2590, -5790,  2287,  1365,  1396, -5790, -5790,  1430,
    1540,  1559, -5790, -5790, -5790,  1785, -5790, -5790, -5790,102723,
    1542,  2275, -5790, -5790,  2943, -5790, -5790, 84795,   675, 94506,
    2946,  1870, 94506, 94506, 94506, 94506, 94506, -5790, 81060, -5790,
   -5790,  1870,  1870, -5790, -5790,  2947, -5790,  2515,  2470,  2201,
    2350,  2667, -5790,  2561, -5790,  2369,  2446,  2587,  2395,  2398,
    2449,   183, -5790,  2410, -5790,   154,  2868,   110,   126,  2880,
     129,   139,  2993,  2883,   160,  1018,   167,  2666,   168, -5790,
   -5790, -5790, -5790,  2951,  3039,  2465, -5790,  2475, -5790,  2984,
    2856,  1325, -5790, -5790,  1573,  2907,  1210, 48818,105519,104217,
   82554,105519,105519,105519, -5790, -5790,   284, 94506,104868, 94506,
    5968, -5790, -5790, 41348, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, 94506, -5790, -5790, -5790, -5790, -5790, -5790,
    2081,  1291,  8782, -5790,  2498, -5790, -5790, -5790, -5790, -5790,
   85542, -5790,   215,   216,  2863, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, 29865,  2506,  2522,  2542,
   19015,  2543,  2546,  2550,  2572,  2578,  2350,  2350,  2350,  2582,
    2589,  2606,  2611,  2614,  2635,  2636,  2646, -5790,  2647,  2662,
    2669,  2678,  2681,  2694, 24440,  2702,  2710,  2720, 37559,  2725,
    2750,  2751,  2757, 23665,  2582,  2767,  2776, -5790,  2794,  2803,
    2816,  2817,  2824,  2844,  2870,  2874,  3256,  2875,  2879,  2926,
    2929, -5790,  2350,  2582,  2582,  2932,  2936,  2350,  2950,  2955,
    2960,  2965,  2966,  2974,  2975,  2979,  2983,  2998,  3001,  3004,
    3005,  3018,  3026,  3030,  3036,   333,  3040,  3041,  3045,  3046,
    3048,  3055,  3057,  3061,  3064,  3065,  3068,  2569,  3073,  3077,
    3078,  3082,  2579,  3083,  3084,  3085,  3088,  3090,  3099,  3104,
     334,  3107,  3115,   356,  3120,  3128,  3131,  3133,  3134,  3135,
    3137,  3141, 30640, 31415, 29865, 16690, -5790, 94506, 96747, -5790,
   -5790,  2920,  1985,  2402,   561, 29865, -5790, -5790, -5790,  3223,
   -5790,  3280, -5790, -5790, -5790, -5790,  3157,  3162, -5790,  3174,
   -5790, -5790,  3200,  2713, -5790,  3313, -5790, -5790, -5790, -5790,
   -5790,  2689,  3142,  3534,  3569, -5790, -5790,  1719, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  2801,  2722, -5790,  3313, -5790, -5790, 75084, -5790,  5958,
   -5790, -5790,  2515,  3052,  3391, -5790,  3470, -5790,  3466, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  4096, -5790, -5790, 53333,  3442,  -117, -5790, -5790,   403,
   -5790,   446,   462, 65373, -5790,   378, 66120,   465, 86289,  1142,
   -5790, 72843, -5790,   468, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,  2917, -5790,  3080,  3314,  3147,  3590,
     385, -5790, -5790,   186,    72,  3100,   115, -5790,   958, -5790,
     385, -5790, 75831,   280,   432, -5790,   981, -5790,  3680, -5790,
   -5790,  3158,  3145,  3215, -5790,  3252, -5790,  2511, -5790,   435,
   -5790,   280,   385,   432, -5790,  3422,  3504,  1203,  3314, -5790,
    1698, -5790, -5790, -5790,  3795, -5790,  3153, -5790,  3768, -5790,
   94506,  1349, 48818, -5790, -5790, -5790, -5790,  3159, 48818, 48818,
     121,   239,  2920,  3166, 23665, -5790, -5790,  5423, 55607,  3369,
    1218,  1382, -5790, -5790,  1850, 94506, -5790, -5790,  1061, -5790,
    3601, -5790,  3178, -5790, 97494,   239,  3838, -5790, -5790, -5790,
     825,  3572, -5790,  3182, -5790, -5790, -5790, -5790, 48818, 94506,
    2511, -5790, -5790, -5790, -5790,  3187, -5790, -5790,  3393,  3274,
   -5790,  3212, -5790, -5790,   202, -5790, -5790,  3976, -5790, 94506,
   -5790,  2706, -5790, -5790,  2706, -5790, -5790, -5790,  2706,  2706,
    2460,  2706, -5790, -5790,  3236, -5790,  3519,  3520,  2764, -5790,
    3203, 42842, 94506,  3980, -5790,  3662, -5790, -5790, -5790,  3205,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3774,  3965,
    3965, -5790, 54091, -5790, -5790,  3861,  2648,  1567,  3702, 57123,
    3851,  3938, 59397, -5790,   280, -5790, -5790, -5790, -5790,  1386,
   94506, -5790,  1386,  1386, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,   190, -5790, -5790,  1553,
    3613, 73590, 94506,  1444,  1370, 18240,  3966,  3968, -5790, -5790,
   -5790,  2511,   384,  3604, -5790, 94506, -5790, -5790, -5790,  2350,
    4012, -5790, -5790, -5790, -5790, -5790, 48818,  3428, 72096,  1870,
   -5790, -5790, -5790,   707, -5790,  1843, 94506, 48818,  3271, -5790,
   48818,  3228, 23665, -5790, -5790,  3712,  2920, -5790,  3595, -5790,
   -5790, 48818,  1447, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3243, -5790,
   -5790, -5790,  3243,   879, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,  3244, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3807, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  3244, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,   241, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,  3643,  3289,   578, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,  3643, -5790,   578, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  3244, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,  3253, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  3643, -5790,   578, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  3243, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3243, -5790, -5790,
     578,  3243, -5790,  3268,  3244,  3643,   408,  2171,  3244, -5790,
   -5790,  3243,  3275,  3243,  3243,  3243,  3243, -5790,  3243,  4026,
    3270, -5790, -5790, -5790, -5790, -5790, -5790, -5790,   158,  3243,
    3243,  3243,  3243,  3282,   206,  3244,   279,   282,   287,   289,
     296,   300, -5790,  3244, -5790, -5790,  3934, 94506,  3943, -5790,
    3719,  1542,  3273,  3281, -5790, 48818,  4023, 48818,  3952,  2648,
   -5790,  3292, -5790,  3300, -5790, -5790,  3961, 94506, 94506, -5790,
   -5790, -5790, -5790,  3303, 76578, -5790, 75084, 48818, -5790, -5790,
    3905,  3436, -5790, -5790, -5790, -5790, -5790, -5790,  3388, -5790,
   -5790,  3315, -5790, -5790, -5790, -5790,  3767, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, 75084, -5790, -5790,  3769,  3770,
   -5790, 72096,  2022,  7860, 96747, -5790,  3967, -5790, -5790, -5790,
    3795, -5790, -5790, 25215, -5790, 25990, -5790, -5790, -5790,  3599,
     687,  1383, -5790, -5790, -5790, -5790, -5790, -5790,  4062, -5790,
   -5790, -5790, -5790, -5790, -5790,  3799, 94506,  3549,  3988,  3963,
   -5790, -5790, -5790, -5790, -5790,  3808,  3337,  3947,  3333, -5790,
   -5790,   222, -5790,  3338, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, 48818, 54849, -5790, -5790, -5790,  3334,
   -5790, -5790, -5790,  3345, 29865, 29865, -5790,  4085,  4085,  4085,
   23665,  2527,  1783,  3709, 23665, 23665, 23665,  2283,  3358, -5790,
   -5790, -5790,   565, -5790,  3361, 23665, 23665, 38312,  3362,   948,
    7123, 23665,  4043,  4043, -5790, 23665, 23665, 16690,  4302, 23665,
   23665, 23665, 96747, 38312,  3813,  3363, -5790,  3364,  2349, 23665,
    2359, 23665, -5790, -5790, 23665, 23665, 23665, 23665,  3368, 32190,
    3372, 23665, 23665,  3374,  3502,  4085,  4085,  2380,   709, -5790,
   -5790, -5790,  4085,  4085, -5790, 23665, 23665, 17465, 23665, 23665,
   23665,  2533, 23665, 23665, 23665, 23665, 23665, 23665, 23665, 23665,
   23665, 23665, -5790, 23665, 23665, 23665, 23665, 23665,  1379, 23665,
   23665, 48818, 23665, 23665, 23665,  4036, 48818, 23665, 23665, 23665,
    4037, 23665, 23665, 23665,  3380, 23665, 48818, 23665, -5790, 23665,
    3291,  3291, -5790, 23665, 17465, 23665,  3392, 39065, 23665, 23665,
   23665, 23665, 24440, -5790, 24440, -5790, -5790,  3395,  3424,  1279,
     190, 23665,  3386, -5790, -5790, -5790, -5790, 23665, 23665, 23665,
   32190, -5790, -5790, -5790,   231, -5790, -5790, -5790, 26765, 32190,
    3397, 32190, 32190,  4016,  2263, 32190, 32190, 32190, 32190, 32190,
   32190, 32190, 32965, 33740, 32190, 32190, 32190, 32190, -5790, 81060,
   29865, 51059,  3400,  4050, -5790, 96747, -5790,  1621,  1178, -5790,
    2511,  4645, 35290, -5790,  3399, -5790,  3902, 48818, -5790,  3402,
    4065, 75084, 72096,  2022,  3419, -5790,  1474,   298, -5790, 76578,
   94506, -5790, -5790, -5790,  4123, 23665, -5790, -5790, -5790, -5790,
   -5790,  3410,   491,  3413, -5790,  1333, -5790, -5790, -5790, -5790,
   -5790, 94506, -5790, 87036, 52575,  3511,  4078,  3433,  2706, 87783,
   94506, 48818, 94506, 98241, 94506, 94506, 48818, 75084, 48818, -5790,
   -5790, -5790,  1065,   385, 94506,   385,   432,  1066,   385,  4063,
   -5790, -5790,  1502,  1502, -5790, -5790, -5790, -5790, -5790, -5790,
     385, 94506, 94506,   385, 72096, -5790,   432,  1353, -5790,  3728,
    3517, -5790, -5790, -5790,  3772, -5790, -5790,  4104,  3446, -5790,
    3798, -5790,  3545, -5790, -5790, 48818, -5790, -5790,   432, -5790,
     432,   432,  4112,   385,   385,   385, -5790, 44336,  3454,  3457,
   -5790,  3455, -5790,  3459, -5790,  4092, -5790, -5790, -5790,  3817,
    4248,  4101,  3467, -5790, -5790,  4039,   956, -5790,  3890, -5790,
    4018, -5790, 23665,  2920, 19790,  3745, -5790, -5790,  3746,  3749,
    3750, -5790, -5790, -5790, -5790,  3907,  3752, -5790,  2511,  3756,
   -5790, -5790, -5790,  3483, -5790, -5790, -5790, 81060, 35290, -5790,
    3484, -5790,  3505, -5790,   339, -5790, -5790,  4156,  3597, 23665,
   -5790, -5790, 48818,  3992, -5790,  2511,  1810, 94506, -5790, -5790,
    4234, -5790,   -34,  4158, -5790, -5790,  3606,  2023, -5790,  4158,
     911, -5790, -5790,  2818,  3685, -5790, -5790, -5790, 81060, -5790,
   -5790, -5790, -5790, -5790, -5790, 94506, -5790, 76578, 72096, 81060,
    2706,  2706, -5790, 48818,  2706, 94506, -5790, -5790, -5790,  2706,
    2706,  2706,  3538, -5790,  1525,  3503,  3515,  3526,  3527,  2075,
    3531, 45083,  2574,  6328,  4130,  4132, -5790,  4108,  2468,  4108,
   -5790, -5790, 45083, 44336,  3535,  3980, -5790, -5790, -5790, -5790,
   81060,  3540, -5790, -5790,  3536, -5790, 23665,  4254,  4193,  3861,
   -5790, -5790, 57881,  1560, 85542, -5790, -5790, -5790,  3891,  4082,
    1425, -5790,  3543,  3672, -5790,   587, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, 23665, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, 29865,  2614, -5790,  2920, -5790, -5790, -5790, -5790,
   -5790,   298,   244, -5790, -5790, -5790,  1408,  3922,  2742, -5790,
   -5790, 81060,  2742, -5790,  3565,  3867, -5790,  3869,    66, -5790,
   48818, -5790, -5790, -5790, -5790, -5790, 48818,  3571, -5790,  3761,
   94506,  2259,  3579,  3578,  2920,  4086, -5790,  3712, -5790, -5790,
   -5790,  6174,  4300,  7396,   136,  3631, -5790, -5790, -5790, -5790,
   -5790, 48818, -5790, -5790,  1127,  3593,  2954, -5790, -5790, -5790,
    3643,   298,  3643, -5790, -5790,  3108,   165, -5790, -5790, -5790,
     165, -5790,  1062,  3442, 77325,  3643, -5790, -5790, -5790, -5790,
    4069,   578,  2048, 78072,  2248,  3993, -5790, -5790, -5790,   165,
    2818, -5790, -5790,  3643, -5790, -5790, -5790,  2818,   165, -5790,
    4074, -5790, -5790, -5790,   165,  3643,103470,  2325,   578, -5790,
   -5790,   578,   165,   122, 94506,  2325, -5790,  2048,  4330,   578,
    3643,   165,  4356, -5790,   165,  4153,  4153,  4153, -5790, -5790,
     349, -5790, -5790,  1542, -5790, -5790, -5790,  3774,  3683, -5790,
    3610, -5790, -5790,    78,  4170, -5790, -5790,  4195, 94506,  4271,
   60144, -5790, -5790,  4201, -5790, 94506,  3617, -5790, -5790,  3619,
     370, 48818, 48818,  6174, -5790, -5790,  3623, -5790, -5790, -5790,
    4125, -5790, -5790,    86,  4347, -5790, -5790, -5790, 45830, 45830,
     154,  2868, -5790, -5790,  2880, -5790, -5790,  2883, -5790,  1018,
   -5790,  2666, -5790, -5790, -5790, -5790,  2083, -5790, -5790, -5790,
    4092, 23665, 50312,  2920, -5790, -5790, 48818, -5790,  4267, -5790,
   -5790,101229,   178, -5790, -5790,   325, 48818, -5790, -5790, -5790,
   -5790,  4260,  3765, 94506, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, 94506,  2259, 94506,103470,  6174,  6174, -5790, 81807, -5790,
    1468,  1474, -5790,  4378, 96747, 23665, -5790,  3637, -5790,  3640,
    3641,  2785,  3990, 23665, 23665, -5790,  3359,   571,   484, -5790,
    3645,  3657, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    3648, -5790, -5790, -5790,  1493,  1522,  3651, -5790, -5790, -5790,
    3663,   190, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  4301, -5790,   567, -5790, -5790, -5790, 23665,  1558,
    1593,  1649,  3664,   358,   513,  1663,  3334,  2141,  3658, 38312,
   96747,  4085,  3668,  1589,  4085,  3669,  1688,  1712,  1619,  1912,
    2274, -5790,   433, -5790,  1714,  1763, -5790, -5790,  3671,  3675,
    4085,  3676, -5790,  3677,  3679,  3682,  1874,   603,  3684, 20565,
   21340, 22115,  3225,  3687,  1877,  1906,  2318,  4085,  3689,  2553,
    2169,  2559,  1942,  2563,  2011, -5790,  2178,  2039,  2042,  3690,
    3166,  2046,  2617,  2656,  2082,  2119,  2120, -5790, -5790, -5790,
   -5790,  3670,  2675,  2679,  3678,  3692,  2718,  2732,  2733, 48818,
    3693,  2736,  3695,  2737, 48818,  2771,  2871,  2131, -5790,  2872,
    3681,  2132,   615,  3696,  3697,  2884,  3700,  2135, -5790, 96747,
   94506,  3703,  3655,  1226,   340,  3704,  2897,  4302,  4302, -5790,
   23665,  3707,   255, 96747,  2564,   463, -5790,  2402, -5790, -5790,
   -5790, -5790,   525, -5790,  3665,  2402,  3686,  1411, 16690, -5790,
    1310,  1850, 32190, 32190,  3698, 32190, 32190,  1780,   411,   411,
    3715,  3715,   638,   770, 24440,  1780, 24440,  1780,  3715,  3715,
    3715, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  4278,
    3713,  1722,  3711, -5790, -5790, -5790, -5790, -5790, -5790,    44,
    4109, -5790,  3903,   346, 23665, -5790,  3732,  4471,  4473,  4475,
   -5790, -5790, -5790, -5790, 75084, 75084,  3721, -5790,   911,  4076,
    4381, 76578,  4385, -5790,  3726, 45830, 45830, -5790,  3727, -5790,
   23665,  3723,  3724,  3729, 98988, -5790,  4392,   298, 78819,  2920,
   75084,   769, 18240, 94506, 94506, -5790, 86289,  4394,   840,  4017,
   -5790,  3739,  3740, -5790,   298, 18240,  3736,  1373,   499, -5790,
    3747,  3759, -5790, -5790, -5790, -5790, 23665,  3748, 94506, 94506,
   -5790, -5790, -5790, -5790, 94506, -5790, -5790, -5790, -5790, -5790,
   -5790,  2511, 23665, 94506,   385, -5790, -5790, -5790,   385, 94506,
     385, -5790,  2511,  4405, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,   385, -5790, -5790, -5790, -5790, -5790,
    3919,   280,  3252,  4063,  4158,   432, 48818,   385,   385, 23665,
   -5790, -5790, -5790, -5790,  4280,  3774, 19790,  3754,  3760, -5790,
   -5790,  6174, 94506, 96747,  4497, -5790, -5790,  8122, -5790, 81060,
   88530, 48818, -5790, -5790, -5790,  2276, -5790, -5790, -5790, -5790,
   -5790,  2920,  2540,  2614, -5790,  3764,  2920, -5790, -5790,  4454,
   -5790, -5790, -5790, -5790,  2511, -5790, -5790,  5013, -5790, 48818,
   -5790, -5790, 56365, 56365,  2059, -5790, 99735, -5790,  2511,  2920,
   48818,  1121,   325, -5790,  4509, -5790, -5790,  3883, -5790, -5790,
   -5790,  3773, -5790,  4194, -5790, -5790, -5790, -5790, -5790, -5790,
    3775, -5790,  4438, -5790,  3186,   474, 94506,   454,    66, -5790,
   94506, 94506, 48818, -5790, 94506, -5790, 94506,  2706, -5790, -5790,
    2706, 48818, 94506, 94506,  2706, 23665, 45083, -5790, -5790, -5790,
   -5790, -5790, 45083, -5790,  1280, -5790,  3985,  1861,  1861, -5790,
   -5790, -5790, -5790, -5790,  4409,  4108,  4108, 45083,  4411,  4491,
   -5790, 94506,  3806,   363, -5790, 54091, 94506,  2920, 23665, -5790,
    3814,  4193, -5790,   138,  1082,   587, -5790,  4060,   325, -5790,
   -5790, 59397,  4133, 59397, 59397, 96747,  4020, 23665, -5790,  4459,
    3792,  2920, 18240, 18240,  3186,  2511, -5790,   298,   298,  4028,
    4322,  4323,  3931,  2511,  4327,  4328,  4331, -5790, -5790, -5790,
   -5790, -5790,  2651,  2529,   307,  1060, 72096,  4286,   911,  4402,
    3822, -5790, 48818,  4483, -5790, -5790, -5790, -5790, 23665, -5790,
   -5790, -5790,  7653, -5790,  3842,  3843,  3844,  3850,  3853,  3855,
    3856,  3857,  3858,  3860,  3866,  3868,  3871,  3872,  3874,  3876,
    3877,  3881,  3882,  3885,  3886,  3892,  3893,  3894,  3895,   140,
   -5790, -5790,  3880, -5790, -5790, -5790, -5790, 94506,  4503,  3889,
    3899,  3901,  3906, -5790, -5790, 94506, -5790,  2214,  4350,  4376,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, 79566,   298, -5790, -5790,  2333, -5790, -5790,
    2390, -5790, -5790, -5790, -5790, -5790,  2403, 69108, -5790, 23665,
   23665, -5790, -5790, -5790, -5790, -5790,  2325,  2325,  3879, -5790,
   -5790, -5790, -5790, -5790,  4330, -5790,  3909, -5790,  3910, -5790,
   -5790, -5790, 64626, -5790, -5790, -5790, -5790,  2944, -5790,  4268,
   -5790,  1861, 94506,  4401, 60144, -5790,  4121,  4533, -5790, -5790,
   44336, -5790,  3911, 48818, -5790, 76578, 75084, -5790, -5790, -5790,
    3917,  1468,  8264, -5790, -5790,  4672, 72096,  4374, -5790, -5790,
    3915, -5790,  3916,  4424,  4425, -5790, 96747, -5790, -5790, -5790,
    2920, -5790, -5790,  3925, -5790, -5790,  4039,  3965, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  3953,  4207,  4325, -5790, -5790, -5790, -5790,
   -5790, -5790,  4567, -5790, -5790, -5790,  2419,   310, -5790, -5790,
   -5790,105519,105519,105519, -5790,  4291, -5790,101976, 23665, -5790,
    2246, -5790, 23665, -5790, -5790, 23665, -5790,  2920,  3573,106256,
   78072, -5790, 78072,106256, 23665, -5790,  3939, -5790,  4574,  4575,
   -5790, -5790, -5790, 23665, -5790, 23665, 23665,  2250, 23665, 23665,
   23665, 23665, -5790, 23665, -5790, 23665, 23665, -5790, 32190, -5790,
    3937,  3946, -5790, -5790,  3948, -5790, 23665, 23665, -5790, -5790,
   -5790, 23665, 23665, 23665, -5790, -5790,  3949, -5790, -5790, -5790,
   -5790, 23665, 23665, 23665, -5790, 23665,  3635, 23665,  3831, 23665,
    4025, 23665, -5790, 27540, 23665, -5790,  3951, -5790, -5790, -5790,
   -5790, 23665, -5790, 23665, -5790, 23665, 23665, 23665, -5790, 23665,
   -5790, -5790, 23665, 23665, 23665, 23665, -5790,  4520, 23665, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, 23665, -5790,   461, 28315, -5790, 23665, 23665, 23665, -5790,
   -5790, 23665,  3954,  3957, -5790, 94506, -5790, 23665,  2531,  3069,
     325,  3956, -5790, -5790,  3964,  3969,  3166, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,   948, 32190,  1245, 32190,  1850,  1988,
   16690, -5790,  1380,  1850,  4302,  4302, 94506,  4680,  3960, -5790,
   23665, 96747, 23665,  3971,  3970, -5790,  3974, 32190, -5790, -5790,
    3975, -5790,  2438,  3069,  4049,  4415, -5790,  2920, 35290,  4465,
   -5790, 48818,  4468,  4523,  4172, -5790, 75084, 72096,  4638,  4642,
   -5790,  2920, -5790,  3979, -5790, -5790, -5790,  3983, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,   505, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, 23665, 75084, -5790, -5790, -5790,
   -5790,   298, -5790,  3994,  4000, -5790, -5790,   298,   298, 18240,
   -5790, 40587, -5790, -5790,  1090,  4277,  4546, -5790, -5790, 94506,
    1333, 94506, -5790, 52575, 52575, 89277,  2920,  1041, -5790, -5790,
   -5790, -5790,  2920, -5790, -5790, -5790, -5790, -5790, -5790,  4011,
   -5790, -5790, -5790,  4757, -5790, -5790,  4405, -5790,  2648,   432,
   -5790, -5790,  2920, 39065,  2229, -5790, -5790, -5790, 19790,  8717,
   -5790,  4003,  4005,  4009, -5790, 48818,  4004,  4474, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  4021, -5790,
   -5790, 19790,  4032, -5790,  4158, -5790,  3917,  1296,  4033,  4015,
   -5790, -5790, -5790, -5790, -5790, -5790,   253,   294,  3066,  2648,
   -5790, -5790,   175, -5790, -5790, -5790, -5790, -5790,  1311, -5790,
   -5790,  4158, -5790,   -34,  2511,  4066,   573,   325,  4259, -5790,
   -5790,  3186,   952,   952,  4606,   474,  4477, -5790,  4286,  4687,
    4612,  4613, -5790,  2651, -5790,  2179,  2031, -5790, -5790, -5790,
   94506, -5790, -5790,  -107, -5790, 48818,  2261,  3662,  3662, -5790,
    1861,   364, -5790, 32190,  4767, -5790,  4531, 45083,  4661,  4664,
   -5790, 45083, -5790, -5790,  2464, -5790, -5790, 74337, -5790, -5790,
   -5790,  2920,   308,  2521, 23665, 94506, -5790,  3814,  4106, -5790,
   -5790,  1082, -5790, -5790, -5790, -5790, 59397, -5790, -5790, -5790,
    1560,  4040,  2521,  1567,  4038, -5790, -5790, -5790, -5790, 78819,
   74337, -5790,  4416,  4422,  1851, -5790, -5790, -5790, -5790,   298,
     298, -5790,   203,   298, -5790, -5790,  1126, -5790, -5790,   544,
     404,  2651, -5790,  2511,  2511,  2511,  2511,   325,  2511,  2511,
    2477, -5790,   373, -5790, -5790, 81060, -5790,  4804,  4805, -5790,
    4806, -5790, -5790,   249, -5790,  2813,   159, -5790,  1014, -5790,
    4599, 94506,  4787,  3822, -5790,   383,  2259,  2920, -5790,  4560,
    4064,  4068,   325,  4072,   325,   325,  2511,  2511,  4011,  2511,
     325,  2511,  2511,  2511,  2511,  2511,  2511,  2511,   325,  2511,
    1364,  3204,   376,  2511,   325,  7396, -5790, -5790,  2486,  2599,
   -5790, 67614, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    4817, -5790, -5790, -5790, -5790, -5790,  2048,  2818,  2048, -5790,
  103470, -5790, -5790,  3244, -5790, -5790, -5790, -5790, -5790, -5790,
    2920,  2920, -5790, -5790, 94506, -5790,  4818, -5790, -5790, -5790,
    4295, -5790, -5790, -5790,  4386, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,  4061, 44336,   517, -5790, 58639,  4615,
    2648,  4088, -5790,   911, -5790, -5790,  1981,  4684, -5790,  4083,
   23665, -5790,   477,  4273,  4094, 60891, 72096, 72096, -5790,  2822,
   -5790, 48818, -5790,  4728, -5790, -5790, -5790, -5790, -5790, 23665,
   -5790, -5790, 94506,  2259,  3905, -5790, -5790, -5790, -5790, -5790,
    4519,105519,  4080,  2920, 23665,  2920,  2920, 23665,  3243,  3243,
    3244,  3282, -5790,  4779, -5790,  4721,  3243,  3243, -5790,  3243,
    4722,  3243,  3243,  4093, -5790, -5790, -5790, -5790, -5790,  4097,
    4099,  4100,  3166, -5790, 23665, 23665,  2915,   149,   149, 23665,
    2308,  2330,  1246, -5790,  2958,  2963,  2989,   450, 96747, -5790,
   -5790,  2996,  3009,  3032,  3033,  3074, -5790,  2354,  3653,  2376,
    2920, 23665,  2920, 23665,  2920, 23665,  2920, 24440,  3111,  3124,
   -5790,  2517,  3841, -5790,  2520,  4167,  1313,  3129,  2412,  2528,
    1424,  3144,  3165,  2537, -5790,  2789,  4848,  2555, 24440,  3177,
    3214,  2423,  2491,  3247, 96747, 94506,  4095,  3248,  4105,  4105,
     595, -5790,  4103, -5790, -5790, -5790,  4110, -5790, 23665, 23665,
    4107,  2402, -5790, 23665,  1850, 32190,  1490, 32190, -5790, -5790,
    4278, -5790, 23665, -5790,  4686,  4111,  4114,  2920, -5790, -5790,
   94506,  4128,   561, -5790,  4011, -5790,  4758, -5790,  4851,  4135,
    4148,  4137,  3975, -5790, 75084, -5790, 48818, -5790,  4790,  3619,
   -5790, 72096, 72096, -5790, 83301, -5790, 61638, 94506, 94506, -5790,
    2920, -5790, 18240,   769,  4893,  4894, -5790, -5790, -5790, -5790,
      54,  4696, -5790, -5790, -5790, -5790, 18240,   298, -5790,   298,
   18240,  3759, -5790, -5790, -5790, -5790,  3737, -5790,   280, -5790,
   -5790, -5790,   385,  4141, -5790,   298,   444, -5790, 19790,  4144,
    4143, -5790,  4755, -5790,   948,   319, -5790,  3774, -5790,  4623,
   -5790, -5790,  4152, 90024, -5790,  4154, -5790, -5790,  4708, -5790,
   -5790,  4182, 56365, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,   280,  4383, -5790, -5790, -5790, -5790,
   -5790,  3387, -5790,  4247,  4249, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, 48818,  4742, 72096,   159,  4537, 48818,
   48818,  6932,  7344,  2651,  2179, -5790, -5790, -5790,  2511, -5790,
   -5790, -5790,  2031, -5790,  4162, 94506, -5790,  3822,  4163,   583,
    4163, -5790, -5790, -5790, -5790,   561,  1861,  1861,  2682,  4650,
   45083, 45083,  4500,  4653, 23665,  4169, -5790, 94506, -5790,  1230,
   -5790,  4576, -5790, -5790, 23665, -5790, -5790, -5790, -5790,  2920,
    4903,  4173, -5790, -5790, -5790, -5790, -5790, -5790, 23665, -5790,
   57881, 23665,  4171,  4176, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,   461,   461, -5790, -5790,   461,   461, -5790, -5790, -5790,
   -5790,   461,   461, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  2529, -5790,  4929,  1443, -5790,  4759, -5790,
   -5790, -5790, -5790,   131,   325,   325,   325,  3204,  1637, -5790,
    2813,  1782,  4515, -5790,  6756,  1850,   219,  4679,  2375, -5790,
    2580, -5790,  4915, -5790,   314, -5790, -5790, -5790,   390,   405,
   -5790,   409, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   94506, -5790,  4760, -5790, -5790, -5790, -5790,  3275,   302, -5790,
   -5790,  4183, -5790, -5790, -5790, -5790, -5790, -5790, 64626, -5790,
   -5790, 60144,  2648, -5790, 94506,  4527,  4720, -5790, -5790, -5790,
   -5790, -5790, -5790,   948, -5790,  2920, -5790,  4842, -5790, -5790,
   -5790, -5790,    66,    66, -5790, -5790, -5790, -5790,   319, -5790,
   -5790,  4728,  4469, -5790,  1816,  2920, -5790, -5790, -5790, -5790,
   -5790, -5790, 94506,  1246,  2920, -5790,  2048, -5790, -5790,  3243,
   -5790,  2048, -5790, -5790, -5790, -5790, -5790, -5790,  2048, -5790,
   -5790, -5790, -5790,  4188,  4302,  4302, -5790,  4911,  4732,  4809,
    3260, 23665, 23665, -5790, 23665, -5790, -5790, -5790,  1733,  4198,
    4677, -5790, -5790, -5790, -5790, -5790, -5790, 23665, 23665, 23665,
    2920,  2920,  2920,  4302, -5790, -5790, -5790,  4120, -5790, -5790,
  106256, -5790, 23665, -5790, 23665, -5790, 23665, -5790, 23665, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,   376,  4302, -5790, -5790,
   23665, 23665, -5790, -5790, -5790, 94506, -5790,  3069,  4209,  4488,
   -5790, -5790, -5790,  3069,  4349, -5790, -5790,  3069,   325, -5790,
   -5790, -5790,  2593,  2402, -5790, 23665,  1850,  4792,  4211,  4939,
    4219, -5790, 23665, 83301, -5790,  4220,  4221, -5790, -5790, -5790,
    4659, 23665,  4841,  4796, -5790,  3069, 94506, -5790, -5790, -5790,
   72096,  3726,  3726, 90771, -5790, -5790, -5790, -5790,  1894,   298,
     298, 18240, -5790, -5790,  4228,  4229, 18240, 18240, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,   280, -5790, 39065,  2648, 22890, -5790, -5790, -5790, 19790,
   -5790,  4231, 39065,  4704, -5790, -5790, -5790,  4615,   357, -5790,
   -5790, -5790,  4623, -5790, 91518, -5790,  4233, -5790,  4232, -5790,
    1760,  4570,  4849, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  4238,
   -5790, -5790,  4257, -5790,  4239, -5790, -5790, -5790, 48818, -5790,
   -5790,  4269, -5790, -5790, 42095,  4861,  4283,  4616, 48818,   298,
     298,   298,   298,   298,   298,   298,   298,   298,   298,  4622,
     298,   298,   298,   298,   298,   298,   298,   298,   298,   298,
    1834, 94506,   298,   298, -5790, -5790,  4828, -5790,  4329, -5790,
   -5790, -5790, -5790, -5790,   298, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,  1378,  4831,  4982,  4261, -5790,
   -5790,  4799, -5790, -5790, -5790, -5790,  4367,  4802,  3822,  2828,
   -5790, -5790, -5790,  4751, -5790, -5790, -5790,  4754,  2920, 94506,
   -5790, -5790, -5790,  1387,  2526,  4884,  2521,  4270, 94506,  2521,
    1082,   587,  2920, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,   471, -5790, 81060, -5790,
   -5790, -5790, -5790, -5790,  5029,  5030, -5790, -5790, -5790, -5790,
    4463,   753,  5104,  1805,  4846,  4681,  4847,  2365,  1666,   298,
    4852,  5006, -5790,   562,   298,  4855,  4914,  4364,  4916,  4859,
   -5790,  4368,  4681,  4863,  4485,  4867,  4868,  4869, -5790, -5790,
    7344, -5790, -5790, -5790, -5790,   109, 46577, -5790, -5790, -5790,
   -5790, -5790,  4479, 23665, 23665,  4885, 94506,  4886, -5790,  4706,
   -5790, 94506, -5790,   948, -5790, -5790, -5790,  4602, -5790,  2602,
   -5790, -5790,  2609, -5790, -5790,  2631, -5790, -5790, -5790, -5790,
   -5790,  4844, 94506, -5790, -5790,  3911, -5790,  4966, -5790,  4655,
    3419, -5790, -5790,   190,  4512,  4788,  4788, -5790, -5790, -5790,
    4900, -5790, -5790, -5790, -5790,  4951,  2259,105519,  4675, -5790,
   -5790, -5790, -5790, -5790, -5790,  4326,  4332, 23665,  2818,  4809,
   59397,  4334, -5790, -5790,  3276,  2495,  2641,  4607,  4558, -5790,
    4495, -5790,  3288,  2920,  2920,  1202,  3244, -5790, -5790, -5790,
   -5790,  4961,  3243, -5790,  5050, -5790,  3243,  2048, -5790, -5790,
   -5790, -5790, -5790,  4337,  3373,  2920,  2920,  3375,  2657,  1889,
    3407,  3408, -5790, -5790, -5790,  4339, -5790, -5790,   654, -5790,
    4338, -5790,  2664,  5062,  1233, 23665, -5790,  4342, -5790, -5790,
   94506, -5790, -5790,  4302,  1330, -5790,  2665, -5790, -5790, -5790,
    4343,  3726, -5790, -5790, 62385, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, 18240, 18240,  4158, -5790,  4195,  2614, -5790, -5790,
   -5790, -5790,  4724,  4346,  4345, -5790, -5790, -5790,  4341,   190,
   39065, -5790, -5790, 64626, -5790, -5790,  4351,  4348, -5790, -5790,
   -5790, 90024, -5790,  2676, -5790, -5790,  5085, 19790,  2511,  2703,
    4353, -5790, 81060,  4366,  4369, 49565,  2251, 94506,  2685, -5790,
   -5790, -5790, -5790, -5790,  1831, -5790,  1994,  2706,  2276,  2276,
   -5790,  4359, 48818, -5790,   298, -5790,   375,   393,   424,   425,
   -5790,  4011,   325,   325,  2511,  2511,   298,   325, 81060,  1982,
     325,  4011,  4011,   439,  2511,  1336,   375, -5790, -5790, -5790,
     325,   375,   236, -5790, -5790,  8023, -5790,  7344, 71349, -5790,
    1214, 94506,  4413, -5790, -5790,  2001,  4494, -5790,  4370, 94506,
   -5790,  2511, -5790,  5105,  5126, -5790, -5790,  4780, 23665,  4375,
   23665,  4377,  2697, -5790,  2276, -5790,  2276, -5790,  1387,  5096,
    5098,  5047,  5100,  2526, -5790,  2461, -5790, -5790, -5790, -5790,
   -5790, -5790,  1082, -5790, -5790,  4382, -5790, -5790, -5790, -5790,
    4716, -5790,  5139, -5790,  4840, 47324,  2706, -5790,  1970,  4430,
   -5790, -5790, -5790,  5031,  2946,  2946,  1103,  2946, 91518, 94506,
   48818,   363,  2128,  5014,  1870,  2152,  4433,  4957,  2946,  2946,
   92265,  1103, 39065, -5790, -5790, -5790,  2946, -5790,  2946, 48818,
   93012,  1103, -5790, -5790, -5790, 94506, -5790,  2946,  1103, -5790,
    1103,  1103, 91518, -5790,  8378, -5790, -5790, 42095,  1612, -5790,
    2920,  4302,  4793, -5790, -5790,  4513,  2511,  4762, -5790, -5790,
    4875, -5790, 94506,   347, -5790,   325, -5790,   325, -5790,   325,
   -5790,   304, -5790, 32190, -5790,  3727, -5790, -5790,  1929, -5790,
   -5790,  4763,  4615,  4902, -5790, -5790,105519, -5790, -5790,  4407,
    2521, -5790,  4404, -5790, -5790, -5790, -5790, 23665, -5790,  4640,
   -5790,  4747, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,  4011, -5790, -5790, -5790,  4412, -5790,
     325, -5790, 23665, -5790, -5790,  4414,  5118,  2521, -5790, -5790,
    4507,  4415,  4417, -5790,  4796, 94506, -5790, -5790, 18240, 18240,
   -5790, -5790, -5790,  4533, -5790, -5790, -5790, 39065, 63132,  4420,
    4419, -5790,   298, -5790,   413, -5790, 94506, -5790, -5790,  4011,
    4776, -5790,  2700, -5790, -5790, 94506,  4418,  4621, 94506, 94506,
   -5790, -5790,  4426, 94506, -5790, -5790, -5790, 42095,  4428,  5041,
    5054,  2276, -5790,  2706,  4974, 49565, -5790,  2706,  2706, 68361,
   94506,  4429,  2511, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  4431, -5790, -5790, -5790, -5790, -5790,  2511, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  5164, -5790,  4828, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,107002, -5790, -5790, -5790,  4789,
    1214, -5790,  4432,  4434, -5790, -5790, -5790,  5116,  2179, -5790,
   -5790, -5790,  5020,   219, -5790, -5790,  4436, -5790, 69108, -5790,
   -5790, -5790, -5790,  4440,  4442,  2920, 94506,  2920, 94506, -5790,
    5099,  5099, -5790,  2818,  2818,  5170,  2818, -5790,  5171,  5172,
    2461, -5790, -5790,  5198,   753,  4825,  1782,  1850,  1103,  1850,
    5112, -5790, -5790, 94506, 49565, 91518, 49565, -5790,  4954, -5790,
   74337, 49565,  2946, 94506, -5790,  5115, -5790,  5083, 49565, 49565,
   -5790, -5790, 91518,  4462, -5790,  2521,  2628, 94506, 49565, -5790,
   -5790, -5790,  3069,  4938, 49565, 91518, -5790, 91518, -5790,  3757,
    4968,  3385, -5790,  4470,  4472, 94506, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  1369, -5790, -5790,  2712, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,   130, 94506, -5790,   472,  4673, -5790,
    1929, -5790, -5790, -5790, 48818, -5790, 23665, -5790, -5790,  3476,
   -5790, -5790,  4482, -5790,  4484,  4040, -5790,  4878,  4609,  4471,
    4473,  4475,  4663,  4827, -5790,  4668, -5790,  4145,  4659,  4490,
   32190, -5790, -5790,  1562, -5790, -5790, -5790, -5790, 96747, -5790,
   -5790,  4492, -5790, 39065, 19790, -5790, -5790, -5790,  4908, -5790,
    2739,  2521,  4493, 94506,  4504,  2760,  2778, 94506,  4506, -5790,
   23665,  2706, -5790, -5790, 49565, 48818, -5790,  4978,  -173, 49565,
   49565, -5790,  4505,  5216, -5790, -5790,  4508, -5790, -5790, 48818,
   -5790, -5790,   357,   236, -5790, -5790,  4501, -5790, -5790, -5790,
   -5790, -5790, -5790,107002,  1450, -5790, -5790, -5790, -5790,  4510,
   -5790,  4511, -5790, -5790, -5790, 94506, -5790, -5790, -5790,  4885,
    4413, 94506, -5790, 94506, -5790,100482,  6776,  2782,  2786,  2472,
   -5790, -5790, -5790, -5790,  2818, -5790,  2818,  2818, -5790,  4518,
   -5790, -5790, -5790,  5176, -5790,  5177, -5790,  2242,  1334, -5790,
   49565,  1127,  5025,  5021,  5234, -5790, 49565,  4348, 94506, -5790,
   -5790,  1981, -5790, 39065, -5790, -5790,  5022,  5023, -5790,  5032,
    1612, -5790, 94506, -5790, -5790, -5790,  4625, -5790,  6174,  4723,
    5239,  5244, -5790, 94506, 93759, -5790, -5790,  5302, 32190, -5790,
   -5790,  5158, -5790,  3774,  2521, -5790, -5790, -5790,   213, -5790,
    5270,   971, -5790, -5790,   151, -5790, -5790, -5790, -5790, 94506,
    4536,  4624, -5790, -5790,  4610, -5790, -5790,  3660, -5790,   100,
   63879, -5790, -5790, -5790, -5790,   911, 94506, -5790,  5293,  4539,
    2529,   911,   911,  4540, 94506,  3487, 49565,  4978,  1516,  4547,
     952, -5790,   952, -5790, -5790,  1717, 69108, -5790, -5790,  4427,
   94506,  4544,  5313, -5790,   181,   201, -5790,  2191,  1450, -5790,
   -5790, 94506, -5790, 94506, -5790, 94506, -5790, 94506, 81807, -5790,
    2375, -5790,  2179, -5790, -5790, -5790, -5790,  5117,  2792, -5790,
   -5790, -5790, -5790, -5790,  5268, -5790,  5269,  4553,  4554, -5790,
   -5790, -5790, -5790, 49565,   -77, -5790, -5790,  5196, -5790,  5243,
    5245,  1612, -5790, 48818,  5128, 78819, -5790, -5790, -5790,  1103,
   -5790, 94506, 49565, 48818, -5790, -5790,  4348,  1311, 23665,  4917,
    5341, -5790,  4764,  4766, -5790, -5790,  2799, -5790, -5790,  4619,
     561,  5055, -5790, -5790, -5790,  4878, -5790, -5790,  4698,  2037,
   -5790,  2831, -5790, -5790, -5790,  3069, -5790,  4571, -5790,  4936,
     298,   298,  4937,   298,   298,   298,   298,  4577,  3660, -5790,
   -5790, -5790,  4927, -5790, -5790, -5790,  3037,  2521,  4578, 94506,
    4579,  2847,   523,  1800, 94506,  4580, -5790, -5790, -5790,   952,
   94506,  5183, -5790,  4582, -5790,  4584,  4585, -5790, -5790,  5211,
    2511, -5790,  4667, -5790, -5790,  1717, -5790, -5790, -5790,  4628,
    5217,  5178, -5790, 81060, 34515, -5790,  5082, -5790,  5040,  5282,
   -5790,  5329,  4566, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    4594, -5790,  4595, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, 48818,  4706, -5790,  2828, -5790,100482,  7098, -5790, -5790,
   90024, 90024,  5216,  3069,  4796, -5790, -5790, -5790, 34515, -5790,
   -5790,  4796, -5790, -5790, -5790, -5790, -5790,  5235, -5790,  2920,
   23665, -5790, -5790, -5790, -5790, -5790, -5790, 93759, -5790, -5790,
     363, -5790, -5790, -5790, -5790, -5790, 94506, -5790,  4603, -5790,
   -5790,   128,   298,  2511,  2511,   298,  3596,  3596,  3069, 81060,
    4688, -5790, -5790,   298,   952,  2511,   298,   952, -5790, -5790,
    1803,  3037, -5790, -5790, -5790, -5790, -5790, -5790,  1754,   911,
   -5790,  4797,  1803,   523, -5790, -5790,  1803,  1800, -5790, -5790,
    4608, 94506,  4611,  4614, -5790,  2848, -5790,  1534,  5189, 94506,
    4618, 94506, 94506, -5790, -5790, -5790, -5790, -5790, -5790,  4965,
   -5790,  3204,  3204, 16690, -5790, -5790, -5790, -5790, -5790, -5790,
    3142,  5202, -5790,  4658,  1599,   298, -5790,  4596, -5790, -5790,
   -5790, -5790,  4973, -5790,  4162,  4163,  5056,  5284,  4986,  5341,
   -5790, -5790,  5206, -5790, -5790, -5790, -5790, -5790,  1829,  4629,
    2862, -5790, -5790,  2901, -5790, -5790, -5790, -5790,  4631,  2920,
   -5790, 39065, -5790,  4624, -5790, -5790,  2905, -5790, 29090, -5790,
   -5790, -5790,  2511, -5790, -5790,  2511, -5790, -5790, -5790, -5790,
   -5790,  2922, -5790, 81060, -5790, -5790,   325, -5790, -5790,  5246,
    5078, -5790,  4830,  3037,  2783, -5790, -5790, -5790, -5790, -5790,
    4635, 94506, 94506,  4639, -5790, 94506, -5790, -5790, -5790,  1292,
   -5790,  2970, 94506,  2988,  2991, -5790, -5790, -5790, -5790,  4637,
    4641, -5790,  1108, -5790, -5790,  4596, -5790, -5790, -5790, 94506,
   -5790,  5181, -5790, -5790, -5790, -5790,  4780, -5790,  5207,  2828,
   -5790, -5790, -5790,  4796,  4643, -5790,   298,  5179, -5790, -5790,
    4603, -5790,  4644, -5790,   561, -5790, -5790, 81060, -5790,  4688,
   -5790, -5790, -5790, -5790, -5790, -5790,  1803, -5790, -5790,  3008,
    4539, 94506, -5790,   643,   643,  3037,  3012,   523,  1800, -5790,
     724, -5790,  1921,  1921,  1394, 94506, 94506, -5790,  4413, -5790,
   -5790, -5790, -5790, -5790,  2828,  1410,  3013, 39065, 19790,  4945,
    4576, -5790, 29090,  4648,  3537, -5790, -5790, -5790,  4974,  4649,
    4539, -5790, -5790,   436,  5106,  5236,  5237, -5790,  3037, -5790,
   -5790, -5790,  4651, -5790,  1921, -5790, -5790, -5790, -5790, -5790,
    1650, -5790, -5790, -5790, -5790, -5790,  5010,  5332, -5790,  4352,
   -5790, -5790, -5790,  5242,  1410,  1410, -5790, -5790, -5790,  5381,
    4884, -5790, -5790, -5790,  3537, -5790, -5790,  3037,  4662, -5790,
   -5790, -5790,  5155,  5351, -5790, -5790, -5790, -5790,  1650, -5790,
    4413, -5790,  4800, -5790, -5790, -5790, -5790, -5790, -5790,  1276,
    5252, -5790,  5253, -5790,  2818,  5314, -5790, -5790,  3037,   643,
     643, -5790, -5790, -5790, -5790,  5344,  5028, -5790,  5440,  4689,
   -5790, -5790, -5790,   975,   379, 36048,  5214, -5790, -5790, 81060,
   -5790, -5790, -5790, -5790, 81060, -5790,  3022, -5790, -5790, 39065,
   -5790, -5790,  6174, -5790, -5790, 36806,  4685, -5790,   298, -5790,
    5341, -5790, 39065, -5790, -5790, -5790, 19790, -5790, -5790
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
       0,  3624,     2,     0,  2509,  2510,  1010,  2302,     0,   425,
       0,  1236,   607,  3834,  2147,  2296,  2295,  2068,  2771,   465,
     220,  2822,   376,  2070,  2369,     0,     0,   461,  2879,  1252,
    2898,   749,   491,  2906,     0,   320,     0,     0,   468,   318,
     220,  1301,  3267,  2196,     0,  3373,  2134,     0,  1299,   463,
    2467,  2720,  2769,  2770,  2800,  2624,  2900,  2923,  2950,  2073,
    2701,  2700,  2704,  2702,  2703,  2705,  2706,  2707,  2708,  2709,
    2710,  2597,  2711,  2712,  2713,  2715,  2714,  2716,  2717,  2718,
    2598,  3529,  3625,  2599,  2673,  2719,  2675,  2674,  2721,  2600,
    2601,  2722,  2723,  2724,  2726,  2725,  2603,  2602,  2727,  2729,
    2728,  2676,  2677,  2730,  2731,  2732,  2734,  2604,  2605,  2606,
    2607,  2608,  2733,  2609,  2735,  3534,  2736,  2737,  2610,  2738,
    2739,  2740,  2741,  2743,  2742,  2744,  2745,  2747,  2748,  2749,
    2746,  2750,  2751,  2753,  2752,  2679,  2754,  2678,  2755,  2611,
    2756,  2757,  2758,  2759,  2760,  2761,  2762,  2763,  2764,  2765,
    2040,  2766,  2767,  2768,  2791,  2772,  2774,  2773,  2680,  2775,
    2776,  2777,  2779,  2778,  2780,  2782,  2612,  2613,  2614,  2781,
    2783,  2784,  2785,  2786,  2787,  2789,  2788,  2792,  2794,  2795,
    2681,  1252,  2616,  2617,  2790,  2793,  3682,  2796,  2797,  2798,
    2618,  2670,  2799,  3375,  2802,  2801,    85,  2803,  2620,  2804,
    2805,  2806,  2807,  2808,  2810,  2812,  2809,  2813,  2814,  2820,
    2621,  2811,  2815,  2816,  2817,  2818,  2819,  2821,  2682,  2823,
    2825,  2824,  2826,  2827,  2828,  2829,  2830,  2671,  2831,  2832,
    2833,  2834,  2847,  2848,  2838,  2839,  2841,  2842,  2845,  2840,
    2846,  2851,  2850,  2852,  2853,  2854,  2855,  2856,  2849,  2836,
    2843,  2844,  2837,  2857,  2858,  2835,  2859,  2861,  2860,  2862,
    2683,  2863,  2864,  2865,  2866,  2867,  2868,  2869,  2870,  2872,
    2871,  2873,  2874,  2875,  2876,  2877,  2667,  2878,  2684,  2685,
    2880,  2883,  2881,  2882,  2884,  2885,  2890,  2891,  2892,  2887,
    2886,  2888,  2889,  2686,  2687,  2688,  2893,  2894,  2895,  2897,
    2896,  2623,  2622,  2899,  2625,  2901,  2902,  2626,  2903,  2905,
    2904,  2669,  2627,  2907,  2908,  2910,  2909,  2628,  2629,  2630,
    2911,  2912,  2913,  2914,  2915,  2916,  2917,  2918,  2919,  2920,
    2921,  2922,  2689,  2690,  2924,  2925,  2926,  2928,  2927,  2929,
    2930,  2931,  2932,  2933,  2934,  2935,  2631,  2936,  1252,  2937,
    2938,  2939,  2632,  2941,  2940,  2633,  2942,  2943,  2944,  2945,
    2946,  2668,  3534,  2947,  2948,  2949,  2691,  2951,  2952,  2953,
       0,  2954,  2955,  2956,  2634,  2957,  2958,  2692,  2672,  2635,
    2959,  2961,  2381,  2699,  2960,  2962,  2637,  2638,  2963,  2964,
    2965,  2636,  2966,  2639,  2967,  2968,  2970,  2969,  2971,  2972,
    2973,  2974,  2640,  2975,  2976,  2641,  2977,  2642,  2978,  2979,
    2980,  2981,  2983,  2982,  2984,  2985,  2986,  2987,  2988,  2989,
    2991,  2993,  2992,  2990,  2994,  2995,  2693,  2996,  2643,  2694,
    3002,  3003,  2695,  2997,  2998,  2999,  3000,  3001,  2176,  3004,
    3005,  3006,  2646,  3007,  3008,  3010,  3009,  2644,  2645,  3011,
    3012,  2650,  3013,  3014,  3020,  2696,  2697,  3015,  3016,  3029,
    3017,  3019,  3018,  3022,  3021,  3023,  3024,  3683,  2647,  3025,
    3026,  2648,  3027,  2649,  3028,  2698,     0,     0,     3,  3626,
      22,     0,    45,    27,    33,    17,    21,    16,    47,    60,
      53,    30,  3821,  3822,  3824,    43,  3565,    42,    11,    63,
      64,    19,    50,    12,    15,    18,    41,    49,    37,    44,
      57,    58,  1322,  1298,  1326,  1297,  1293,  1289,  1308,  1309,
    1310,  1316,    25,    26,    34,    51,    68,    23,    65,    61,
      24,  2302,    13,    28,    29,    14,    52,    46,    38,    62,
      69,    39,     0,  3686,  3680,  3678,  3681,  3676,  3677,  3679,
      59,    40,    67,    32,    54,    31,     9,    10,    20,    55,
      56,    48,    70,    35,    66,    36,     8,  3687,     0,  3627,
    2056,   168,  3531,  3823,  2562,  2561,  2598,  3638,  2599,  2601,
    2654,  2602,  2657,  2658,  2651,  2611,  2659,  3639,  2614,  2615,
    2655,  2559,  2618,  2660,  2619,  2621,  2652,  2653,  2661,  2656,
    2630,  2662,  2632,  2663,  2664,  2665,  2640,  2641,  2666,  2645,
    2560,  2649,  2514,  2525,     0,  2526,  2556,  2554,  2558,  2552,
    2557,  2550,  2551,  2555,  2553,  1054,     0,     0,     0,     0,
    2066,     0,  2066,  1145,  1367,  3563,  3564,  3565,  1253,     0,
    1254,     0,     0,   244,   395,   131,     0,     0,  3625,  2171,
    2066,  2044,  2066,  2066,  2066,  2066,  2066,  2066,  2066,  2069,
    2066,  2066,     0,     0,     0,   395,  2076,  2371,     0,  2391,
    2392,  2386,  3363,  3364,  3358,   378,     0,     0,     0,  2269,
    2268,     0,     0,   305,   317,   320,   313,   316,     0,   220,
    2066,   378,   319,   320,     0,  1331,     0,  2274,   320,     0,
    2145,  2385,     0,   395,  2468,  2465,  2076,  2342,  2344,     0,
    2340,  3534,  1439,  1438,     0,  3830,  3832,     0,  2515,  1231,
    1263,  1189,  3535,  3536,     0,    77,    80,  2308,   343,     0,
       0,     0,   605,     0,     0,  1197,     0,  3536,  3546,  2383,
       0,   131,  1170,     0,   131,  2179,  2066,  2066,  3607,  3608,
       0,     0,     0,  3602,     0,  3609,     0,  1326,     0,  1312,
       1,     5,     0,     0,   605,   964,   605,   965,     0,   605,
     605,     0,     0,     0,     0,  3570,  3563,  3564,  3565,     0,
    2026,  1881,  1327,  1326,  1973,  1977,  3551,  3551,  3551,     0,
       0,  1973,  1317,  2786,  2617,  2905,     0,  2287,  2301,  2285,
    2503,  1295,  1291,  3688,     0,     0,  2609,  1013,  1055,  1018,
     228,     0,     0,  1020,     0,  1031,  2531,  2530,  2529,  1028,
     220,     0,  1147,     0,     0,     0,  3571,  3570,     0,  1208,
    2289,  2290,  2291,  2292,  2293,  2294,  2297,     0,   250,   395,
     427,     0,   438,   429,   432,     0,   132,   133,  1234,  1237,
       0,   608,   296,   298,     0,  3655,   295,   297,  3654,     0,
    3799,     0,     0,   374,   283,   372,  3651,  3648,  3653,  3649,
    3652,  3650,  3788,   373,  3685,     0,   287,  3835,  3789,  3790,
    3792,     0,  2175,  2174,     0,  2173,  2148,     0,  2171,     0,
    2064,  2066,     0,     0,     0,     0,     0,   220,     0,   220,
    2049,  2066,  2066,   466,  3684,     0,  3659,  3423,  3441,  3442,
    1380,  3438,  3443,     0,  3440,  3435,     0,     0,  3437,  3434,
       0,     0,  3462,  3436,  3439,  2599,  2739,  2778,  2614,  2792,
    2794,  2915,  2919,  2924,  2935,  2939,  2665,  2637,  2984,  3416,
    3404,  3418,  3417,     0,     0,  3421,  3426,     0,  3425,     0,
       0,  2078,  2372,  2373,  2377,     0,  2395,     0,     0,   388,
       0,     0,     0,     0,  3820,   380,   381,     0,   384,     0,
     378,  3818,  3810,     0,   395,  3817,  3812,  3811,  3813,  3814,
    3815,  3816,   406,     0,   407,   408,  3819,   462,  3806,  3807,
       0,     0,   378,  3694,     0,  3808,  3804,  3805,  1250,  1681,
       0,  2442,  2511,  2512,     0,  2455,  2460,  2461,  2453,  2454,
    2458,  2434,  2457,  2433,  2459,  1441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1380,  1380,  1380,  1377,
       0,     0,     0,     0,     0,     0,     0,  2451,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1377,     0,     0,  2450,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1571,  2452,  1380,  1377,  1377,     0,     0,  1380,     0,     0,
       0,  2702,  2703,  2597,  2718,  2654,  2730,  2732,  2604,  2605,
    2606,  2607,  2608,  2651,  2754,  2678,  2755,  2756,  2757,  2617,
    2798,  2805,  2824,  2826,  2866,  2868,  2874,  2881,  2882,  2894,
    2899,  2669,  2913,  2920,  2946,  2691,  2951,  2956,  2959,  2980,
    2694,  3002,  3003,  2695,  3001,  2666,  3013,  3020,  3023,  3024,
    2647,  2698,     0,     0,     0,     0,  1440,     0,     0,  1324,
    1514,   750,  1386,  1398,  1414,     0,  1512,  1511,  1515,  1517,
    1523,  1433,  1544,  1483,  1484,  1486,  1485,  1490,  1491,     0,
    1657,  1492,     0,     0,  1489,  2447,  1488,  1487,  2448,  2449,
    1482,  2489,  2525,     0,  2513,   493,   492,     0,   339,   332,
     327,   335,   329,   331,   330,   336,   337,   338,   333,   328,
     334,   321,     0,   306,     0,   314,  3547,     0,  1255,   378,
     469,   340,  3423,  2704,  2919,  3396,     0,  3403,     0,  3562,
    3556,  3559,  3558,  3554,  3557,  3555,  3560,  1352,  3561,  1351,
    1302,  1332,  1349,  1350,     0,     0,     0,  2587,  2586,   884,
    2584,  3288,  3289,     0,  2588,     0,     0,  3290,  2975,  2997,
    2585,     0,  2520,     0,  2521,  2581,  2579,  2583,  2582,  2576,
    2577,  2580,  3268,  3273,  3269,  2578,     0,  2302,     0,     0,
    2282,   962,   961,     0,     0,     0,     0,  2218,     0,   884,
    2282,  2219,     0,  1938,  2272,  2275,     0,  3292,  2232,   963,
    3293,  2268,     0,  2204,  2220,  2181,  2225,   131,  3294,   131,
    2271,  1938,  2282,     0,  2197,     0,     0,     0,  2302,  1366,
       0,   315,  3374,  2146,  1143,  2114,  1300,  2100,     0,   464,
       0,  2081,     0,  2341,  3530,  3831,  3714,     0,     0,     0,
       0,  3539,  1725,  2041,     0,    81,    76,     0,     0,     0,
       0,  2508,  3376,    86,     0,     0,  3621,    74,     0,  2359,
       0,  2357,  2354,  2356,     0,  3539,     0,  2382,  1177,  1177,
       0,     0,  1169,  1171,  1172,  1177,  1177,  2180,     0,     0,
       0,  2441,  2439,  2440,  2516,  3604,  2438,  2437,  3613,  3615,
    3598,     0,  3601,  3600,  3610,  1315,  1314,     6,    71,     0,
     142,   605,   220,   220,   605,   167,   148,   151,   605,   605,
     605,   605,   160,   162,     0,   222,     0,     0,  3570,  1330,
    2822,     0,     0,  1342,  1328,  1775,  1329,  1807,  1777,  1747,
    1738,  1737,  1803,  1804,  1806,  1805,  1808,  1810,  1800,     0,
       0,  2039,     0,  2034,  1882,  1887,  1881,     0,     0,     0,
       0,     0,     0,  1972,  1938,  1981,  1943,  1974,  1294,  1970,
       0,  1290,  1355,  1355,  3553,  3552,  3550,  3549,  3548,  1975,
    1313,  1321,  1319,  1320,  1976,  1311,     0,  2299,  2505,     0,
       0,  2304,     0,  1973,  1977,     0,     0,     0,  2105,  2104,
    2107,     0,   898,     0,   229,     0,  3568,  3569,  3567,  1380,
    2532,  2535,  3566,  2536,   229,  2067,     0,     0,     0,  2066,
    1151,  1152,  1146,  1148,  1150,     0,     0,     0,     0,  2303,
       0,   246,   252,   245,   436,     0,   396,  3673,     0,   433,
      87,     0,  1238,  2057,  2059,  3802,  3030,  3031,  3032,  3033,
    3034,  3035,  3037,  3038,  3036,  3039,  3040,   828,   851,  3041,
    3042,  3043,   851,   868,  3044,  3045,  3046,  3047,  3048,  3049,
    3050,  3051,   814,  3052,  3053,  3054,  3055,  3056,  3057,  3058,
    3059,  3060,  3061,  3062,  3064,  3063,  3065,  3066,  3067,  3068,
    3069,  3070,  3071,  3072,  3073,   834,  3074,  3075,  3076,  3077,
    3078,  3079,  3081,  3080,  3082,  3083,  3084,  3085,   830,  3086,
    3087,  3088,  3090,  3089,  3091,  3092,  3093,  3094,  3095,  3096,
    3097,  3098,  3099,   834,  3100,  3101,  3102,  3103,  3104,  3106,
    3105,  3109,  3110,  3111,  3112,  3113,  3114,  3115,  3116,  3117,
    3118,  3119,  3120,  3121,  3122,  3123,  3124,   824,  3125,  3126,
    3127,  3128,  3129,  3130,  3107,  3131,  3108,  3132,  3133,  3134,
    3135,  3136,  3137,  3138,  3139,  3140,   868,   780,   780,  3141,
    3142,  3143,  3144,  3145,  3146,  3147,   868,   827,   780,  3150,
    3151,  3148,  3149,  3152,  3153,  3154,  3155,  3156,  3158,  3157,
    3161,  3159,  3160,   834,  3162,  3163,  3164,  3165,  3166,  3167,
    3168,  3169,  3170,  3171,  3172,  3173,  3174,  3176,  3177,  3175,
    3178,  3179,  3180,  3181,  3182,  3183,  3184,  3185,  3186,  3187,
    3188,  3189,   829,  3190,  3192,  3191,  3193,  3194,  3195,  3196,
    3198,  3199,  3200,  3201,  3202,  3203,  3204,  3205,  3208,  3206,
    3207,  3209,  3210,  3211,  3212,  3213,     0,  3214,  3215,   826,
    3216,  3217,  3221,  3218,  3222,  3219,  3223,  3220,  3224,  3225,
    3226,  3227,  3228,  3229,  3230,  3231,  3233,  3234,  3235,  3236,
    3237,   868,   825,   780,  3238,  3239,  3240,  3242,  3243,  3244,
    3245,  3246,  3247,  3248,  3249,  3250,  3251,  3252,  3253,  3255,
    3256,  3254,   851,   818,  3257,  3259,  3258,  3260,  3261,  3262,
    3263,  3264,  3265,  3266,  3197,  3232,  3241,   851,   774,   775,
     780,   851,   793,     0,   834,   868,     0,   815,   834,   820,
    2596,   851,     0,   851,   851,   851,   851,  3654,   851,     0,
     276,   284,   759,   762,   764,   763,   765,   766,   851,   851,
     851,   851,   851,   855,   834,   834,  2589,  2590,  2591,  2592,
    2594,  2595,  3637,   834,  2593,  3795,     0,     0,     0,  3801,
       0,  3625,     0,     0,  3793,     0,  2149,     0,  1340,  1881,
    2151,  2156,  2165,  2169,  2172,  2046,     0,     0,     0,  3773,
    3772,  2052,  2051,  3771,     0,  2053,     0,     0,  2054,  2042,
       0,   442,   444,  3424,  3422,  3459,  3458,  3463,     0,  3460,
    3456,     0,  3415,  3464,  3449,  3453,     0,  3465,  3450,  3457,
    3471,  3470,  3472,  3467,  3466,     0,  3469,  3455,     0,  3454,
    3475,     0,  3419,     0,     0,   418,     0,  2083,  2084,  2080,
    1143,  2079,  2378,     0,  2370,     0,  1273,  2397,  2396,  2393,
    1873,  3360,  3365,  3647,  3646,  3645,  3644,  2527,     0,  3641,
    3643,  3640,  3642,  2528,   395,   389,     0,     0,  2881,     0,
     394,   393,   392,   415,   395,   385,   404,     0,     0,  3628,
     379,  3629,   382,   413,   416,   455,   451,   459,   453,  3827,
    3825,  3695,  3809,   274,     0,     0,  2511,  2512,  2444,  2443,
    2513,  2435,  2456,     0,     0,     0,  1518,  1879,  1879,  1879,
       0,     0,  1733,     0,     0,     0,     0,  1879,     0,  1555,
    1530,  1529,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,  1687,  1687,  1653,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1727,  1729,  2489,  1879,     0,
    1879,     0,  1385,  1565,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1879,  1879,  1879,     0,  1577,
    1579,  1578,  1879,  1879,  1567,     0,     0,     0,     0,     0,
       0,  1879,     0,     0,     0,     0,     0,     0,     0,     0,
    1723,     0,  2462,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1723,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2464,     0,
       0,     0,  2463,     0,     0,     0,     0,     0,     0,     0,
    1723,     0,     0,  1520,     0,  1519,  1521,     0,  1324,   751,
       0,     0,     0,  1437,  1435,  1436,  1434,     0,     0,     0,
       0,  1443,  1445,  1447,     0,  1442,  1444,  1446,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1522,     0,
       0,     0,     0,     0,  2436,     0,  1611,     0,   505,  2367,
       0,     0,     0,   304,  1257,  2537,     0,     0,   395,  3422,
       0,     0,     0,  3419,  1367,  1348,  3295,     0,   883,     0,
       0,   886,   888,   887,  3327,     0,   885,  3336,  3334,  3332,
    3331,     0,     0,  3275,  3277,     0,   892,   894,   893,  3325,
     891,     0,  3311,     0,     0,     0,     0,     0,   605,     0,
       0,     0,     0,     0,     0,     0,     0,  2249,     0,  1366,
    1366,  2198,     0,  2282,     0,  2282,  2272,     0,  2282,  2278,
    2238,  2231,     0,     0,   662,  1955,  1939,  2224,  2276,  2277,
    2282,     0,     0,  2282,     0,  2239,  2272,  2282,  2193,     0,
       0,  2185,  2190,  2186,     0,  2192,  2191,  2194,  2182,  2183,
       0,  2211,     0,  2223,  2230,     0,  2210,  2217,     0,  2228,
    2272,  2272,     0,  2282,  2282,  2282,  1144,     0,  1367,     0,
    3661,  2466,  2469,  2475,  2481,  2085,  2082,  2343,   272,     0,
       0,     0,  1265,  1267,  1266,  1283,  1191,  3538,     0,  3540,
       0,  3542,     0,    78,     0,     0,  2335,  2333,     0,     0,
       0,  2327,  2329,  2332,  2328,     0,     0,  2334,   131,     0,
    2330,  2336,  2309,  2312,  2319,  1366,  2310,     0,     0,   341,
     344,   346,     0,   349,  1873,  3379,  3378,     0,     0,     0,
    1195,  1198,     0,  2364,  2361,   131,     0,  2664,  3545,  3543,
       0,  1165,  1181,   134,  1175,  1176,     0,     0,  1168,   134,
    3360,  3622,  3623,     0,     0,  3599,  3616,  3597,     0,  3611,
    3612,  3596,     7,     4,   154,     0,   145,     0,     0,     0,
     605,   605,   137,     0,   605,     0,  3775,  1367,  1367,   605,
     605,   605,     0,  1772,     0,  1738,  1803,  1804,  1806,     0,
    1805,     0,     0,  1873,     0,     0,  1795,  1821,     0,  1821,
    1797,  1798,     0,     0,     0,  1342,  1801,  2517,  2035,  2038,
       0,  2027,  2029,  2030,  2529,  2032,     0,     0,  1884,  1887,
    1949,  1950,     0,  1357,     0,  1963,  1964,  1962,     0,  1940,
    1956,  1961,  1959,     0,  1931,     0,  1980,  1971,  2019,  1356,
    1978,  1979,  1318,  2288,     0,  2286,  2305,  2306,  2504,  1296,
    1292,  3356,  3357,  3354,  3355,  3353,  3689,  3690,  3692,  1015,
     899,  2106,   898,   598,   601,   600,     0,     0,  2077,   227,
    2534,     0,  2077,  1032,     0,  2535,  3500,     0,  3507,  3489,
       0,  1149,  3572,  3573,  1026,  1024,     0,  1209,  1210,  1213,
       0,   250,     0,   253,   255,     0,   395,   428,   430,   439,
    3636,   378,     0,     0,  1248,     0,  1246,  1245,  1243,  1244,
    1242,     0,  1233,  1239,  1240,   290,     0,   849,   852,   786,
     868,   866,   868,   800,   869,     0,   838,   836,   835,   831,
     838,   802,   908,   814,     0,   868,   901,   905,   902,   810,
       0,   780,   903,     0,   906,   781,   808,   801,   807,   838,
       0,   797,   805,   868,   773,   809,   796,     0,   838,   811,
     816,   819,   821,   823,   838,   868,     0,  3625,   780,   795,
     794,   780,   838,     0,     0,  3625,   817,   903,   914,   780,
     868,   838,     0,   856,   838,   832,   832,   832,   288,   375,
    1982,  3714,  3797,  3798,  3791,  3794,  3796,  1800,     0,  2152,
    2159,  2061,  2063,  2503,     0,  1341,  2154,  1929,     0,     0,
       0,  2167,  2065,     0,  3774,     0,  2048,  3413,  3487,  2047,
    1153,     0,     0,   378,   467,   443,   397,  3452,  1381,  3468,
       0,  3473,  3474,  3411,   225,   224,  3420,   223,     0,     0,
       0,     0,  3461,  3444,     0,  3448,  3447,     0,  3445,     0,
    3446,     0,  3451,  3428,  3427,  2479,     0,  2478,  3673,   377,
    2085,  2806,  3013,  2379,  2375,  2374,     0,  2394,     0,  1874,
    1875,     0,     0,  1877,  3362,  1982,     0,  3359,  3696,   390,
     395,     0,     0,     0,   410,   386,   395,   397,   409,   448,
     275,     0,   250,     0,     0,   378,   378,   395,  3625,  3714,
    3360,  3295,  1682,  1684,     0,     0,  1880,     0,  1699,     0,
       0,     0,     0,     0,     0,  1498,     0,     0,     0,  1636,
       0,  1699,  1664,  2012,  2013,  1993,  1994,  1992,  1995,  1378,
       0,  1996,  2011,  1589,     0,     0,     0,  1662,  1323,  1306,
       0,     0,  1849,  1850,  1851,  1852,  1853,  1854,  1855,  1856,
    1857,  1858,  1859,  1860,  1862,  1867,  1863,  1864,  1865,  1866,
    1861,  1868,     0,  1848,     0,  1688,  1649,  1651,     0,     0,
       0,   751,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1879,     0,     0,  1879,     0,     0,     0,     0,     0,
       0,  1663,     0,  1661,     0,     0,  1660,  1542,     0,     0,
    1879,     0,  1572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1474,     0,     0,     0,     0,  1879,     0,     0,
       0,     0,     0,     0,     0,  1467,     0,     0,     0,     0,
    1724,     0,     0,     0,     0,     0,     0,  1871,  1869,  1872,
    1870,     0,     0,  1725,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1603,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1546,     0,
       0,     0,  2494,     0,   932,     0,     0,     0,     0,  1513,
       0,     0,     0,     0,  1383,  1382,  1384,  1395,  1389,  1393,
    1387,  1391,     0,  1448,  2710,  1396,     0,     0,     0,  1399,
    1408,  1412,     0,     0,     0,     0,     0,  1419,  1417,  1418,
    1430,  1431,  1415,  1416,     0,  1421,     0,  1420,  1427,  1428,
    1429,  1432,  1516,   895,  1524,  1899,  1655,  1656,  1680,  1903,
       0,  2490,  1367,  1470,  1469,  1471,  1472,  1473,   506,     0,
     500,   503,   517,     0,     0,  2366,     0,  2678,  2694,  2695,
     322,   325,   324,   326,     0,     0,  1256,  1260,  3360,     0,
       0,     0,     0,  3491,  3401,     0,     0,  1363,  1303,  1362,
       0,     0,     0,     0,     0,  3317,  3329,     0,     0,  3326,
       0,     0,     0,     0,     0,  3299,     0,     0,     0,     0,
    3272,  3338,  3339,  3342,     0,     0,     0,  2997,     0,  3274,
    3279,  3270,  3283,  3285,  3287,  2240,     0,     0,     0,     0,
    2245,  2242,  2235,  2248,  2720,  2244,  2261,  2243,  2237,  2250,
    2236,     0,     0,     0,  2282,  2254,  2257,  2251,  2282,     0,
    2282,  2253,     0,  2280,  2267,  2266,  2265,  2208,  2207,  2201,
    2273,  2258,  2252,   220,  2282,  2206,  2205,  2187,  2188,  2189,
       0,  1938,     0,  2278,   134,  2272,     0,  2282,  2282,     0,
    2264,  2227,  2229,  2133,     0,  1800,     0,     0,  2119,  2112,
    2099,   378,     0,     0,     0,  2086,  2087,   378,  3833,     0,
       0,     0,   490,  1283,  1269,  1285,  1193,  1192,  1190,  3537,
    3541,  1726,    80,  2127,  2125,    82,  2124,  2126,    83,  2345,
    2321,  2320,  2322,  2326,   131,  2331,  2323,     0,  2337,  2338,
     350,   354,     0,     0,     0,  3377,     0,   606,     0,    75,
       0,  1199,  1982,  2360,  2362,  2355,  3544,     0,  1166,  1183,
    1182,  1178,  1179,     0,  1163,   135,  1174,  1173,  1167,  2177,
    3605,  3614,  3618,  3603,   596,   980,     0,  3409,  3507,   189,
       0,     0,     0,   140,     0,  3725,     0,   605,   161,   163,
     605,     0,     0,     0,   605,     0,     0,  1817,  1809,  1811,
    1812,  1813,     0,  1816,     0,  1345,     0,  1333,  1333,  1343,
    1819,  1799,  1796,  1822,     0,  1821,  1821,     0,     0,  1779,
    1778,     0,  1873,   889,  2031,     0,     0,  1883,     0,  1885,
    1894,  1884,  1952,  2691,     0,     0,  1359,     0,  1982,  1353,
    2443,     0,     0,     0,     0,     0,     0,     0,  1951,  1948,
       0,  2307,     0,     0,   596,     0,   599,  2106,  2106,     0,
       0,     0,     0,     0,     0,     0,     0,   230,   239,  1019,
    2533,  1021,     0,     0,     0,     0,     0,  3519,  3360,  1046,
    3574,  1022,     0,     0,  1212,   248,   247,   251,     0,  3673,
     434,   431,   378,   426,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   134,
      89,   110,     0,  1235,  1247,  2058,  1241,     0,     0,     0,
       0,     0,     0,   798,   872,     0,   799,     0,   840,   841,
     839,   844,   776,   772,   909,   913,   912,   803,   804,   783,
     904,   900,   907,     0,   866,   782,   778,     0,  1008,   790,
       0,   779,   822,   777,   791,   280,     0,     0,  3660,     0,
       0,  3667,   286,   806,   788,   792,  3625,  3625,   277,   285,
     784,   915,   785,   787,   914,   770,     0,   771,     0,   767,
     769,   768,  1982,  1987,  1983,  3800,   303,     0,   302,     0,
    2153,  1333,     0,     0,     0,  2506,     0,  1966,  1930,  2166,
       0,  2170,  2169,     0,  3770,     0,     0,  1155,  1154,  2050,
    2055,  3360,   378,   292,   400,   446,     0,     0,  3408,   226,
    3483,  3486,  2503,     0,     0,  3429,     0,   419,  3635,  2087,
    2376,  2380,  1274,  1276,  1277,  1275,  1283,     0,  2549,  2548,
    2547,  2518,  1878,  2519,  2544,  2542,  2546,  2540,  2545,  2538,
    2539,  2543,  2541,     0,  3368,  3369,  3367,  3361,  3366,   391,
     411,   414,     0,   387,   398,   402,     0,  3631,  3630,   417,
     456,   440,   440,   440,  3828,     0,  1251,     0,     0,  2493,
       0,  1631,     0,  1632,  1633,     0,  1499,  1734,     0,     0,
       0,  1527,     0,     0,     0,  1635,     0,  1379,     0,     0,
    1502,  1494,  1307,     0,  1666,     0,     0,     0,     0,     0,
       0,     0,  1671,     0,  1669,     0,     0,  1728,     0,  1730,
    2490,     0,  1641,  1676,     0,  1639,     0,     0,  1665,  1677,
    1678,     0,     0,     0,  1645,  1643,     0,  1647,  1573,  1644,
    1646,     0,     0,     0,  1570,     0,     0,     0,     0,     0,
       0,     0,  1545,     0,     0,  1585,     0,  1629,  1586,  1587,
    1588,     0,  1582,     0,  1583,     0,     0,     0,  1613,     0,
    1531,  1532,     0,     0,     0,     0,  1533,  1593,     0,  1507,
    1595,  1538,  1539,  1504,  1505,  1597,  1614,  1598,  1506,  1599,
    1602,     0,  1541,  1982,     0,  1525,     0,     0,     0,  1543,
    1576,     0,     0,     0,  1503,     0,  1605,     0,     0,     0,
    1982,     0,  1615,  1547,     0,     0,   752,  1325,  1495,  2491,
    1390,  1394,  1388,  1392,     0,     0,     0,     0,  1407,     0,
       0,  1400,  1410,  1413,     0,     0,  1901,     0,     0,  1674,
    1723,     0,     0,     0,  1625,  1626,     0,     0,   499,   498,
       0,   502,   586,     0,   519,   507,   496,  2368,     0,     0,
    1258,     0,     0,     0,     0,  3402,     0,     0,     0,     0,
    1367,  1368,  1368,  2489,  3296,  3297,  3298,     0,  2574,  2573,
    2571,  2575,  2572,  2522,  2524,     0,  2523,  2569,  2567,  2570,
    2565,  2563,  2564,  2568,  2566,     0,     0,  3315,   897,   896,
    3328,     0,  3350,     0,     0,  3335,  3333,     0,     0,     0,
    3278,     0,  3344,  3345,     0,     0,     0,  3313,  3312,     0,
       0,     0,  3305,     0,     0,     0,  2263,     0,  2234,  2247,
    2246,  2283,  2284,  2260,  2256,  2202,  2259,  2255,  2279,  1982,
    2212,  2233,  2203,     0,  2226,  2184,  2280,  2241,  1881,  2272,
    2199,  2200,  2262,     0,  1342,  1368,  2115,  1367,  2116,   378,
    2470,     0,  2477,     0,  2074,     0,     0,  3625,  1232,  1272,
    1264,  1271,  1268,  1283,  1281,  1270,   958,   957,     0,  1284,
      79,     0,     0,  2324,   134,  2318,  2339,  2313,     0,   345,
     355,   347,   351,   352,   353,   348,  2795,  2881,     0,  1881,
    3381,  3620,  1206,  1204,  1203,  1205,  1194,  1200,  1201,  2365,
    2363,   134,  2384,  1181,     0,  1184,  3625,  1982,     0,  3617,
     155,   597,     0,     0,     0,   980,     0,   165,  3519,     0,
       0,     0,   138,   169,  3725,     0,  3625,  3767,  3776,  3588,
       0,   156,  3779,   228,  3777,     0,     0,  1814,  1815,  1776,
    1333,  1335,  1334,     0,     0,  1337,     0,     0,     0,     0,
    1784,     0,  1780,  1782,     0,  1846,  1838,     0,  2036,  2028,
    2033,  2488,  1891,  1935,     0,     0,  1304,  1894,     0,  1953,
    1944,     0,  1360,  1358,  1965,  1942,     0,  1958,  1957,  1960,
    1357,  1932,  1935,     0,  1367,  3691,  3693,  1016,   602,     0,
       0,  1017,     0,     0,     0,   233,   236,   234,   235,  2106,
    2106,   183,  2106,  2106,   182,   184,     0,   178,   175,   185,
    2106,  1033,   171,     0,     0,     0,     0,  1982,     0,     0,
       0,   191,     0,  3494,  3493,     0,  3509,     0,     0,  3511,
       0,  3510,  3508,  3479,  3490,     0,  1041,  1011,     0,  1048,
    1050,     0,     0,  3574,  1211,     0,   250,   254,   437,     0,
       0,     0,  1982,     0,  1982,  1982,     0,     0,  1982,     0,
    1982,     0,     0,     0,     0,     0,     0,     0,  1982,     0,
       0,     0,  1982,     0,  1982,     0,    88,  1249,     0,  3625,
     261,     0,   260,  3760,   292,   847,   845,   848,   846,   867,
       0,   842,   843,   910,   911,   873,   903,     0,   903,   282,
       0,  3116,   279,   834,  2589,  2590,  2591,  2592,  2594,  2595,
    3669,  3668,  3756,  3755,     0,   789,     0,   312,   311,   309,
     378,   299,   307,   301,     0,   308,  1990,  1991,  1988,  1986,
    1989,  3836,  2150,  2062,  2169,     0,  2504,  1366,     0,  2162,
    1881,     0,  2168,  3360,  3414,  3488,  1153,     0,   293,     0,
       0,   397,  3523,     0,     0,     0,     0,     0,  2480,   421,
    2071,     0,  1283,  1287,  2387,  3371,  3372,  3370,   412,     0,
     405,   397,     0,   250,     0,   450,   452,   441,   460,   454,
       0,   440,  1685,  1683,     0,  1700,  1731,     0,   851,   851,
     834,   855,  1717,  3123,  1711,  1714,     0,   853,  1719,   851,
    1712,   853,     0,     0,  1706,  1707,  1708,  1710,  1709,     0,
       0,     0,  1637,  1634,     0,     0,     0,  1691,  1691,     0,
       0,     0,     0,  1424,     0,     0,     0,  1620,     0,  1642,
    1640,     0,     0,     0,     0,     0,  1648,     0,  1551,  1549,
    1480,     0,  1478,     0,  1479,     0,  1481,     0,     0,     0,
    1630,     0,  1450,  1468,     0,     0,     0,     0,     0,     0,
       0,     0,  1726,     0,  1998,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2495,     0,     0,     0,
     921,   927,   930,   931,   933,   925,     0,  1607,     0,     0,
       0,  1405,  1401,     0,  1409,     0,     0,     0,  1423,  1422,
    1903,  1902,     0,  1673,     0,     0,  2492,  1368,  1612,  1367,
     509,     0,   527,   501,  1982,   504,     0,   518,     0,   530,
       0,     0,     0,   323,     0,  1261,     0,   449,     0,  3400,
    3492,     0,     0,  1361,  1369,  1364,     0,     0,     0,  3319,
    3318,  3330,     0,     0,     0,     0,  3303,  3301,  3300,  3276,
       0,     0,  3349,  3343,  3340,  3341,     0,     0,  3282,     0,
       0,  3280,  3284,  3286,  2222,  2221,     0,  2281,  1938,  2195,
    2214,  2216,  2282,  2135,  2139,     0,  1873,  2123,     0,     0,
    2117,  2121,     0,  2476,     0,     0,  2088,  1800,   273,     0,
    3697,  3838,     0,  1840,    84,     0,  2325,  2316,     0,  2311,
    2314,     0,     0,  3392,  3393,  3385,  3388,  3386,  3387,  3391,
    3394,  3395,  3382,  3389,  1938,     0,  1196,  1202,  2358,  1180,
     136,     0,  1164,     0,     0,  3656,  2178,  3606,  3619,   995,
     997,   996,   981,   982,     0,     0,     0,  1041,     0,     0,
       0,   609,   609,   170,     0,  3713,  3712,  1367,     0,  3720,
    3723,  3721,  3724,  3726,  3625,     0,   200,  3574,  3625,     0,
    3625,   158,  1773,  1344,  1336,  1338,  1333,  1333,     0,  1737,
       0,     0,     0,  1737,     0,     0,   490,     0,  1818,  1835,
     890,  2401,  1892,  1893,     0,  1888,  1936,  1937,  1890,  1886,
       0,  1895,  1897,  1305,  1954,  1946,  1941,  1354,     0,  1934,
       0,     0,     0,  2022,  2024,   660,   659,   238,   237,   242,
     243,  1982,  1982,  2111,  2110,  1982,  1982,   177,   174,  2109,
    2108,  1982,  1982,   172,  2077,   195,   194,   196,   197,   199,
     198,   193,  1029,     0,  3497,     0,  3504,  3499,  3502,  3482,
    3481,  3480,  3477,     0,  1982,  1982,  1982,     0,  1982,  3518,
    3520,     0,     0,  1030,   898,  3532,     0,     0,   205,  3576,
       0,  3578,     0,  1215,     0,  1214,   249,  3673,  1982,  1982,
     103,  1982,    95,    96,    91,   123,   124,    93,    94,    99,
      98,   100,   101,   104,   105,   102,    97,    92,   127,   129,
     128,   106,  2018,  2017,  2016,   130,   125,   126,    90,   291,
       0,   268,   266,   267,  3671,  3670,  3757,     0,     0,  3758,
    3803,     0,   813,  1009,   812,   281,   278,   833,  1982,   289,
     310,     0,  1881,  2507,     0,     0,  1967,  2163,  2155,  2157,
    2045,  2043,  3663,     0,   447,   401,   445,     0,  3407,  3412,
    3485,  3484,  3507,  3507,   395,  3673,   395,   420,     0,  1278,
    1283,  1287,     0,  1279,  2398,   399,   403,  3633,  3632,   457,
    3714,  3826,     0,     0,  1732,  1701,   903,  1716,  1718,     0,
    1715,   903,   850,   854,  1721,  1705,  1713,  1720,   903,  1497,
    1528,  1501,  1500,     0,     0,     0,  1563,     0,  1689,  1695,
       0,     0,     0,  1535,     0,  1672,  1670,  1537,     0,     0,
    1622,  2492,  1596,  1668,  1566,  1600,  1540,     0,     0,     0,
    1477,  1475,  1476,     0,  1553,  1552,  1580,     0,  1466,  1581,
       0,  1559,     0,  1561,     0,  1562,     0,  1591,     0,  1564,
    1594,  1493,  2000,  1999,  1997,  1508,  1982,     0,  1568,  1526,
       0,     0,  1604,  2496,  2497,     0,  1606,     0,     0,   932,
     918,   919,   920,     0,   922,   924,   926,     0,  1982,  1426,
    1425,  1397,     0,  1406,  1403,     0,  1411,  1905,  1904,     0,
       0,  1616,  1723,  1369,  1627,     0,   510,   511,   513,   515,
     592,     0,   505,   534,   494,     0,   509,   497,  1259,  1262,
       0,  3398,  3397,     0,  1365,  1373,  1372,  2486,  2490,     0,
       0,     0,  3316,  3337,     0,     0,     0,     0,  3347,  3346,
    3348,  3314,  3309,  3307,  3306,  2004,  2005,  2003,  2001,  2002,
    2213,  1938,  2209,     0,  1881,     0,  1838,  1368,  2113,     0,
    3662,     0,  2094,     0,  2091,  2098,   483,  2162,     0,  2089,
    2060,  3701,  3698,  3699,     0,  1843,     0,  1844,  1841,  1842,
    1982,     0,     0,   371,   363,   358,   366,   360,   362,   361,
     367,   368,   369,   370,   364,   359,   365,   357,   356,     0,
    3380,  1207,     0,  1187,  1185,  3657,  3658,   143,     0,  3410,
     164,     0,   149,   152,   710,     0,     0,     0,     0,  2106,
    2106,  2106,  2106,  2106,  2106,  2106,  2106,  2106,  2106,     0,
    2106,  2106,  2106,  2106,  2106,  2106,  2106,  2106,  2106,  2106,
       0,     0,  2106,  2106,   139,   478,   486,   610,   613,   649,
     651,   638,   639,   475,     0,   141,  1367,  3782,  3719,  3722,
     269,  3707,  3703,  3706,   231,     0,     0,     0,   257,  3705,
    3704,     0,   675,   676,   674,   673,     0,     0,  3574,     0,
    1347,  1346,  1785,     0,  1789,  1794,  1790,     0,  1781,     0,
    1802,  1847,  1839,     0,     0,  2409,  1935,     0,     0,  1935,
       0,     0,  1368,  2020,  1367,   176,   181,   180,   173,   186,
     179,  1034,   192,  3498,  3496,  3495,     0,  3503,     0,  3478,
    3514,  3512,  3513,  3516,     0,     0,  3515,  3517,  1035,  1036,
    1042,  1037,  1141,  1141,     0,  1141,     0,     0,  1141,  2106,
       0,     0,   490,  1159,  2106,     0,     0,     0,     0,     0,
    1124,     0,  1141,     0,     0,     0,     0,     0,  1062,  1123,
     611,  1012,  1061,  1063,  1075,   486,     0,  1096,  1126,  1127,
    1125,  3533,     0,     0,     0,  1047,     0,   208,   206,   216,
    3575,     0,  2077,     0,  3578,  1217,  1218,     0,   435,     0,
     116,   118,     0,   120,   122,     0,   112,   114,   259,  3672,
    3759,     0,     0,   837,   300,  2169,  2160,     0,  1968,     0,
    1367,  2077,   294,     0,     0,  3521,  3521,   422,   424,   423,
    2128,  1280,  1288,  2400,  2399,     0,   250,   440,     0,  1686,
    1702,  1722,  1703,  1704,  1638,     0,     0,     0,     0,  1695,
       0,     0,  1696,  1654,     0,     0,     0,     0,     0,  1496,
       0,  1618,     0,  1550,  1548,     0,   834,  1457,  1459,  1455,
    1458,     0,   853,  1461,     0,   815,   853,   903,  1465,  1451,
    1452,  1453,  1454,     0,     0,  1735,  1736,     0,     0,     0,
       0,     0,  2498,   916,  1609,     0,   929,   923,   921,   928,
       0,  1402,     0,     0,  1907,     0,  1675,     0,  1628,   514,
       0,   593,   589,     0,     0,   535,     0,   536,   532,   508,
       0,  3399,  1371,  1370,     0,  3323,  3321,  3320,  3352,  3351,
    3304,  3302,     0,     0,   134,  2138,  1929,  2140,  2141,  2132,
    2122,  2120,  2472,     0,  2095,  2097,  2483,  2482,  2494,     0,
       0,  2077,  2090,  1982,  3700,  1081,     0,  1082,  1093,  1095,
    1286,     0,  2350,     0,  2348,  2317,  2351,     0,     0,     0,
       0,   146,     0,     0,     0,  1006,  2627,     0,     0,   679,
     681,   682,   683,   684,     0,   711,   686,   605,   959,   959,
     713,  2499,     0,   658,  2106,   479,  1982,  1982,  1982,  1982,
     636,  1982,  1982,  1982,     0,     0,  2106,  1982,     0,     0,
    1982,  1982,  1982,  1982,     0,     0,  1982,   644,   645,   643,
    1982,  1982,  2398,   485,   487,   898,   614,   609,     0,  3784,
    3625,   262,  3768,   470,   471,     0,     0,  3578,     0,     0,
    3594,     0,  3594,     0,     0,  1740,  1739,     0,     0,     0,
       0,     0,     0,  1828,     0,  1827,     0,  1833,  1837,     0,
       0,     0,     0,  2402,  2404,     0,  2037,  1889,  1898,  1896,
    1933,  1945,     0,  2025,  2023,     0,  3505,  3501,  1985,  1984,
       0,  1039,     0,  1038,  1043,  1006,   605,  1142,   603,     0,
    1100,  1104,  1101,   603,  2064,  2064,  1252,  2064,     0,     0,
       0,     0,  2064,     0,  2066,  2064,     0,     0,  2064,  2064,
       0,  1252,     0,   488,  1162,  1160,  2064,  1161,  2064,     0,
       0,  1252,  1113,  1057,  1114,     0,  1058,  2064,  1252,  1080,
    1252,  1252,     0,   612,   898,  1059,  1060,   710,  1156,   215,
     204,     0,     0,  1049,  1051,     0,     0,  1052,  3577,  1025,
    3580,  2077,  1223,     0,   108,  1982,   109,  1982,   107,  1982,
    3763,     0,  2077,     0,  1969,  2164,  2158,  3524,     0,  3406,
    3405,     0,  2162,     0,  3634,   458,   440,  1557,  1558,  1692,
    1935,  1690,     0,  1697,  1698,  1652,  1590,     0,  1536,     0,
    1619,     0,  1601,  1554,  1460,  1456,  1463,   816,  1462,  1464,
    1584,  1560,  1592,  1509,  1982,  1569,  1574,  1575,     0,  1608,
    1982,  1404,     0,  1910,  1909,     0,     0,  1935,  1617,   512,
     590,   507,     0,   531,   534,     0,   495,  2487,     0,     0,
    3310,  3308,  2215,  1966,  2473,  2471,  2093,     0,     0,     0,
    2092,  2102,     0,  2075,     0,  1282,     0,  1845,  2346,  1982,
       0,  2315,     0,  1186,  1188,     0,     0,     0,     0,     0,
     712,  1007,     0,     0,   685,  2502,   678,   710,     0,     0,
       0,   959,   702,   605,     0,  1006,   960,   605,   605,     0,
       0,     0,     0,  2015,  2014,   633,   626,   625,   628,   627,
     630,   629,     0,   622,   619,   631,   621,   646,     0,   634,
     616,   671,   672,   670,   640,   647,   617,   618,   624,   623,
     620,   663,   668,   666,   665,   664,   669,   667,   635,   650,
     632,   648,   477,   594,   615,   486,  2008,  2009,  2006,  2007,
     655,   654,  2010,   652,   653,     0,  3675,  3675,  3749,     0,
    3750,  3751,     0,   263,   265,   240,   232,     0,     0,   474,
     472,   473,     0,     0,   157,   271,   258,   231,     0,  3781,
     231,  3578,  1741,     0,     0,  1786,     0,  1791,     0,  1783,
    1823,  1823,  1834,     0,     0,     0,     0,  2403,     0,     0,
    2410,  2412,  1947,     0,  1037,     0,     0,     0,  1252,     0,
       0,  1128,  1098,     0,     0,     0,     0,  1069,     0,  1078,
       0,     0,  2064,     0,  1130,     0,  1129,     0,     0,     0,
    1139,  1140,     0,  1925,  1927,  1935,     0,     0,     0,  1118,
    1137,  1138,     0,     0,     0,     0,  1088,     0,  1074,  1141,
       0,  1141,  1097,     0,   677,     0,  1158,  1099,   202,   207,
     217,   218,  1027,     0,  3579,  1023,     0,  1224,  1220,  1221,
    1216,   117,   121,   113,     0,     0,  2161,     0,     0,  3528,
    3522,  3526,  2129,  2077,     0,  3829,     0,  1694,  1650,     0,
    1621,  1623,     0,   917,     0,  1906,  1900,     0,     0,     0,
       0,     0,     0,  1919,  1911,     0,  1679,     0,   592,     0,
       0,   520,   533,   539,   538,  3324,  3322,  2136,     0,  2096,
    2484,  2495,   484,     0,     0,  3673,  1094,  2349,     0,  3390,
       0,  1935,  1004,     0,     0,     0,     0,     0,     0,   680,
       0,   605,   955,   956,  1006,     0,   687,   978,  2499,  1006,
    1006,   717,     0,   705,   715,   760,  2501,   480,   642,  2338,
     641,   595,     0,  2398,  3675,  3675,     0,   372,  3651,  3649,
    3652,  3650,  3785,  3729,  3730,  3734,  3732,  3743,  3736,     0,
    3736,     0,  3666,  3752,   270,     0,   241,  3715,  1367,   213,
    3765,  3625,  3595,  3625,   159,     0,  1873,     0,     0,     0,
    1831,  1829,  2407,  2408,     0,  2405,     0,     0,  2411,     0,
    1044,  1040,  1045,     0,  1083,     0,  1102,     0,     0,  1068,
       0,  1238,     0,     0,  1121,  1109,     0,  1064,     0,  1111,
    1112,  1153,  1066,     0,  1928,   489,     0,     0,  1073,     0,
    1156,  1065,  1090,  1071,  1103,  1157,   209,  1053,   378,     0,
       0,     0,  1219,     0,  1226,  3764,  3761,     0,     0,  3527,
    3525,     0,  2072,  1800,  1935,  1534,  1510,  1610,     0,  1916,
       0,     0,  1914,  1913,     0,  1908,  1915,   591,   588,     0,
       0,   528,   546,   542,     0,   544,   545,   567,  2077,     0,
       0,  2101,  2103,  3702,  2352,  3360,     0,  1001,     0,  1002,
       0,  3360,  3360,     0,     0,     0,  1006,   978,  2499,   937,
       0,   688,     0,   692,   694,   719,     0,   714,   706,   727,
       0,     0,   656,   476,     0,     0,  3748,     0,  3731,  3733,
    3735,     0,  3754,     0,  3753,  3625,   264,  3625,  3625,  3589,
     205,   214,     0,  3709,  3708,  3780,  3778,  2879,     0,  1749,
    1751,  1774,  1788,  1793,     0,  1824,     0,     0,     0,  2406,
    2414,  2413,  3506,     0,  1085,   604,   998,     0,  1116,     0,
       0,  1156,  1070,     0,     0,     0,  1110,  1131,  1108,  1252,
    1926,     0,     0,     0,  1107,  1089,  1091,  1199,     0,   211,
     187,  3581,     0,     0,  1225,  1230,     0,  1227,  1229,     0,
    1339,     0,  2388,  1693,  1917,     0,  1918,  1921,     0,     0,
    1922,     0,   524,   526,   516,     0,   521,     0,   540,     0,
    2106,  2106,     0,  2106,  2106,  2106,  2106,   560,   568,   570,
     571,   572,     0,  2137,  2474,  2485,   966,  1935,     0,     0,
       0,     0,   968,   970,     0,     0,   707,   700,   696,     0,
       0,   941,   979,     0,   690,     0,     0,   881,   935,   745,
       0,   748,     0,   879,   718,   720,   877,   878,   722,     0,
       0,     0,   761,     0,     0,   859,     0,   862,     0,     0,
     716,     0,   728,   858,   865,  2500,   637,   482,   657,  3675,
       0,  3675,     0,  3714,  3727,  3786,  3739,  3737,  3783,  3769,
    3716,     0,   216,  3715,     0,  1748,     0,     0,  1826,  1825,
    1840,     0,     0,     0,   534,  1084,   999,  1117,     0,  1106,
     490,   534,  1122,  1067,  1119,  1120,   490,     0,  1072,   210,
       0,   203,   188,   219,  3582,  3583,  1222,     0,  3762,  2130,
     889,  1912,  1920,  1924,  1923,   522,     0,   529,   553,   543,
     549,     0,  2106,     0,     0,  2106,     0,     0,     0,     0,
       0,   537,   569,  2106,     0,     0,  2106,     0,   987,   989,
    1132,   967,   991,   990,   972,   988,  1000,  1005,  1004,  3360,
     190,     0,  1132,   969,   993,   976,  1132,   971,   992,   974,
       0,     0,     0,     0,   698,     0,   940,     0,   945,     0,
       0,     0,     0,   746,   747,   882,   721,   880,   876,   870,
     864,     0,     0,     0,   757,   758,   860,   754,   755,   756,
       0,     0,   736,     0,     0,   866,   857,   729,  3746,  3742,
    3744,  3741,     0,  3666,  3625,  3625,     0,     0,     0,   187,
    1753,  1750,     0,  1758,  1760,  1759,  1761,  1752,     0,     0,
       0,  1105,  1087,     0,  1115,  1077,  1079,  1076,     0,   212,
    1228,     0,  2389,   528,   525,   553,     0,   551,     0,   547,
     541,   548,     0,   585,   579,     0,   581,   582,   580,   577,
     564,     0,   562,     0,   983,   986,  1982,   984,   144,  1134,
    1133,   973,     0,   966,     0,   150,   977,   153,   975,   703,
       0,     0,     0,     0,   938,     0,   942,   943,   944,     0,
     936,     0,     0,     0,     0,   871,   875,  2446,  2445,     0,
    1374,   863,     0,   731,   874,   730,  3715,  3715,  3728,  3625,
     231,     0,  3714,  1367,   218,  3766,     0,  1755,     0,     0,
    1832,  1830,  1086,   534,  2131,  2143,     0,  2415,   523,   550,
       0,   558,   554,   556,   559,   584,   583,     0,   561,     0,
     578,   661,   985,  1136,  1135,  1003,  1132,   994,   704,     0,
    1002,     0,   939,     0,     0,   966,     0,   968,   970,   753,
       0,   861,   723,   723,   737,  3625,  3625,  3787,  3740,  3594,
    3717,  3590,   201,  1754,     0,  1762,     0,     0,     0,     0,
    2401,   552,     0,     0,   573,   566,   563,   147,     0,     0,
    1002,   951,   950,     0,     0,   947,   946,   689,   966,   693,
     695,  1375,     0,   734,   724,   726,   733,   739,   740,   738,
     741,  3711,  3710,  3747,  3745,   231,     0,     0,  1757,     0,
    1768,  1767,  1756,     0,  1763,  1765,  1092,  2142,  2144,     0,
    2409,   557,   555,   565,   574,   576,   701,   966,     0,   954,
     952,   953,     0,     0,   691,  1376,   725,   732,   742,   744,
    3738,  3718,     0,  1745,  1746,  1744,  1743,  1742,  1769,     0,
       0,  1764,     0,  1766,     0,  2417,   575,   697,   966,     0,
       0,   743,  3591,  1771,  1770,     0,     0,  2416,     0,  2421,
     699,   949,   948,  3586,     0,     0,  2428,  3584,  3585,     0,
    3592,  2419,  2420,  2418,     0,  2423,     0,  2425,  2426,     0,
    2077,  3587,   378,  2427,  2422,     0,  2429,  2431,     0,  2390,
     187,  2424,     0,  1367,  3593,  2430,     0,  1368,  2432
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5790, -5790, -5790, -5790,  1786, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  2387, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  1517, -5790,   174, -5790,   179, -5790,   184, -4084,  -630,
   -5790, -2275, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  1673, -3421, -5694, -5790, -5790,  -343,  1067, -5790,
   -5790,   -15, -5790,  -378, -5790, -5790, -5790, -4721,  -539,  -769,
   -5790,    12,  4725,  3335,  -480,  4013, -4671,   290, -5790, -3481,
   -5790, -5790, -5790, -5790, -2422, -5790, -5790, -5790, -5790,   311,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  -608, -5790,
    1509, -5790,  1004, -5790, -4067, -5790,  -733, -5790, -5790, -5790,
    1529, -5790, -5790,   401,   997,  2918,  2837, -5790, -5790, -5790,
   -5790,  1512, -5790,  2043, -5790, -2138,  3356, -5790, -5790, -5790,
   -5790, -5790,  2399, -2930, -5790, -5790, -5790,  1222, -5790,  -846,
   -5790,    38, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  -503, -5790, -2524,  1455, -5790,  1476, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -1280, -5790, -5790,
   -5790,    40, -5790, -5790, -5790, -5790, -5790,  3021, -5790,  4676,
   -5790, -5790, -3902, -5790,  2827, -5790,  2829,  2830, -3292, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,    43, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790,  -170,  -167,    56,
     610,  1089, -5790, -4209, -5790, -5790,   -38, -5790, -5790, -5790,
   -5790, -5790,   864,   166,   862, -5790,   479,  2604, -3244, -5790,
   -5790, -5790, -5790, -5790, -5790,  -530,   -91,  -642, -5790, -4399,
   -5790, -5105, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -4039, -5790, -5790, -5790,  -780, -5790, -5790,  -736, -5790, -5790,
   -5790, -5790,  -404, -5790, -5790, -3941, -5790, -5790, -5790,   -81,
   -5790,  2336,  4089, -2289,   320,  -594, -5790, -4127,   642, -4390,
   -4246, -5790, -3832, -5790,  -285, -1372, -1360, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790,   281,   152,   644, -4645, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -4637, -4635,    33, -5790, -5175,
   -5790,   441, -5790, -3746, -5790, -5790, -5790, -5790, -5790, -5790,
    -732, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5789, -5790,
   -5790,  -560,  -570, -5790,  -462, -3235, -5790, -5001,  -450, -1431,
    -449,  -447,  -446, -5790, -1584,   985,  3958, -5790, -5790, -5790,
     227, -1495, -1712, -5790,  1677, -3847, -1426,  1034, -1355, -3862,
    1519,  -559, -5492, -3262, -1361, -5790, -1402, -5790, -5790, -3608,
   -5318, -5790,  -687, -2347, -3695,  -467, -5790, -5790, -2125, -3774,
   -5790,  3072, -2506, -2434,  2247,  1437, -5790, -5790,   963, -5790,
   -1858,   965, -5790, -5790, -5790,   974, -5790,  -728, -5790, -5790,
   -5790, -5790, -3901, -5790, -2982, -4617, -5790,  5119,  5120, -3490,
    -690,  -689, -5790, -5790, -5790,  -219,  1817, -5790, -3794,  -475,
    -496,  -486, -3712,  -119, -5061, -5733, -4258, -3693,  3075, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,    93,   102,  1307, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,   713, -2755, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5002, -2983, -5790, -5790,   355, -3874,
   -4306, -4325, -4299,  3744, -5790, -5790, -5790, -5790,  4147, -3891,
   -3527, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3298,  1546,
   -5790, -5790,  1853, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  -270,  1860, -5790, -5790, -5790, -5790, -5790,  2397,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  -415, -5790,
   -5790, -5790, -5790, -5790,   -95,  3143, -5790, -5790, -5790, -5790,
     -27, -5790, -5790, -5790, -5790,  2017, -5790, -5790, -5790, -5790,
    2581, -5790, -5790, -5790, -5790, -5790, -5790,  1608, -5790,  2249,
   -5790, -2925, -5790, -5790,  1122,  -620, -5790, -5790,  -432, -5790,
   -5790, -5790, -5790, -5790,    46, -5790, -5790, -5790,  5124, -1929,
      16,  -465, -5790, -5790,     8, -5790, -5790,  4212,  -498,  2065,
    -756,  4890, -5790, -5790, -5790, -5790, -2986,  1940, -5790,  4264,
   -5790, -5790,  4460,  1242,  4237,  1812,   705,  2033, -2089,  -628,
   -3587,  1021, -5790,  1500,   630, 10672, -5790, -1899, -2000, -5790,
   -5790,   -78, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
    2140,  2148, -5790, -5790,  3607, -4025, -5790, -5790,  -850, -5790,
   -2975, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  1489, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3551, -1996, -5790,
   -5790,  3701, -5790,  1587, -5790,   697, -5790, -5790, -1496, -5790,
   -3286, -5790, -5790, -1991,  -694, -5790,  3694, -5790,  3730, -5790,
   -1304, -4052, -5790, -2123,  -567, -5790,  -338, -5790, -5790, -5790,
   -5790, -5790, -3551,  -670,  -667, -5790, -5790, -5790,  3305, -5790,
    4308, -5790, -5790, -5790, -5790, -5790, -5790,  3312, -5790, -2562,
   -5790, -2981,  4310,  4312,  4313, -5790,  4314, -5790, -5790, -2190,
     195, -5790,   509, -5790, -5790, -5790, -5790, -5790,  1003, -5790,
    -319,   612,  -316, -4551, -1926,   829, -5790, -5790, -2296,  3336,
    3751, -1330, -5790,  2525, -5790,  3311,  1539, -5790,  1875, -5790,
     875,   877, -5790, -5790,  1548, -5790, -5790, -5790, -5790,   374,
    -199, -5790, -5790, -5790,   -24,   655, -2539, -5790,   380, -3730,
    4309,  -157, -5790,  1872, -2341, -3697, -1273,   746, -1371,  1882,
     371,  4967,  -538, -5790, -5790,  4293, -5790, -3380, -5790,  1828,
   -1965,  -740, -3564, -3099, -4970, -5790, -2515,  1132, -5790, -5790,
   -5790, -5790,   895, -5790, -5790, -5790,  2566, -5790,  5249, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  -737,
   -1234, -5790, -5790,  2392,  -265,  -568,  5272,  -430, -5790, -5790,
    -429, -5790, -5790,  5059, -2446, -5790, -5790,  4455,  3114,  2366,
   -5790,  1238, -5790, -5790, -5790, -5790,  1049, -5790, -5790,   132,
   -1177,  -488,  1879, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
     665, -5790,  1068, -2260, -5790, -5790, -5790, -5790,  -418, -5790,
   -5790, -5790, -5790,  1074, -5790,  -536, -5790,  -403, -5790, -5790,
   -5790,  4901, -5790, -5790, -5790, -5790, -5790, -5790, -4400, -5790,
   -5790,  3181, -1792,  4905, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  2744, -5790, -5790, -5790, -5790, -5790, -5790,  3576,  5097,
    5103, -2045, -5790, -1104,  2748,  2076, -1152, -5790, -5790, -5790,
    4344,  5107, -5790, -5790,  -163, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790,  2698,   118, -5790, -5790, -5790,
   -5790, -5790,   410, -5790, -5790, -5790, -5790,  3472, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,  3908,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,  1266,  -518, -5790,   601,  -565, -5790,   286, -5790,
   -5790, -5790, -5790, -5790,  -636, -5790, -5790,  -640, -5790, -1412,
    4816, -1375, -5790, -2121, -3857, -5790,     1, -5790, -5790, -5790,
    2752, -5790, -5790, -5790, -5790,  2415, -3006, -5790,   438, -5790,
   -5790, -3122,  -970, -2011, -4467,  4157, -5790, -5790,    29,  4874,
    4617,   182,  1086, -1314, -5790, -5790,  2370,    -3,  2597,  -469,
    -785,  -787, -1124, -5790,  8977, -5790, -5790, -3285,    21,  -641,
    -573,   194,    81,    50,    15,    24, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790,  2123,  2124, -5790,  5133,
   -5790,  3136,  2846, -5790, -5790, -5790,  2125, -5790, -5790, -5790,
    5138, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790,  2142,  2144,  2143, -5790, -5790,  1611, -2584, -5790, -5790,
   -2317,   164, -5790,  3169, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790,  3474,  -584,  4620,  -585,  3688,  5152,  4646,
   -5790,  3959, -5790,  3962, -5790,  1417, -5790, -1256,  2208, -1776,
   -2745, -5790, -5790,  2607,   983, -5790, -5790, -2997, -3559, -5790,
    2057,   887, -5790, -5790,   256, -5790, -5790, -5790,  1423,    96,
    5132,  4526, -5790, -5790, -5790, -5790,  5352,  2253, -5790,    63,
    5377,  5379,  5380,  -421, -5790, -3729, -5790, -4606, -5790, -5790,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -4993, -5790,
   -5790, -5790,  2360, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790,   -70,  4904, -5790, -5790, -5790, -5790,  1343, -3085,
   -3283,  -676, -5790, -5790, -5790, -5790, -5790,  3183, -5790,  1815,
   -5790, -5790,  -282, -2225, -5790, -2610, -5790, -4196,    47,  -626,
    4912, -5790, -5790, -5790, -5790, -5790,  4892, -5790, -5790,  1154,
   -5790, -4228, -4233,  -277, -4301,  -428, -4175, -5790, -4633, -5790,
   -5790, -5790,  1551, -5790, -5790,  2080, -5790, -5790, -5790, -5790,
     192,   188,   204, -5790,   207, -5790, -5178, -5790, -5790, -5790,
   -5790,   193, -5790, -5790, -4710, -5790, -5790, -4309, -5790,   395,
   -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790, -5790,
   -5790, -5790, -5790, -2659, -5790, -5790, -5790,  4075, -5790,  5024,
   -5790,  -967,  4919, -5790, -5790, -5790, -5790, -5790, -5790,    45,
   -5790, -5790, -5790, -2549, -5790
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,   477,   762,  2363,   478,   479,   480,   481,   482,  2329,
     483,  1324,  3092,  1326,  2294,  3095,   484,   731,   485,  2503,
    3289,  3290,  4955,  4956,  4949,  4950,  4952,  4953,  3291,   845,
     846,  3134,  3135,   486,  3152,  4331,  3813,  2365,  5120,  3146,
    5406,  2370,  5123,  2371,  5124,  3144,  4347,  4838,  2377,  2378,
     771,  4332,  3901,  3902,  6063,  1385,  3809,  3910,  3911,  3159,
    4826,  4935,  5776,  4939,  5919,  6061,  5870,  3929,  5297,  5777,
    5778,   664,  1396,  2638,  5873,  2468,  5720,  5495,  5496,  3238,
     487,   838,  2491,  3936,  1503,  2492,  2493,  5188,  5189,  3968,
    3969,  5492,  5493,  4494,  4821,  5181,  4829,  3077,   970,  1799,
    3335,  3336,  2567,   859,   860,  2575,   861,  3362,  3298,  4038,
    4039,  4523,   862,  4010,  4011,  4012,  3366,  1194,  4013,   488,
     489,   685,   693,   686,  1191,  2950,  1192,   490,   491,   729,
    2319,  2320,  2321,  2322,  3775,  3112,  3769,  3770,  4757,   863,
     864,   971,   665,   972,   973,   974,   975,   976,   977,   978,
     979,   980,   949,   841,  3394,  3445,  4059,  3395,  4040,  3446,
    2688,   981,   982,   983,   984,   985,  1943,   950,  2658,  4049,
    4537,   986,   644,   842,  1505,  2497,   843,  2498,  3939,   844,
    2495,  1508,  4065,  2626,   903,  1862,   987,  1200,  4066,   988,
    2695,  2697,  2694,  4064,  4987,  2696,   989,   675,   703,   663,
    1860,   691,  5185,  5502,  4804,  5177,  4805,  5472,  4725,  5172,
    5173,  5174,  5566,  3754,   495,   678,  1176,  2148,  2942,  4212,
    3630,  3632,  2943,  4211,  4665,  4666,  4667,  3628,  3629,  5641,
    3634,  4209,  5811,  6193,  5941,  5942,  4201,  5946,  4674,  5066,
    5067,  5068,  5375,  5643,  5817,  6081,  5947,  6200,  6079,  6196,
    6080,  6198,  6333,  6282,  6283,  6091,  6211,  6212,  6287,  6334,
    5957,  5958,  5959,  6383,  6384,  5960,  4205,  4206,  5638,  5062,
    5692,  3800,  3801,  2463,  5540,  1335,   496,  4806,  4919,  4807,
    4808,  5442,  6099,  6017,  4810,  4811,  4812,  6290,  2223,  5468,
    5454,  4836,  5583,  4813,  5128,  5129,  5130,  5131,  5983,  6130,
    5985,  5986,  6123,  6233,  6122,  5132,  5133,  5414,  5847,  5422,
    5257,  5134,  5135,  5136,  5429,  5683,  5849,  5845,  5994,  5995,
    6353,  6354,  6010,  6314,  6011,  6360,  6397,  6398,  5996,   497,
     677,  2097,  6144,  6145,  6146,  1801,  5684,  1802,  1803,  2539,
    1804,  1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,
    3359,  2585,  2527,  3311,  3312,  2517,  2518,  4563,  2519,  4564,
    2584,  6012,  6013,  3304,  2523,  6246,  2524,  3325,  6157,  5997,
    6014,  5999,  2543,  2173,  2174,  3848,  2188,  2189,  3679,  3680,
    2466,  2544,  3319,  2545,  3352,  4638,  5358,  4644,  4645,  4646,
    4170,  4171,  4172,  4173,  4174,  3591,  6000,  5676,  5981,  6125,
    6128,  6240,  6345,  5423,  5137,  5427,  1293,  5138,  5139,  6100,
    6112,  6116,  6101,  6117,  6113,  5841,  3804,  6102,  6103,  6104,
    6119,  6115,  4322,  6105,  5660,  5970,  5661,  5410,  3327,   498,
     633,  4444,  1472,  3224,  1474,  1484,  3933,  3250,  3249,  1487,
    1486,  3242,  4414,  4890,  5234,  4443,  3930,  4448,  5592,   807,
    4921,  5909,  5751,  5917,  5753,  4922,  5106,  4923,  5894,  6045,
    4924,  5772,  5915,  6057,  5107,  5108,  4925,  4926,  4927,  6218,
    6219,  6220,  5243,  2267,   821,   822,  1492,  1493,  1494,  3389,
    5587,  5269,   499,  3795,  3128,   500,  1352,  1353,  1354,  2341,
    2342,  3131,  3132,  4312,  4764,   501,  1319,  3088,  2331,  3120,
     502,  1338,  3786,  3787,  3788,  4306,   503,  1500,  2487,  2488,
    3254,  4455,  4947,  5302,  5600,  5784,  5596,  5926,  5927,   504,
     849,  1511,   505,   646,  2512,  2513,  2514,  3293,   506,  1954,
     641,   507,  2157,  2154,  2956,  2957,   508,  1318,  2281,  2282,
    2283,  2284,  3750,   509,  2666,  3412,  3413,  3414,  3415,  3083,
    4282,  3084,  3085,  3759,  4543,   510,   785,  1464,   511,   784,
    1463,   512,   513,   702,   757,   695,  2164,   515,   516,  4726,
    2739,   518,   791,   789,  1139,   520,  1456,  1452,   521,  2740,
    1140,   781,   782,  1404,  1220,  3833,  3834,  2605,  2606,  3192,
    3179,  1221,  1222,  1433,  2440,  3209,  2968,  2969,  2263,  2970,
    4224,  4684,  6311,  1983,  1872,  1322,  1142,  1143,  1144,  2108,
    2109,  2124,  1145,  2118,  2896,  4608,  5029,  5030,  5031,  5032,
    2825,  2826,  2937,  1146,  2813,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,  2808,  1154,  1155,  1156,  2932,  4589,  4590,  5011,
    3623,  3624,  3625,  1157,  3474,  4573,  3485,  3486,  2768,  1158,
    1159,  1160,  1161,  1162,  4194,  1163,  4660,  4380,  1164,  1955,
    2702,  2766,  4999,  4578,  5329,  5001,  5002,  5333,  2707,  3462,
    4093,  4094,  4095,  2829,  2830,  2004,  2005,  1972,  1973,  4149,
    1405,  5197,  6408,  1406,  5514,  5878,  5879,  6037,  6266,  6177,
    6178,  6372,  6373,  6374,  6375,  1407,  3165,  4839,  1408,  1409,
    1410,  4364,  4365,  5198,  4843,  5200,  4847,  2401,  2402,  2405,
    2406,  1411,  1412,  1413,  1414,  2389,  1415,  1416,  1417,  3184,
    5730,  5206,  5207,  5888,  5887,  5208,  4852,  4853,  4368,  4369,
    4736,  4737,  4738,  3844,  2762,  2763,  2841,  2671,  2672,  2673,
    2708,  1425,  2416,  3200,  3854,  2418,  3852,  4375,  3856,  4381,
    4382,  2927,  3616,  4190,  3618,  5054,  5365,  5366,  5633,  5799,
    5800,  5805,  4930,  5563,  5564,  3377,  1434,  3217,  3871,  4378,
    2225,  2226,  1436,  2422,  3204,  3860,  2227,  2429,  2430,  3865,
    4029,  1437,  1438,  1450,  1455,  1441,  1439,  3367,  4886,  3368,
    4175,  4157,  5112,  5481,  2731,  2732,  5435,  4485,  1442,  3220,
    4392,  4393,  4394,  1421,  1422,  2411,  2412,  2413,  1443,  1423,
    3193,  4371,   522,   724,   523,  2622,   890,  1857,  2621,  3766,
    1513,  4276,  2600,  2601,  1847,   815,   662,   524,   666,  4538,
     525,   706,  4275,   951,  3239,  1900,  2275,  1901,  3076,  3744,
    3745,  4727,  5100,  4728,  5093,  5094,  4729,  1306,  5390,  5391,
    1470,  4410,  4411,  4405,  3070,  3738,  1307,  2268,  4269,  3067,
    4270,  3068,  3097,  4271,  5322,  5791,  6191,  3064,   526,   700,
    4714,  5818,  4263,  4264,  6274,  6275,  1304,   527,   649,  2599,
     886,  1836,  1839,  1840,  2609,  4971,  3373,  5312,  4518,  4970,
    1841,  1842,  3375,   887,   888,   528,   745,  3796,  1358,  2247,
    2248,  2249,  3051,   529,   697,  1294,  4258,  4711,  3037,   681,
    5962,  2230,  1297,  2231,  3033,  3720,  2211,   530,  1461,  1459,
     836,   531,   532,   797,   642,  2445,   533,   534,  1327,  2312,
    3109,  4289,  4290,  4741,  2313,  2314,  3767,   535,   710,  1312,
    3763,  5113,  5114,  5401,   536,   736,  1342,  1343,  2335,  2333,
    3791,  3123,   537,  2944,   538,   667,   954,  1904,  1905,  2664,
     539,   739,  1347,   540,   541,   956,  4544,  6070,  6277,   671,
    2668,  1909,  5473,  4855,  5213,  5214,  5216,  5530,  5531,  6330,
    6429,  6443,  6436,  6446,  6447,  6450,  6456,  6457,  1165,  1365,
    1366,  1166,  6149,  1167,  1168,  1169,  2741,  1310,   705,  2271,
    2272,  5385,  5648,  3074,  3741,  2655,  2656,  2273,  5095,  5096,
    3652,  3853,  1170,  4265,  5411,  1514,  2602,  1330,   612,  1171,
     613,   817,  1367,  2408,  3422,  1243,  3665,  1173,  4067,  1480,
    2155,  2476,  2477,  3423,   615,  3666,  1244,  1815,   616,   617,
     618,   619,   620,   621,   622,   623,  1822,   550,   696,  1252,
    2185,  2193,  2987,  2183,  2999,  3700,  3001,  3002,  3705,  3003,
    1300,  2974,  2184,  3689,  4697,  4696,  3000,  4250,  5083,  5082,
    3004,  2995,  4246,  4232,  3675,  4691,  5379,  5378,  2982,  2981,
    2980,  2990,  2991,  2992,  2993,  4243,  3685,  2456,   551,   957,
    2677,   674,  1911,  1912,  3436,   552,   699,   553,   730,  1332,
    3116,  3779,  3780,  4302,  4759,  4303,   554,  1205,  1206,   555,
     940,  3807,  3398,  2616,  1483,   942,  2617,  2639,   944,  1864,
     945,   946,   947,   948,  4433,  3922,  3923,  3403,  2619,  2478,
    2964,  3915,  4876,  2479,  4427,  4428,  4877,  3247,  5609,  4440,
    3926,  5319,  4528,  5610,  5611,   556,   711,   557,  5497,   723,
    1321,  2291,   558,   559,   560,   561,   790,  1446,  1223,   634,
     635,   636,   637,   825,   826,  3932,  4450,  4942,  4943,  5594,
    6439,  6440,  3158,  4345,  6031,  6367,  6433,  6452,  5507,  5508,
     562,  1372,  1368,   756,  2361,  2355,  2357,  3142,  3799,   563,
     564,   565,  4822,   566,  1940,  2692,  4063,  4986,  3407,  2499,
    1823,   624,  1923,   873,  4316,   905,  3337,  1309,  3071,  2624,
     990,   991,  5865,  3342,  4496,  2500,  2501,  5708,   874,   875,
     568,   569,  1465,  3222,  3223,   992,   993,  4281,  4732,  4733,
    5103,  4830,  4831,  4824,  5875,  6363,  4337,  2278,  5867,  5868,
    6166,  6366,  4341,  4342,  4343,  3815,  3816,  6025,  5702,  5703,
    5704,  5861,  5711,  6165,  5709,  6164,  5705,  6022,  6257,  6020,
    6256,  5706,  5489,  5490,  5707,   876,  3971,  3972,  3973,  5721,
    5872,  3818,  4344,  5498,   570,   571,  3156,  4350,  4348,  5180,
    5485,  5857,  6163,   877,   878,  1831,   879,   880,  2594,   881,
    2515,   994,   995,   572,   996,  2699,  2698,  4070,   716,   997,
    1316,   648,  1830,  2279,  3747
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     614,   542,   676,  1938,   714,   643,   824,   867,   519,  1241,
    1292,   758,   715,  1800,  2922,   548,   517,  2730,  2253,  2792,
    1255,   544,   830,  1403,   549,  1482,  3241,  1481,  3115,   543,
    1323,  2952,   687,  3139,  3098,  3370,   687,   906,   492,  3454,
     493,   687,  3369,   494,   701,   573,   514,   567,  3408,  2446,
     547,  2611,   694,  2540,  2431,  1246,  2175,  2431,  2178,  2179,
    2738,  2435,  3985,  2803,   820,  4225,  2192,  3742,  3378,  3256,
    2526,  3350,  2772,  2156,  3138,   868,  2871,  2852,  2006,   943,
     941,   546,   889,  1199,   892,   893,   894,   895,   896,   897,
     898,  4323,   899,   900,  3219,  3872,  2419,  2384,  2530,  2875,
    2464,  2583,  3992,  3758,  4481,  4395,  2409,  2522,  3320,  1207,
     941,  1349,  2465,  1512,  1356,  2633,  4823,  4837,  2221,  4929,
    3021,  3022,  1198,  1247,  2350,  2907,  2908,  2909,  2910,  2911,
    2912,  2913,  2915,  2917,  2918,  2919,  2920,  2921,  4928,  2528,
    2254,   840,  4389,  3320,  3063,  4521,   809,  1833,  4267,   813,
    3455,  3808,  4370,  5182,   727,  4257,  2951,  4850,  3755,  4816,
    4068,  4069,   819,  3444,  4385,   726,  1966,  2528,  2549,  4551,
    1379,  3028,  1380,  3226,  3938,  1382,  1383,  2520,  1359,  1360,
    3111,  4958,  3768,  1824,  4097,  4396,  4098,  4101,  4097,  2255,
    4098,  3044,  3836,  4156,   545,   939,  3321,  2952,  4920,  5510,
    1308,   690,  3835,  3835,  4452,  4815,  3840,  2546,  5482,  3188,
     831,  2887,   832,   833,  5293,  3057,  3058,  2548,  1817,  2895,
    2897,  -372,  2900,  2901,   834,   939,  3108,  4763,  1515,  4567,
   -2509, -2510,  1938,   803,  4335,  2542,  2542,  2528,   867,   835,
    4562, -2106,  -481,  -481,  4562,  1468,  2542,  5240,  1317,  2212,
   -1014, -1014,  1468,  1454,  4335,  5241, -3655,  5242,   740, -3383,
   -3383,   721,  1333,  3292,   803,   719,  2489,  3133,  4403,  5642,
    3448,   712,  1878, -2619, -2619,  2531, -2810, -2810, -2615, -2615,
     668,   743,  2093,  2095,  2096,  2547,  1818,  5937,  2103,  2558,
    -383,  -383,  1453,  2564, -3651,  2138,  2104, -3648,  5202,  4432,
   -3384, -3384, -3653,  4305, -3649,  2105,   868,  5140,  3245, -2619,
    6199, -3652,  2552, -3461, -2615, -3650,   734,  4961,  1471,  5604,
    2586,   735,  2951,  1848,  4372,  4373,  4902,  5101,  2587, -3444,
    4722,  4723, -3448,  1858,  1859,  4339,  1504,  4336,  5301,  4256,
    1468,  2542, -3447,  2460,  5964, -1876, -1876,  5665,  5666,  2555,
    3349,  3363,  2457,  2888,  1394,  4577,  3433,  4336,  2528,  1499,
    2359,  4945,  2528, -3445,  2052,  2078,  4439,   738,   798,  4723,
   -3446, -3451,  3912,  2103,  3346,  3363, -3383, -2169,  2542,  4983,
    2551,  2104,  5785,  3456,  4466,  4022,  4203,  2082,  2528,  2528,
    2105,  2103,  2669,  3588,  5598,  4354,  3835,  2528,  3686,  2104,
    3397,  3363,  3363,  1427,  4424,   672,  1498,  2553,  2105,  3316,
    3434,  3698,  1849,  1850,  1851,  1852,  3363, -3384,  5176,  3363,
    1468, -3383,  2554,  3626,  2559,  2125,  2556,   713,  5685,  1855,
    4453,  3363,  2889,  2217,  1225,  3363,  2565,  3387,  2568,  2569,
    2570,  2571,  4698,  2572,    41, -2654,  1468,  2125,  1429,  2214,
    3363,  3363, -1951,  2577,  2578,  2579,  2580,  2581,   737,  5140,
    3308,  1388, -3384,  2106,  2125,  3363,   718,  1320,  2576,   638,
    5491,  1942,  2709,  2710,  5433,  6265,  2126,  2127,  2289,  2560,
    4413,  2720,  3309,  2460,   759,  2287,  2125,  1880, -2670,  4154,
    4441,  4053,  5436,  2126,  2127,    48,  2103,  2669,  4482,  4809,
    4809,  3917,   718,  3734, -2671,  2177,  3635, -2672,  5848,  2607,
    1468,   952,  2782,  2105,  2785,  2126,  2127,  2103,  2128,  6043,
    6156,  2890,  5428,  5438,  5440,  2104,  5860,  5998,   800,  2798,
    2799,  2801,  2169,  1468,  2105,  6389,  2804,  2805,  5458,  4349,
    2128,  1468,     4,     5,   669,  2818,  2103,  1468,  2106,  6441,
     519,  5757,  2209,  1419,  2104,  5938,  5842,  2128,   802,   775,
    2228,  1395,  4933,  2105,  4984, -3383,  2106,  6339,  4256, -2810,
    2107,  6399, -2106,    41, -2106,  2125,   647,  4724,   872,  2128,
    4883,  5504,  2286,  2229,  3511,   645,  1468, -1876,   514,  2723,
    2724,  2725,  3148,  2726,  5245,  2727,  5247,  2728,  3129,  5259,
    2103,  4588,  5829,  2129,  2126,  2127, -3384,  6388,  2104,  6421,
    4663,    41,  4809,  5277,  3388,  5264,   683,  2105,  4827, -3476,
    5430,  3913,   808,   810,    48,  2129,   810,  1435,   818,  3918,
    6442,  2461,  1435,    50,  1435,  2532,  2103,  6390,  3875,  3876,
    4670,  3642,  2129,   542,  2104,  1403,  4640,  3600,  2103,  1225,
     519,  2534,  2125,  2105,  3130,  2107,  2104,  2250,   517,  2252,
    4934,   818,    48,   548,  2129,  2105,  4483,  5896,  2128,   866,
     758,    50,   871,  2107,  4920,  5934,  2170,  6136,   548,  4832,
    5860,  2126,  2127,  4313,   544,  1196,  1475,   549,   514,   688,
    -221,   818,  2106,  5263,  2288,   704,  5655,  2210,   547,  4641,
     827,  1197, -1876,  2475,  1344,  4640,  1313,  3756,  6044,  1881,
    6341,  1250,  4562,   547,   818,  2561,   953,  1245,  4409,  5897,
    1251,  2106,  3757, -1951,  5939,  1242,  3601,  1331,   818,   870,
    1269,  3522,  2618,  2723,  2724,  2725,  4499,  2726,  4833,  2727,
    2669,  2728, -1876,  4914,   546,  2128,  1249, -3476,  2723,  2724,
    2725,   823,  2726,  2129,  2727,  2167,  2728,  4442,  4641,  5788,
    1378,  2630,  4454,  6156,  2176,  2215,  6464,   939,  3806,  1420,
    5916,  2461,  2190,  3802,  2504,  2106,   800,  1248,  2107,  3727,
    5713,   707,   640,  3472,  2125,  5474,  4699,  2366,   786,   679,
    2369,  4527,  1882,  1458,  2372,  2373,  2375,  2376,  1451,  2107,
    3682,  1466,  1467,  2224,  5673,   829,  3735,  1314,  2218,   818,
     850,  2106,  2290,  2126,  2127,  3602, -2169,  4834,   882,  5803,
    5140,   787,  3636,  2106,  4256,   818,   902,   847,  2107,  3627,
    2129,  3920,  1488,   673,  1501, -3383,  3310,  6111,  3202,   830,
     998,  1398,   869,  1389,  4353,  6002,  2360,   800,  3589,  5265,
    1490,  3347,  5231,   883,  3246,  3835,  4359,   545,  4409,  5786,
    4363,  4339,  1432,  1302,  3861, -1876, -2169,  6181,  5940,   548,
    3470,  3374,  5494,   848,  3246,   544, -3384,  2128,   549,  2213,
    1816,  4887,  2107,  1821,  1843,   741,  1845,  6342,  3406,   810,
     810,   810,   810,  1853,   548,   818,  3846,  5284, -3461,   670,
     866,  6343,   708,   871,   547,  5724,  5232, -1876,   744,  1854,
    6095,  1856,  4413,  6195, -3444,  1336,  2251, -3448,  2107, -1876,
    2536,  2480,  5613,   847,  2511,  2449,   847, -3447,  3965,   547,
    2107,  3927,  1879,   742,  5240,   546,   758,  2292,  2537,  3435,
    1820,  3140,  5241,  2516,  5242,  1269,  6186,  5266, -3445, -3476,
    5140,  3594,  3595,  2415,   800, -3446, -3451,  1929,  1453,  4929,
     870,   788,  2129,  2511,  1933,  5727,  1936,  5728,  4677,  2891,
    2521,  4425,  1469,  5862,   542,   476,  4809,  2382,  4928,  1469,
    1944,   519,  1922,  1922,   804,  1922,  1922,  1922,   548,   517,
    2975,  2525,  1922,  5864,   544,  3838,  3839,   549,  5871,  -372,
   -2509, -2510,   543,  3608,  3609,  2985,  3612,  3613,  1921,  1921,
    3728,  1921,  1921,  1921,  3966,  2691,  2484,  2736,  1921,   514,
     567,  4156,  4156,   547,  6096,  4156,  4156,   831,  -481,   832,
     833,  4156,  4156,  2006, -3655,  5404, -1014,  2962,  4920,  1920,
    1920,   834,  1920,  1920,  1920, -3383,  3598,  2431,   545,  1920,
    5475,  3205, -2619,  1819,   546,  3914,   835, -2615,  4885, -2619,
   -2619,  3025, -2810,  3027, -2615, -2615,  3031,  1469,  6241,  5225,
    6243,  6244, -3651,   869,  4036, -3648,  -383,  5748,  3039,  5750,
   -3653,  3042, -3649,  3019,  5755,  3045, -3384,  3174,  4809, -3652,
    2464,  5760,  5761, -3650,  2196,  4962,  4374,  5605,  3189,  4946,
    3364,  5767,  2465,  4062,   476,  4238,  2475,  5140,  2670,  5193,
    3318,  3060,  3061,  3062,  2093,  2095,  5482,  5482,  2053,  2079,
    2620,  4002,  4003,  4099,  3364,  4100,  5217,  4541,  3590,  5220,
    5090, -1876,  5599,  1225,  2101,  2262,  2100,  3343,  3328,  2542,
    3344,  2083,   476,  2098,  3492,  3328,  3493,  1469,  3353,  2079,
    3364,  3364,  1919,  1919,  3056,  1919,  1919,  1919,  2511,  3303,
    5346,  3306,  1919,  5221,  5348,  3364,  2542,   545,  3364,  2542,
    6299,  6300, -2654,  1469,  3317,  4562,  -115,  2542,  -115,  4562,
    3364,  6306,  2953,   882,  3364,  2132,  2133,  2134,  2135,  2136,
    2137,  -119,  3329,  -119,   818,  -111, -2654,  -111,  3984,  3364,
    3364,  4508,    41,  3803,  3334,  2130,  2131,  2132,  2133,  2134,
    2135,  2136,  2137,  2670,  3364, -2670,  6344,  2700,   883,  3354,
    4314,   818,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,
     818, -2671, -3570,   818, -2672,  4155,  3364,  1469,   818, -2670,
    6340,  3218,  3385,  4642,  2130,  2131,  2132,  2133,  2134,  2135,
    2136,  2137,  4856,    48,  2505, -2671,  2327,  4030, -2672,  2103,
    1469,  2191,    50,  3603,   680,  3246,  4859,  2104,  1469,   818,
     941,  2521,  3473,  6098,  1469,  5223,  2105,  3295,  2103,  2103,
    4835,  2717,  5259,  5140,  2984,  3501,  2104,  2104,  3504,  5906,
    2924,  5710,  3701,  1491,   885,  2105,  2105,   709,  4228,  3494,
     638,  3495,  4642,   638,  3516, -2169,  1435,  2274,  4407,   800,
    4031,  4319,  2103,  1469,  2538,   800,   800,  5233, -2106, -2106,
    2104,  3536,  4240,  5717,  5033,  4097,  6365,  4098,   672,  2105,
    3916,  5267,  2328,  2130,  2131,  2132,  2133,  2134,  2135,  2136,
    2137,  2338,   672,  4809,  3305,  4809,  2103,  2938,  2953,  2820,
     712,  2729,  3683,  3484,  2104,   800,  2351,  3471,  2232,  2292,
    4256,  2394,  3768,  2105,  2899,   672,  2844,  3684,  2614,  4643,
    4840,  4841,  4948, -1836, -3271,  2963,  2364,  1481, -3683,  4844,
    4845,  3835,  3835,  3404,   718,   939,   672, -1252,  1907,  1949,
    1887,  3523,  6423,  6303,  2367,  2368,  3858,  2219,   800,  2391,
    6169,  3575,  2100,  3576,  2536,  4445,  5866,  2939,  3086,  2098,
    2344,  2131,  2132,  2133,  2134,  2135,  2136,  2137,  5696,  2414,
     712,  2679,  5876,  4287,  5615,  3692,  6042,  2395,  4320,  1269,
    3917,  2685,  5183,  5936,  2106,  5461,  6437,  2438,  2396, -3684,
    5486,  5779,  3023,  3029,  5899,  6055,  2397,  3043, -1876,  1481,
    2325,   712,  4809,  2106,  2106,  1376,  2670,  2103,  2447,  2448,
     542,  3605,  5363,  1444,  1451,  2104,  2119,   519,   720,   847,
   -3680,   847,  2469,  2398,  2105,   517,  4681,  4682,  4254,  1225,
    4502,  3227,  4504,   800,  5364,   818,  2703,  2106,  2674,  4286,
    5371,  2316,  2506,   810,   800,  2802,  4874,   800,  4117,  5710,
    4213,  4284,  2332,  1897, -3678,   514,   713,  1241,   800,  6369,
    6351,  1403,  3226,  1428,  4456,   722,  4308,  2952,  1255,   884,
    2209,  2106,  1445,  2103,   780,  5532,  2103,  1897, -1836,  2399,
    5203,  2104,   758,   -72,  2104,  4975,  4976,  3444,  3411,  6312,
    2105,  2107,  2352,  2105,  2132,  2133,  2134,  2135,  2136,  2137,
    1888,   692,  3320,  1246,  3320,  2103,   698,  2400,  3918,  1430,
    2107,  2107,  2120,  2104,  6028,  2988,  6029,  1427,  5967,   760,
     639,  1428,  2105,  3783,  2505,  3087,   713,  5806,  2121,  2507,
    6438,  2508,  2258,  2475,  2976,   941,  2345,  5443,  6304,  6318,
    4032,  2103,  5900,  2326,  2107,  3121,  1440,  5456,  5457,  2104,
    5617,  3693,  1966,  1908,  3008, -3281,  2394,   713,  2105,  4321,
    4288,  6370,  1429,   640, -3681,  4053,   640,  1430,   852,   853,
    4042,  1247,  2103,  6315,  6316, -3683,  2103,  4202,  2107,  4195,
    2104,  3919,  2106, -3679,  2104,  1403,  5696,  5636, -3271,  2105,
    3066,  4548,  2951,  2105,  1950,  6183,  1403,  1403,  4692,  2122,
    1431,  2220,  2103,  2459,    14,  2959,  1979,  1980,  1981,   885,
    2104,  5812,  4701,  2675,  2516,  2210,  4704,  3859,  4207,  2105,
    2923,  2509,  2395,  4446,  2233,  2738,  5694,  4408,  3105,  6019,
    6021,  5487,  2103,  2396,  4262,  5204, -3684,  2940,  4188,  4189,
    2104,  2397,  1889, -1836,  6400,  5325,  2103,  6033,  2106,  2105,
     939,  2106,  2029,    23,  2104,  3124,  4181,  2034,  4184,  3648,
    3649,  5967,  6424,  2105,  5184,  4730,  4520, -3680,  2398,  3010,
    3011,  2103,  3013,  3015,  3016,  3017,  5462,  4241,  5463,  2104,
    2106,  5780,  5677,   476,  3026,  5987,     4,     5,  2105,  2107,
    3784,  5252,  4875,  1898,  2511,  2103,  2510,  2103,  3607,  3157,
    3160, -3678,  3041,  2104,  4242,  2104,   673,   712,  3024,  3030,
    3920,  2592,  2105,  3783,  2105,  5464,  2106,  1898,   901,  4478,
     673,  4256,  2464,  2149,  2399,  1269,  3150,  3151,  3724,  3228,
    3154,  4256,  4256,   941,  2465,  3161,  3162,  3163,   689,  2837,
    5622,  2838,  5253,   673,  4255,  5465,  2103,  2106,  2538,  6313,
    3677,  2106,  2400,  1899,  2104,  2107,  5372,    41,  2107,  3499,
    2330,  3756,  2506,  2105,   673, -1252,  2259,  3697,  4187,     4,
       5,  3702,  3921,  6158,  2589,  6160,  3757,  2106,  5770,  2989,
    3639,  3640,   800,  4355,  2603,  5764,  2431,  2107,  2431,  2431,
    3864,  6185,  3867,  3868,  2613,   810,  6371,  6187,  3110,    46,
    5205,   818,  2464,   818,   800,  5754,  3681,  2106,    48,  1828,
    1833, -3681,  3827,  3785,  2465,  5813,  5814,    50,  3828, -3281,
    5908,  2106,  3714,  2107,  6326,  5330,  3715,  -934,  3717,  5781,
   -3679,    59,   818,  5254,  3390,  3391,  2941,  2128,   818,  3143,
     712,  -708,  3722,  3262,  6293,  3155,  2106,  2713,   939,  2507,
    3149,  2508,  4512,  5418,  2107,  3730,  3731,  2103,  2107,  2511,
    2103,  5244,  2260,   713,  6294,  2104,  5258,  5695,  2104,   763,
    2106,  5268,  2106,  2681,  2105,  3408,  5007,  2105,  2261,  5466,
    3784,  5827,  6261,  5367,  2107,  5071,  4823,  4479,  4514,  2103,
    3338,  3194,  5988,  5989,  5896,  2103,  2971,  2104,  5585,  6268,
    3756,   800,   818,  2104,   761,  4888,  2105,  5419,  6317,  4983,
    2674,   712,  2105,  5467,  2107,  3757,  5815,  1902,  4871, -2503,
    4716,  2106,  2129,  3225,  4256,  2103,  4899,  3491,  2107,  6148,
    5412,  5837,  6170,  2104,  2972,  5961,  5843,  5844,  5343,   856,
     857,  2509,  2105,  3260,  6357,  3432,  5897,   519,  2100,   891,
    6236,  4988,  3240,  2107,  5901,  2098,  2150,  3213,  4717,   779,
    5989,   814,  3586,  5993,  3587,  3392,  3034,  5993,  2489,  4256,
    2110,  2111,  2112,  6148,  2113,  2420,  1432,  2107,   712,  2107,
    3425,  4182,  4583,  4183,  4584,   780,  2892,  5990,  4185,  6197,
    4480,  5816,  6201,  2119,  2103,  2674,   713,  6269,  3387,  4860,
    4990,  5237,  2104,  3785,   805,  4992,  5420,   867,   800,  3035,
    5608,  2105,  4993,   800,  5933,  2923,  2510,  2880,   906,  5125,
    5586,  3829,  2103,   800,  2176,  2103,  4889,   814,  2107,  2103,
    2104,  -934,  2106,  2104,  2872,  2106,  2933,  2104,  1199,  2105,
    6358,  5008,  2105,  2123,  2714,  1476,  2105,  2839,  3426,  4611,
    2840,  4612,  5499,  4054,  5990,  2532,  1829,  5077,   519,  2470,
    3746,  5539,  5080,  5081,  2106,  2103,  2881,   713,  2934,  1225,
    2106,  2534,  3320,  2104,  5421,   868,  5961,  3320,  5982,  6237,
    5984,  6052,  2105,  2421,  3320,  2675,   818,  3206,  2928,  2120,
    2973,  2114,  4904,  5977,  4984,  6359,  5988,  3305,  3611,  5991,
    2106,  5500,  2103,  2103,   800,  2121,  5426,  5426,   818,   818,
    2104,  2104,  5554,  5993,  2103,  2103,   818,  2977,  2103,  2105,
    2105,  2676,  2104,  2104,   786,  1462,  2104,  3439,  6114,  6118,
    5993,  2105,  2105,  3443,   713,  2105,  3596,  6095,  2994,  2107,
    5237,  1903,  2107,  2935,  1308,  3036,   810,   810,   800,   810,
     810,   810,   810,   800,   818,   800,  6238,   787,  1945,  1250,
    4617,   810,  4618,  3214,  5989,  1245,  5991,  6325,  1251,  2106,
    2675,  2107,  5520,  1242,  5521,  3388,  2122,  2107,  3040,   810,
    -710,   818,  4335,  3207,  4513,  2511,  2634,  6106,  6225,  2392,
    3872,  6331,  6227,  5914,  1249,  5979,  6073,  2106,  2635,   811,
    2106,  2144,   800,  6252,  2106,  1350,  2511,  2107,  1946,  5167,
    2482,  5412,  4035,  1477,   800,  5255,  5548,  6124,  4399,  1846,
    4532,  4533,  6368,  5722,  2936,  1248,  4654,  1390,  4655,  2103,
    2153,  3478,  1478,  2103,  6247,  6248,  4653,  2104,  4656,  1391,
    2106,  2104,  5573,  1846,  2103,  1938,  2105,  5501,  3674,  3232,
    2105,  6096,  2104,  2636,  3622,  3322, -2353,  2103,  5990,  5430,
    3479,  2105,  3208,  3166,   818,  2104,   812,  6407,  2903,  6114,
     717,  3323,  1947,  6118,  2105,  5993,  2107,  2106,  2106,   800,
    2706,   823,  2945,  3668,  3126,  4336,  2483,  1351,   476,  2106,
    2106,  2103,  1339,  2106,  4400,  4721,  3488,   788,   718,  2104,
     628,  2103,  1392,  -709,  2107,   818,  2604,  2107,  2105,  2104,
    6074,  2107,  3145,  2103,   818,   818,   818,  3339,  2105,  2583,
     800,  2104,   810,  5256,  6049,  3503,  3645,   941,  5413,  5168,
    2105,  3489,  6214,  3782,  6143,  6217,  5896,  2103,   800,  2719,
    2536,  2264, -2353,  6385,  1948,  2104,  2706,  2107,  4261,   800,
     800,  3669,   732,  6346,  2105,  3508,  2706,   818,  2537,  2103,
    1403,  4884,  3364,  5656,  2904,  1269,  1403,  2104,  4338,  3046,
    5991,  3756,  6337,  5993,  3340,  1938,  2105,  2706,  1340,  2464,
    2905,  1403,   837,   758,  2107,  2107,  3757,  3490,  5897,  5426,
    5451,  2465,   712,  6416,  2265,  2103,  2107,  2107, -2353,  4304,
    2107,  3496,   746,  2104,  2106,  2781,  2103,  2119,  2106,  5091,
     828,  2475,  2105,  3739,  2104,  2784,  4434,  4435,   818,  2106,
    4436,  4437,  4438,  2105,  3764,  5992,  3506,   800,  2562,   839,
     733,  2563,  2106,   800,  1341,  5452,  2800,  3255,  4229,  2637,
     847,  2431,   939,  5547,  5794,  3864,  5299,  3341,  5380,  5381,
    3507,  2906,  3512,  1393,  4233,  3341,  3847,  3620,   800,  2923,
    4236,  4237,  6222,  6114,  6118,  3621,  2106,   847,  6431,  6432,
    5222,  5349,  2618,  2374,  2103,  5316,  2106,  5578,  2103,  3709,
     747,   818,  2104,  4358,  3710,  3364,  2104,  4362,  2106,  5828,
     818,  2105,   718,  3713,  6023,  2105, -2347,  3378, -2347,  3716,
    6098,  3513,  4231,  2120,  2013,  5453,  2134,  2135,  2136,  2137,
    2103,  2107,  2106,  3819,  5324,  2107,  3820,  2528,  2104,  2121,
    3825,  3348,  4376,  2030,  2031,  4503,  2107,  2105,   728,  3831,
    2706,   548,  5249,  3832,  2106,  4557,  2103,   544,  4168,  2107,
     549,  -587,  2103,  3320,  2104,  -342,  2103,  2103,   713,  5258,
    2104,  1334,  4169,  2105,  2104,  1843,  4204,  3382,  5884,  2105,
    3748,  2475,  3384,  2105,  2105,  2395,   547,  3903,   800,   800,
    2106,  3175,  6024,  2107,  1403,  4377,  2396,  3176,   872,  3177,
    5885,  2106,   851,  2107,  3185,  3402,  3402,  3772,  3773,  2817,
    2122,   955,  5819,  5209,  5210,  2107,  5250,   546,  4995,  4996,
    2103,  5469,  5251,  2431,  2528,  5393,  5471,  4516,  2104,   818,
    4561,  1824,  3521,   800,  3491,  3533,  4568,  2105,  2953,  2107,
    2123,  5057,  5043,   800,  3814,  5355,  3817,  5015,  5886,  3620,
    3442,  2437,  3822,  3824,  2439,  2439,  3430,  5074,  3447,  2103,
    3449,  2107,  3424,  1175,  3534,  3431,  3995,  2104,  3509,  2106,
    4519,  5039,  3178,  2106,  6355,  6355,  2105,  1177,  2103,   548,
    5069,  5097,  2103,   548,  3774,   544,  2104,  3186,   549,   866,
    2104,  3429,   871,  4555,  4556,  2105,  2415,  2107,  1195,  2105,
    3541,  5211,  5528,  6296,  4565,  2106,  1201,   682,  2107,  3879,
    3880,  1301,  1193,  5529,   547,  2400,  6396,  4491,   547,   519,
    4492,  2103,  3428,  1303,  2115,  2116,  2117,  3482,  3237,  2104,
     545,  2106,  3237,  2394,  3996,  2103,  2103,  2106,  2105,  2103,
    2103,  2106,  1938,  2104,  2104,   546,  1305,  2104,  2104,   870,
    4102,  3674,  2105,  2105,  2538,  5046,  2105,  2105,  1315,  5048,
    5749,  4107,  4108,  1824,  5645,  5646,  3596,  1824,  4937,  3543,
    4034,   941,     4,     5,  2103,  4938,  2107,  5762,  5212,  5382,
    2107,  4493,  2104,  3360,  3361,  6347,  3668,  4622,  2103,  4623,
    5771,  2105,  5773,  6410,  6412,  2106,  2104,  3546,  3995,  2395,
    3547,  1320,  3995,  3889,  3549,  2105,   748,   749,  1970,  1325,
    2396,  1361,  2107,  1328,  1362,  1363,   800,  1334,  2397,  1364,
    5194,   800,  4144,  1866,  2923,  5595,  1337,  5195,  6394,  5196,
    4220,  3171,  1481,  3172,  2106,  3427,  5606,  3583,  2107,  3405,
    3552,  3406,   684,   750,  2107,  2398,   684,  4153,  2107,  1346,
    6468,   684,  1348,  2106,  3669,  4842,  1361,  2106,   545,  1362,
    1363,  1355,   869,  6254,  1961,  2343,  3996,  6417,  1371,  2100,
    3996,  2348,  2349,  1357,  2103,  2103,  2098,  3553,  3554,  2863,
    2864,  1867,  2104,  2104,  1868,   751,   939,  2103,   779,  3571,
    3574,  2105,  2105,  3581,  1375,  2104,  2106,  3497,  6430,  2779,
    2103,  2399,  2107,  3230,  2105,  4534,  4535,  4536,  2104,  1377,
    2106,  2106,  1869,  1381,  2106,  2106,  1384,  2105,  2103,  1386,
    1870,   818,   818,  2103,  1387,  3539,  2104,  2292,   818,  2400,
    1424,  2104,  3402,  3402,  3544,  2105,  3545,  1460,  4016,  4017,
    2105,  2107,  4018,  3231,  4019,   818,  4020,   818,  3299,  2106,
    3687,  3688,  3300,  1462,  3301,  4710,  3302,  6206,  6207,  3672,
    2107,  2103,  1473,  2106,  2107,  3667,  2103,  1475,  3673,  2104,
    3977,  2176,  3980,  2176,  2104,  3708,   810,  1485,  2105,  3904,
    3232,   810,  3890,  2105,  5300,  2431,  1241,  1241,  1495,  4861,
     810,  1489,  2103,  5027,  3671,  1496,   810,  1255,  1255,  2103,
    2104,  4760,   823,  2107,  4074,  1497,  1510,  2104,  4109,  2105,
    1447,  1448,  2103,  4509,  1502,  5823,  2105,  2107,  2107,  4352,
    2104,  2107,  2107,   800,  1507,  3721,     4,     5,  3891,  2105,
    3510,  1825,  1246,  1246,  1826,  2103,  2103,  1834,  3465,  2274,
    4702,  1835,  4703,  2104,  2104,  1827,   818,  3751,   800,  2106,
    2106,  1403,  2105,  2105,  2123,  1403,  2107,  1846,  4715,  5392,
    4678,   752,  2106,  2723,  2724,  2725,  4581,  2726,  1861,  2727,
    2107,  2728,  4293,  4294,  3535,  2106,   800,  2103,   753,  4268,
    4712,  1369,  1370,  3778,  1373,  2104,  1374,   800,  4582,  3986,
    3905,  3987,  1865,  2106,  2105,  4498,  1863,  3906,  2106,  3233,
    1247,  1247,  3299,  3907,   754,  1871,  3300,  5370,  3307,  3892,
    3302,  3234,  4597,  3805,  2103,   758,  1873,  3810,  3811,   800,
    1874,   810,  2104,   810, -3431,  1875,  3664,  2103,   800,  3823,
     810,  2105,  2103,   800,  4599,  2104,  2106,  5792,  3670,   800,
    2104,  2106,  1876,  4513,  2105,   755,  3988,  2103,  3987,  2105,
   -3433,  5896,  4966, -3430,   800,  2104,  2107,  2107,  3845,  3989,
    1877,  3990,  2414,  3850,  2105, -3432,  1885,  2106,  2103,  2107,
    4614,  1883,  3893,  3711,  2106,  4060,  2104,  4061,  3908,  6030,
    2103,  4630,  2107,  1884,  3718,  2105,  1886,  2106,  2104,  3894,
    3895,  1890,  3271,  3272,  3896,  3897,  3898,  2105,  1006,  1007,
    2107,  5932,  1010,  5897,  1012,  2107,  1014,  3284,  1891,  3286,
    2106,  2106,  1892,   818,  3235,  5635,  4391,  2103,   625,   800,
    4366,  5565,  4367,  1893,  4977,  2104,  4979,  -898,  2103,  -898,
    1894,  2475,  2475,  4422,  2105,  4423,  2104,  1895,  1906,  1403,
    3909,  2024,  4489,  2107,  4490,  2105,  3341,  3341,  2107,  4631,
    2103,  2103,  2106,  5337,  4014,  2460,   847,  1896,  2104,  2104,
    1953,  1967,  3899,  2103,  3970,  1824,  2139,  2105,  2105,  2238,
    3781,  2104,  3979,  4606,  2107,  3545,  4609,  1968,  2292,  2103,
    2105,  2107,  2065,  5607,  4615,  3236,  4616,  2104,  2140,  2106,
     818,  2103,  2070,  4621,  2107,  2292,  2105,  1969,  1974,  2104,
    1817,  1975,  2106,  3287,  3288,  1976,  6094,  2106,  2105,  3538,
    4346,  4625,  3900,  4626,  1364,  3540,  2532,  2107,  2107,  3542,
    4434,  4435,  2106,  3531,  4436,  4437,  4438,  1977,  3994,  4015,
    2533,  3999,  2534,  1978,  3338,  5588,  4940,  1982,  4941,  4024,
   -1659,  4026,  5963,  2106,  1984, -1658,  5097,   800,  2176,  5051,
     800,  2292,   818,   818,  5086,  2106,   626,  2141,  5304,  2107,
    5305,  1985,  2103,   818,  5822,  5306,  1986,  5307,  1818,  1987,
    2104,  4401,  4402,  3550,  4404,  4406,  2103,  3878,  2103,  2105,
    2923,  2176,  3469,  2142,  2104,  3885,  2104,  5308,  3998,  5309,
    1988,  1989,  2106,  2105,  6095,  2105,  2107,  5338, -3565,  2292,
    5881,  1990,  1991,  2106,  2963,  2963,  1481,  1481,  5084,  2107,
    2103,  2103,  3551,  5353,  2107,  5354,  4426,  1992,  2104,  2104,
    5361,  5373,  2292,  5374,  1993,  2106,  2106,  2105,  2105,  2107,
    5252,  3556,  5398,  1994,  5399,  3557,  1995,   818,  2106,   818,
    2143,  5416,  3672,  5417,  6162,  1922,  1922,  1922,  3667,  1996,
    2107,  3673,  2145,  5519,  2106,  4367,  5659,  1999,  4719,  4652,
    3994,  2152,  2107,  3999,  3994,  2000,  2106,  3999,  5782,   627,
    5783,  1921,  1921,  1921,  3560,  2001,  5801,  3671,  5966,  2103,
    2008,  5253,  5075,  5076,  5972,  5973,  5807,  2104,  3561,  3562,
    2103,  5344,  3565,  3567,  4295,  5825,  2105,  5826,  2104,  2107,
    3756,  3997,  1920,  1920,  1920,  2009,  2010,  2105,  6096,  4769,
    2107,  1481,  2011,   786, -2300,  3757,  5831, -1312,  5826,  2147,
    3998, -1312,  2014,  -898,  3998,  1918,  1925,  3569,  1930,  1931,
    1932,  2015,  2107,  2107,  5832,  1935,  5826,  2106,  5882,  4296,
    4367,  3622,  5883,  2461,  4367,  2107,   787,   628,  6035,  2016,
    6036,  2106,  4166,  2106, -2526,  6066,  5331,  6067,  2017,  2151,
    2528,  2107, -1312, -2300,  2161,  2535,  1763, -1312,  2162,  1457,
   -3565,  2018,  2019,  2107,  1403,  1403,  2103,  5768,  2239,  2020,
    -708,  2100,   519,  4191,  2104,  2106,  2106,  6075,  2098,  6076,
    2723,  2724,  5476,  2105,  5477,  2431,  5478,   629,  5479,  2021,
   -1312,  2536,  4297,  6110,  6234,  4423,  6235,  5178,   800,  3664,
    4202,  2160,  5392,   818,   818,  1919,  1919,  1919,  6271,  2537,
    5111,  3670,  2240, -2298,  2241,  2022,  1269,  3570,  3572,  2023,
    2025,  4865,  4866,  3997,  2026,  4867,  4868,  3997,  2103,  2163,
    3579,  4869,  4870,   818,  2107,  4298,  2104,  4280,  2198,     4,
       5,  2521,  5949,  3593,  2106,  2105,  2103,  6272,  2107,  5374,
    2107,  6279,   542,  6280,  2104,  2106,  4247, -2300,  4249,   519,
    2168,  4576, -2298,  2105,  2753,  2194,   548,   517,  6288,  4817,
    6289,  2027,   544,  6320,  2028,   549,   788,  2032,  1250,  1250,
     543,  2033,  2107,  2107,  1245,  1245,  4315,  1251,  1251,   492,
    2872,   493,  1242,  1242,   494,  2035,   573,   514,   567, -2300,
    2036,   547,   800,  2394,  4585,  2037,  4340,  2242, -2300,  4586,
    2038,  2039,  5565,  1249,  1249,  2195,  6305, -2300,  5826,  2040,
    2041,  4705,  4706,  4131,  2042,  4707,  6097,  4708,  2043,  4709,
    5237, -2300,   546,  2754,  6307,  4587,  5826,  6308,   639,  5826,
    4598,  2106,  4592,  2044,  1248,  1248,  2045,  6098,  5930,  2046,
    2047,  2107,  6223,  2216,  6338,  4593,  5826,  2243,  6348,  6376,
    5826,  5374,  2107,  2048,  2199,  5949, -2298,  2234,  6454,  2395,
    6455,  2049, -1876, -1876,  5801,  2050,  2200,   810,  4594,  4595,
    2396,  2051,   800,   630, -1876,  2054,  2055,   631,  2397,  -710,
    2056,  2057,  5235,  2058,   800,  4299,  4300,  4301,   800,  2755,
    2059,  2756,  2060,  2106,   818,  2244,  2061,  2757, -2298,  2062,
    2063,  2235,  2928,  2064,  2236,  2398,  4077, -2298,  2066,  2669,
    4596,  2106,  2067,  2068,  2103,  4825, -2298,  2069,  2071,  2072,
    2073,  2201,  2104,  2074,  2103,  2075,   818,   818,  6140,  2202,
   -2298,  2105,  2104,  -710,  2076,   545,   765, -1876,  2107,  2077,
    5006,  2105,  2080,  2963,  4607,  1481,  2237,  4604,   650,  4495,
    2081,   632,  3756,  4972,  4762,  2084,  3271,  3272,  2758, -3565,
    4605,  2399,   818,  2085,  2203,  4613,  2086,  3757,  2087,  2088,
    2089,  3284,  2090,  3286,  5950, -1876,  2091,  2146,  4449, -1876,
    4619,  5951,  2197, -1876,  1824,  2245,  2256,  2257,  2266,  2400,
     786,  2269, -1876, -1876, -1312,  2270,  5952,  2280, -1312, -1876,
    2107,  4620,  2759, -1876,  2292,   651,  2324,  2246, -1876,  4133,
   -1876,  5052,  2334,  4628, -1876,  2340,  2336,  2346,  2107,  3995,
    2347, -2270, -1876,   787, -1876,  2353,  4310,  2354,  2356, -1876,
    6077,  2358,  -710,  2362,  5255,  2379,  2380,  2381,  2383, -1312,
    2392,  2404,  1816,  2403, -1312,  1821,  2407,  2417,  2423, -1876,
    4629,  4506,  2433,  2434,  6459,   548, -1312,  2444,  2457, -1876,
    2458,   544, -1876,  2467,   549,  2471,  2474,  3287,  3288,   767,
    2486,  2490,   800,  2496,   652,  2538,  2502, -1312,  2516,  2525,
    2204,  2529, -1876,  4632,  4636,  2521,   653,  3996,  2550,  2106,
     547,  2573,  2448,   818,   818,  2760,  5003,  5950,   800,  2106,
    -710, -1876,  1820,  2557,  5951, -1876,  2761,  2205,  2103,  4547,
    2566,  2588,  5336,  2574, -1876,  2595,  2104,  2582,  6378,  5952,
    2590,   546,  2591,  2596,  5342,  2105,  5953,  2598,  6182,  2604,
    2608,  2612,  2623, -1876,  2625,  4415,  4416,  4417,  4418,  5954,
    4420,  4421,  5256,  2610, -2270,  1922,  2615,  2627, -1876,   654,
    2629,  2628,  2631,  2632, -1876, -1876,  2678,  5955,  2659,  2667,
    2680,  5732,  5733,   788,  5735,  2682,  2683,  2684, -1876,  2686,
   -1876,  1921,  2687,  6208,  2689,  2690,  2693,  2704,  4464,  4465,
    2705,  4467,  2706,  4469,  4470,  4471,  4472,  4473,  4474,  4475,
    2715,  4477,  5237,  1209,  2722,  4486,  2107,  2733,  2737,  2765,
    2778,  2779,  1920,  4135,  2791,  2797,  2107,  2780,  2793,  5351,
    2796,  5352,  4634,  2849,  2854,  1819,  2858,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,  2868,  2883,
    6276,  2879,  2898,  2902,   545,  2929,  2930,  2954,  5179,  2955,
    2960,  1542,  2961,  5356,  5357,  2967,  2978,  4668,  6284,  5953,
    2103,  2986,  1210,  2983,  3005,  3006,  6467,  3313,  2104,  3007,
    1376,   818,  5954,   800,  3032,  5654,  5016,  2105,   818,   818,
    4610,  4686,  3047,  3048,  4689,  4690,  3326,  3049, -2300,  5017,
    5955,  3050,  1290,  2106,  3052,  3331,  4391,  3053,  3054,  3059,
   -2118,  3333,  3069,  3072,  3073,  5018,  3075,  5956,  3078,  3345,
     655,  3079,  3080,  2206,  3089,  3081,  3082,  3090,  3355,  3099,
    3100,  3357,  5795,  3101,  3102,  1919,  3104,  1037,  3103, -1876,
    3106,  3107,  3113,  5976,  3114,  5019,  3117,   656,  3118,  3122,
    4739,  3127,   519,   519,  3136,  3133,  3141,  3164,  3181,  3167,
    3182,  5146,  5147,  5148,  5149,  5150,  5151,  5152,  5153,  5154,
    5155,  3168,  5157,  5158,  5159,  5160,  5161,  5162,  5163,  5164,
    5165,  5166,  3169,  3170,  5170,  5171,  6276,  3173,  3183,  3198,
    3191,   800,  5889,   818,  5890,  5891,   800,   800,  3195,  3196,
    3199,  2207,  6284,  3212,  3211,  2103,  3215, -2298,   958,  2208,
    2107,  3216,   810,  2104,  3229,  6352,  1057,  4776,     4,     5,
    3243, -2537,  2105,  3244,  5020,  1290,  5238,   800,   800,  3252,
    1211,  3253,  1212,     9,  4851,  3257,  3258,  4931,  3263,  3259,
    5956,  3294,   959,  1213,  5194,  2106,  6403,  6404,  3297,  2576,
    6405,  5195,  6406,  5196,  3332,  3324,  3356,  3351, -1876,  1214,
    3358,  3371,  3376,    13,  2742,  2743,  2744,  2745,  3372,  3380,
    -898,  1431,  -898, -1312,  3383,  3385,  4685,  3386,  3393,  4426,
    3399,  5260,  3396,  3417,  3440,  5021,  5270,   -73,   960,  3441,
    3458,  3466,    19,  3461,  6448,   961,  3463,  3464,  2460,  3483,
    4014,  3475,  4743,  3476,  3477,  1071,    22,  3480,  6458,  3491,
    2746,  2747,  2748,  3498,  6448,  5987,     4,     5,  3585,  3481,
   -1449,  6458,   962,   712,  3502,  3505,  5294,  3514,  3555,   657,
     963,  3515,  3517,  3518,  5239,  3519,  3558,   712,  3520,  3573,
    3524,  3604,    27,  3532,  4777,  3537,  3548,   658,  3559,  3564,
    -735,  3566,  2107,  3610,  3577,  3578,  3580,  3970,  3626,  3584,
    3592,  2749,  2750,  3597,  2137,  3617,   964, -1624,  3619,  3633,
    6003,  3638,  2052,  3437,  2078,  4015,  2082,  3643,  4965,  3641,
    2106,  4967,  3644,  3646,  3647,  3650,  3654,  3655, -3532,  3676,
    4818,  3691,  3656,   659,  4973,  3694,  6004,  3695,  3696,  3699,
    5022,   519,  5023,  3719,  3707,  3703,    38,  3723,  3733,   517,
    3736,   965,   966,  5425,  4779,  4744,   519,  3704,  3737,  4989,
    3743,   660,  3761,  4745,  3762,  2751,  3790,  5629,  3792,   661,
    3794,  3793, -1876,  3797,  5550,  3798,  3830,  3837,  4746,  3841,
    3855,  3862,  2394,  3870,  1215,  2670,  3866,  3874,  4747,  4748,
    4749,  2394,  3873,  5682,  5987,     4,     5,  -934,  4750,  3881,
    3882,  3883, -1876,  3884, -1876,  3886,  3887, -1876, -1876,  3888,
    3925,  4780,  4781,  4782,  3230,  3928,   712,  3931,    49,   713,
    3935,  3940,  3941,  3942,  5987,     4,     5,  2107,  2752,  3943,
    3967,  4783,  3944,   713,  3945,  3946,  3947,  3948,  6005,  3949,
    6006,  3994,  5042,   764,  3999,  3950,   712,  3951,  2395,  6003,
    3952,  3953,  5538,  3954,  3231,  3955,  3956,  2395,    82,  2396,
    3957,  3958,  5988,  5407,  3959,  3960,  5432,  2397,  2396,  3974,
    4686,  3961,  3962,  3963,  3964,  6004,  2397,  3981,  5448,  6003,
     967,  3982,  4004,  4668,   765,  3975,  4784,   818,  4785,  4006,
    5073,  3232,  5024,  5025,  2398,  3976,  5553,  3977,   799,  5450,
     766,  3998,  3978,  2398,  3842,  6004,  -898,  3980,  4786,  4021,
    4025,  4028,  4027,  4846,  4031,  2511,  4041,  4043,  4044,  4045,
    2872,  4046,  4047,  4051,  4055,  2753,  4787,  4056,  4057,  5098,
    5989,  4058,  4071,  4788,  5099,  4103,  -934,  4104,  4105,  4751,
    4118,  5109,  4119, -1667,  4120,  4126,   519,  4140,  4789,  4178,
    2399,  4752,  4177,   968,  4179,  4192,  4193,  4164,  4790,  2399,
    4165,  4208,  4214,  1824,  4210,  4216,  -934,  4198,  4199,  4200,
    3627,  4218,   713,  4791,  4217,   800,  4221,  6005,  2400,  6006,
    4222,  5141,  4226,  2989,  6007,   800,  4227,  2400,  2988,  4234,
    1216,  1217,  1218,  1219,  2754,  4235,  3364,  4259,  1817,  4273,
    3843,  5988,   713,  3406,  4274,  4279,  4278,  6005,  5169,  6006,
    3233,  4285,  4291,  4292,  3997,  4311,  4283,   767,  4318,  4324,
    4326,  5920,  3234,  4328,  5990,  4329,  4330,  4356,  4357,  4360,
    4792,  5988,  4361,  4384, -2021,  4397, -2068,  4753,  4388,  5674,
    4793,  4398,  1824,  5679,  5680,  4429,  4430,  4431,   768,  4447,
    4451,  5026,  4754,  4457,   867,  4685,  3845,  4501,  4507,  4458,
    2755,  4510,  2756,  4459,  4511,  2928,  1818,  4461,  2757,  5989,
    4517,  4522,  4529,  5630,  3381,  5072,  5631,  3995,  4794,  4524,
    4530,  4542,  4550,  4552,  4559,   818,  4560,  4566,  4624,  4569,
    4755,  4795,   969,  4570,   627,  4571,  4572,  1329,  4635,  5989,
    4637,  4647,  4659,  4651,  4756,  1178,  6008,  4661,  4648,  4662,
    1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,  1013,
    1014,  4671,   868,  6007,  4669,  3235,  4672,  4675,  4680,  2758,
    4673,  4796,  4676,  5141,  4694,  4695,  5991,  4797,  4700,  4713,
    4718,  4719,  4720,   810,  4731,  3996,  1418,  4734,  5298,  4740,
    4742,  4761,  4765,  6007,  4766,  4768,  4771,  4820,  4828, -1787,
    3789,   519, -1792,  5990,  4849,  4854,  4857,  4863,  6155,  5311,
    4873,  4858,   628,  2759,  4864,  4891,  4936,  4878,  4944,  4963,
    4968,  4969,  4959,  4974,  4994,  4982,  4997,  5000,  3305,  5543,
    5544,   519,  5546,  5990,  5009,  4798,  3236,  5551,  4998,   802,
    5555,  5010,  4799,  5558,  5559,  5044,  3589,  4642,  5053,  4374,
    1037,  5567,  6427,  5568,  5055,  5056,  5059,  5061,  1179,  5060,
    2938,  1922,  5574,  5065,  5078,  5079,  1180,  5092,    50,  5110,
    5111,  5115,  5116,  5117,  4800,  4014,  5118,  5119,  5142,  5122,
    5143,  1181,     4,     5,  5186,  5187,  3863,  1921,  5144,  4801,
    4802,  1182,  1183,  1184,  5156,  4902,  5190,  -256,  5191,  5192,
    5199,  1185,  4803,  5201,  5215,  2925,  2760,  4668,  5226,  5228,
    5229,  5230,   867,  5246,  5248,  5991,  5237,  2761,  1920,  5261,
    2295,  5262,  5271,  5272,  5273,  5274,  5275,  5836,  5276,  1057,
    5278,  2176,  5279,  4508,  5280,  5281,  5282,  5289,  5292,  5295,
    5869,  5303,  6009,  5296,  5313,  5991,  5310,  2872,  5314,  6328,
    4015,  5317,  5318,  5321,  4931,  5323,  5326,   519,  4739,  5339,
    5488,  5340,  5327,  5341,  1910,  5389,  5345,  5175,  5328,   818,
    5335,  5347,  5141,  5350,  5415,  5359,  5360,  5362,  5368,  5376,
     868,  5384,  5386,  5387,  5388,  5400,  5396,  5395,  5405,   800,
    1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,  1013,
    1014,  5408,  5430,  5503,  5409,   818,  5505,  5512,  5511,  5513,
    5516,  5523,  5518,  5524,  5525,  5526,  5534,  5533,  1071,  5535,
    1824,  5536,  5539,  5627,  5552,  5484,  -710,  5541,  3970,  5235,
    5556,  1919,  5557,  5614,  4445,  5992,  3970,  5589,  5591,  5593,
    5618,  5612,  1186,  5620,   769,  5616,  5621,  5637,  5623,  5658,
    5626,  5671,  5640,  5663,  1187,  3995,  5652,  5653, -2068,  5664,
    5675,  5667,  -166,  5670,  5672,  5687,  5689,  5691,  5714,  5545,
    5712,  5716,  5715,  5718,  4490,  5725,  5729,   867,  5726,  5739,
    -710,  6009,  5141,   765,  5562,  5734,  5736,  5737,  5741,  5413,
    1037,  5752,  5758,  5759,  5572,  5109,  5109,   800,  6147,  3756,
    5763,  5575,  5769,  5576,  5577,  5251,  5774,  5561,   659,  2872,
    5417,  6009,  5789,  5802,  3757,   865,   800,  5571,  5796,  5803,
    5797,  5804,  5109,  3996,  5806,  5809,  5824,  5840,  5828,  5109,
     904,  6463,  5628,  2296,  5141,  5820,   770,  5756,  5418,  5830,
    5629,  5834,  6147,  5856,  1172,   868,  5893,  5895,  5846,  5597,
    5403,  5850,  5862,  5864,  5892,  1188,  5903,  5905,  5904,  5911,
    5912,  5922,  5921,  5913,  1299,  5918,  5923,  5929,  5931,  1057,
    5935,  5236,  5944,  5968,  5992,  5945,  5948,  5969,  5974,  -710,
    6016,  4776,  5980,  6038,  6039,  6034,  5446,  5447,  6040,  6041,
    6046,  1172,  6047,  1189,  6048,  6051,  5460,  6062,  6068,  6060,
    1922,  6069,  6072,  6064,  5992,  6065,  6078,  1190,  6082,  6085,
    5483,  6093,  6090,  6127,  6107,  6109,   767,  6129,  6121,  6131,
    6132,  6133,  5644,  5509,  6135,  6137,  1921,  6138,  6151,  6139,
    6152,  6153,  6154,  3847,  5098,  5651,  6159,  6161,  6195,  6188,
    6210,  6224,  6239,  5109,  6229,  6245,  6231,  -710,  6147,  6232,
    6250,  6251,  5662,  6242,  6258,  5662,  5662,  1920,  1071,  6262,
    5668,  6263,  6264,  6267,  5141,  6270,  6273,  4904,  4176,  4899,
    6295,  6298,  5678,  6309,  6301,  6324,  6310,  5686,  6319,  6379,
    6329,  6327,  6332,  2297,  6382,  6387,  2923,  6395,  6391,  6392,
    6393,  6401,     4,     5,  6402,  6409,  6414,  2298,  6418,  2299,
    1816,  6419,  6420,  1821,  6422,  6425,  6426,  6428,  1172,  5743,
    6423,  5745,  6083,  6084,  6424,  6086,  6087,  6088,  6089,  2277,
    6434,   904,  6449,  6462,  6435,  2285,  1814,  4239,  5590,  3760,
    2295,  2300,  4488,  5603,  5601,  6460,  4333,  5971,  5719,  5237,
    4872,  5602,  6032,  6168,  2301,  6322,   865,  2472,  2965,  4505,
    5506,  4960,  1397,  4500,  5394,  4964,  5698,  2946,  3365,  5701,
    1820,  5744,  3771,  3845,  4758,  3845,  4546,  4526,  3261,  1509,
    1919,  3450,  5628,  5853,  3451,  5852,  3452,  2302,  5765,  3994,
    5629,  5693,  3999,  4918,  2923,  5285,  5064,  5639,  5070,  5369,
    5747,  5141,  5109,  5141,  3631,  2303,  6194,   818,  5141,  5810,
    5109,  6278,  6381,  6336,  6092,  5141,  5141,  5808,  1418,  5109,
    3877,  2462,  5283,  5542,  5766,  5141,  5700,  6018,  5584,  5669,
    5288,  5141,  5109,  5746,  5109,  1917,  1917,  5424,  1917,  1917,
    1917,  6356,  5775,  6249,  6253,  1917,  6184,  6173,  6174,  3998,
    6175,  6176,  5028,  4991,  6202,  2541,  5630,  6205,  6255,  5631,
    4558,  4005,  5787,  6192,  3314,  6213,  4639,  5047,  6216,  5798,
    6386,   800,  5049,  5045,  5688,   772,   773,  6349,  5978,  6350,
    6209,  6228,  4325,  1819,  2304,  4317,  6221,  6226,  5898,  5742,
    5690,  2305,  3330,  1172,  4770,  6321,  5740,  1172,  5286,  5582,
    2481,  2306,  4931,  2473,  2660,  3137,  4309,  6058,  4307,  3934,
    2872,  5874,  6190,  5874,  2485,  2307,  5902,  3296,  4215,  4539,
    5662,  1172,  3752,  4981,  5833,  4052,   801,  2393,  2442,  4180,
    1172,  5838,   800,  1426,  4266,  5315,  5141,  5141,   758,  5699,
    2441,  2165,  4387,  4223,  5058,  4143,   800,  2308,  4664,  4141,
    2309,  2866,  2926,  2296,  2767,  4579,  5332,  2777,  6171,  6323,
     519,  2712,  3997,  5238,   672,  6413,  2310,  6411,  3190,  2385,
    3187,  2386,  3970,  2387,  2388,  2390,  5731,  5522,   810,  5089,
     810,  6179,  5880,  5397,  5698,  6180,  3857,  5701,  2721,  3180,
    3201,  4658,  4383,  5219,  5218,  4419,  6071,  2311,  4657,  5910,
    5634,  5383,  5625,  2436,  6291,  4390,  5334,  5141,  4386,  1172,
    1172,  1172,  1172,  5141,  5647,  5907,  1449,  2450,  5038,  5224,
    2872,  3849,  1172,   783,  4023,  1311,  2276,  6001,   774,  5109,
    4460,  6001,  4462,  4463,  3409,  4050,  4980,  5102,  4468,  4412,
    5924,  5928,  5402,  5088,  5700,  5821,  4476,  5085,  1838,  3379,
    4484,  6377,  4487,  1844,  1295,  5874,  3725,  5874,   872,  3038,
    1296,  3726,  4260,  2443,  1298,  3765,  5943,  5851,  3125,  5657,
    4985,  5239,  6380,  2665,  5527,  6415,  5738,  5042,  6335,  6461,
    1962,  4048,  6465,  5662,  3740,  5649,  4251,  4072,  4252,  1253,
    4253,  5975,  3690,  5141,  1254,  6466,  5630,  3457,  4244,  5631,
    4245,  3147,  4248,  2297,  4693,  3438,  1208,  6015,  2159,  5632,
    4879,  2966,  2653,  3924,  4219,  2654,  2180,  2298,  6026,  2299,
    6027,  5227,   810,  5320,   810,  4327,  5790,  3994,  4932,  1345,
    3999,  2339,   792,   776,  1959,   777,   778,  1939,  4978,  4549,
    3453,  6259,  6053,   548,  1951,  1941,  5104,  6260,  6364,   866,
    5141,  2300,   871,  4819,  4334,  5858,  5859,  5699,  5863,  5855,
     800,  5854,   818,  1832,  2301,  5723,  2593,     0,  6054,  5141,
     800,  1952,     0,     0,     0,     0,     0,  6001,   547,     0,
       0,     0,  2007,     0,     0,     0,     0,  3998,     0,     0,
       0,     0,     0,     0,  6001,     0,     0,  2302,     0,     0,
       0,  1172,     0,     0,  2315,     0,     0,     0,     0,   870,
       0,     0,     0,     0,     0,  2303,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  6108,     0,     0,     0,
    6451,  6120,     0,     0,     0,  6453,     0,  6126,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2597,     0,  2597,     0,     0,     0,     0,     0,
     818,   958,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   958,  2102,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     9,     0,   800,     0,
       0,     0,     0,  5880,  2304,   959,     9,  4739,  4739,     0,
    3997,  2305,     0,     0,     0,   959,     0,     0,     0,     0,
       0,  2306,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,   869,     0,  5928,  2307,    13,     0,     0,     0,
       0,     0,     0,  5943,     0,     0,     0,     0,     0,  6001,
       0,   960,  1172,     0,     0,    19,   818,     0,   961,     0,
       0,   960,     0,     0,     0,    19,     0,  2308,   961,    22,
    2309,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,  2182,     0,     0,   962,  2310,     0,  6230,  1172,
       0,     0,     0,   963,     0,   962,  5662,     0,  5662,  5662,
       0,     0,   673,   963,     0,    27,     0,     0,     0,     0,
       0,     0,     0,     0,  2100,    27,     0,  2311,     0,     0,
       0,  2098,     0,     0,     0,     0,     0,     0,     0,   964,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   964,
       0,     0,  6134,     0,     0,     0,     0,  6001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2872,  5874,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,  2323,     0,   965,   966,     0,     0,     0,    38,
     818,     0,     0,     0,   965,   966,     0,   958,  2845,     0,
       0,     0,     0,  2850,     0,     0,     0,     0,  5662,  5662,
       0,     0,  6302,  2860,  6001,  6001,     0,     0,     0,  5662,
    4931,     0,     9,     0,     0,  6362,  6362,     0,     0,     0,
       0,   959,     0,     0,     0,     0,   810,     0,     0,     0,
       0,     0,  4880,  4881,  4882,  6203,  6204,     0,     0,     0,
       0,    49,    13,     0,     0,     0,  6001,  6215,     0,     0,
       0,    49,     0,     0,   818,     0,  4951,  4954,     0,  4957,
       0,     0,     0,     0,     0,     0,     0,   960,  5662,     0,
       0,    19,     0,  2432,   961,     0,  2432,     0,     0,     0,
       0,    82,  6361,  6361,  2958,    22,     0,     0,     0,     0,
       0,    82,  4931,     0,  2872,     0,     0,     0,     0,     0,
       0,   962,     0,   967, -1820, -1820,     0,     0,     0,   963,
       0,     0,     0,   967,     0,     0, -1820,     0,     0,     0,
       0,    27,     0,     0,     0,     0,     0,     0,  3012,     0,
       0,     0,     0,  3018,     0,  3020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   964,     0,     0,     0,     0,
       0,  2669,     0,     0,  6285,     0,     0,  6286,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1937,
       0,     0,     0,     0,     0,     0,   968,     0,     0, -1820,
       0,     0,  3055,     0,     0,    38,   968,     0,     0,     0,
     965,   966,     0,     0,  3065,     0,     0,     0,     0,     0,
       0,     0,  2872,     0,     0,     0,   818,     0,     0,     0,
       0,   818,     0,     0,     0,     0,  2872, -1820,     0,     0,
       0, -1820,  2872,     0,  4484, -1820,     0,     0,     0,  2872,
       0,     0,     0,     0, -1820, -1820,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1820,  5050,     0,     0,     0,
   -1820,     0, -1820,     0,     0,     0, -1820,    49,     0,     0,
       0,     0,     0,     0, -1820,     0, -1820,     0,     0,     0,
       0, -1820,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1172, -1820,  1172,     0,     0,     0,     0,    82,     0,     0,
    3153, -1820,     0,     0, -1820,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   969,     0,     0,  1418,   967,
       0,     0,     0,     0, -1820,   969,     0,     0,     0,  1418,
    1418,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1820,     0,     0,     0, -1820,     0,     0,
       0,  1172,  1172,     0,     0,     0, -1820,  1172,     0,     0,
       0,  1172,  1172,  1172,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,  1172,     0, -1820,     0,     0,  1172,     0,
       0,     0,  1172,  1172,  1172,     0,  1172,  1172,  1172,     0,
   -1820,     0,   968,     0,     0,     0,  1172, -1820,  1172,     0,
       0,  1172,  1172,  1172,  1172,     0,  1172,  3248,  1172,  1172,
   -1820,     0, -1820,  3251,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,  1172,  1172,  1172,  1172,  1172,     0,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,     0,
    1172,  1172,  1172,  1172,  1172,     0,  1172,  1172,     0,  1172,
    1172,  1172,     0,     0,  1172,  1172,  1172,     0,  1172,  1172,
    1172,     0,  1172,     0,  1172,     0,  1172,  2158,     0,     0,
    1172,  1172,  1172,     0,     0,  1172,  1172,  1172,  1172,  1172,
       0,  1172,     0,     0,     0,     0,     0,     0,  1172,     0,
       0,     0,     0,     0,  1172,  1172,  1172,  1172,     0,     0,
       0,     0,     0,     0,     0,  1172,  1172,     0,  1172,  1172,
       0,     0,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1172,  1172,  1172,     0,     0,  1172,     0,     0,
       0,   969, -1056, -1056,     0,     0,     0,     0,  2657,     0,
       0,     0,     0,     0,  4776,     4,     5,     0,     0,     0,
       0,     0, -1876, -1876,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,     0, -1876,  3401,  3401,     0,     0,     0,
       0,     0,  4892,     0,  4893,  4894,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3416,     0,     0,  4895,     0,  4896,  2669,
       0,     0,     0,  1910,  4897,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2460,     0, -1876,     0,     0,
       0,  2007,     0,     0,     0,     0,  4898,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2776,  2007,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1876,     0,     0,     0, -1876,
       0,  4777,     0, -1876,     0,     0,     0,     0,     0,  1172,
   -1820,  1172, -1876, -1876,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1876,     0,     0,     0,     0, -1876,  4899,
   -1876,     0,     0,     0, -1876,     0,     0,     0,     0,     0,
       0,     0, -1876,  4774, -1876,  4775,  1172,     0,     0, -1876,
    4776,     4,     5,     0,     0,     0,     0,     0,     0,     0,
    4900,     0,  4901,     0,     0,     0,     0,     0,     0, -1876,
       0,  4779,     0,  4902,  5434,  5437,  5439,  5441,     0, -1876,
    5444,  5445, -1876,     0,     0,  5449,     0,     0,  5455,     0,
       0,  5459,     0,     0,  5434,     0,  4903,     0,  5470,  5434,
       0,     0, -1876,  -898,     0,  -898,  3563,     0,     0,     0,
       0,  3568,     0,     0,     0,     0,     0,     0,     0,  2931,
       0, -1876,     0,     0,     0, -1876,  2007,     0,  4780,  4781,
    4782,  2460,     0,  1172, -1876,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4783,     0,
       0,     0,     0, -1876,     0,     0,     0,     0,     0,     0,
       0,  1172,     0,     0,     0,     0,     0,  2998, -1876,  1172,
       0,     0,     0,     0,     0, -1876,     0,  4777,     0,     0,
       0,     0,     0,     0, -1820,     0,     0,     0, -1876,     0,
   -1876,     0,     0,     0,     0,  4904,     0,  2670,     0,  4778,
       0,     0,     0,  4784,     0,  4785,     0,     0,     0,     0,
       0,     0,     0,     0, -1820,     0, -1820,     0,     0, -1820,
   -1820,     0,  3401,  3401,     0,  4786,     0,     0,     0,     0,
       0,     0,  4905,  4951,     0,  4954,     0,  4957,     0,     0,
       0,     0,     0,  4787,     0,     0,     0,  4779,     0,     0,
    4788,     0,     0,     0,  1527,  1528,     0,     0,     0,  1532,
    1533,     0,     0,     0,     0,  4789,     0,     0,     0,  1542,
       0,     0,     0,     0,     0,  4790,     0,     0,     0,  4906,
    4907,     0,     0,   904,     0,     0,  4908,     0,  5624,     0,
    4791,     0,  2007,     0,  1565,     0,     0,     0,  4909,     0,
       0,     0,     0,     0,  4780,  4781,  4782,  1578,     0,     0,
       0,     0,     0,  3729,     0,  2742,  2743,  2744,  2745,  4910,
       0,     0,     0,  1593,  4783,  6172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3753,     0,
       0,     0,     0,  4911,     0,     0,     0,  4792,     0,     0,
       0,     0,     0,  1617,     0,     0,     0,  4793,     0,     0,
       0,  2746,  2747,  2748,     0,     0,     0,     0,     0,     0,
       0,     0,  1636,  1637,  1638,     0,     0,     0,  1172,  4784,
       0,  4785,  1646,  1647,  1648,     0,     0,     0,  3421,     0,
       0,     0,     0,     0,     0,  4794,  2432,     0,  3210,  -898,
    1663,  4786,     0,     0,     0,     0,     0,     0,  4795,  3812,
    4912,   904,  2749,  2750,     0,   865,     0,     0,  3821,  4787,
       0,     0,  1172,  1418,     0,     0,  4788,     0,     0,  1418,
    1172,  1172,  1692,     0,     0,     0,     0,     0,     0,     0,
       0,  4789,     0,     0,  1418,     0,     0,     0,  4796,     0,
       0,  4790,     0,     0,  4797,     0,     0,     0, -1876,  1719,
       0,     0,  4776,     4,     5,     0,  4791,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2751,     0,     0,  4913,
       0,     0,  1741,  1742,  1743,  1172,     0,     0,     0,     0,
    4914,  4915,  4916,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1762,  1763,     0,     0,     0,     0,
       0,     0,  4798,     0,     0,  -898,     0,  -898,     0,  4799,
       0,     0,     0,  4792,     0,     0,  1172,  1172,  1172,     0,
       0,     0,     0,  4793,     0,     0,     0,     0,     0,  2752,
       0,     0,     0,  2460,     0,     0,     0,     0,     0,     0,
       0,  4800,     0,  1777,     0,  1778,  1779,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4801,  4802,     0,     0,
       0,  4794,  1780,     0,     0,     0,     0,     0,     0,  4803,
       0,     0,     0,  4917,  4795,     0,     0,     0,     0,  4777,
       0,     0,     0,     0,     0,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,  3264,     0,     0,     0,  1781,     0,
    1782,     0,     0,     0,     0,  1172,     0,     0,     0,  1172,
    1172,     0,  1172,  1172,  4796,     0,     0,     0,     0,     0,
    4797,  1172, -1876,  1172,     0,     0,  2753,  1418,  3265,     0,
    4033,     0,     0,     0,     0,  2670,     0,     0, -1056,     0,
       0,     0,     0,     0,     0,     0,     0,  1784,     0,  4779,
       0,  1172, -1876,     0, -1876,     0,     0, -1876, -1876,     0,
       0,     0,     0,     0,     0,  3266,     0,     0,  3459,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,  4798,     0,
       0,  3663,     0,     0,     0,  4799,     0,     0,  1785,  1172,
       0,     0,     0,     0,     0,  2754,     0,     0,     0,     0,
       0,     0,  1172,     0,     0,     0,  4780,  4781,  4782,     0,
       0,     0,     0,  1172,     0,     0,     0,  4800,     0,     0,
       0,     0,     0,     0,     0,     0,  4783,     0,     0,  1172,
       0,     0,  4801,  4802,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2007,  3500,  4803,     0,     0,     0,     0,
    1786,  1787,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2755,     0,  2756,     0,     0,  1172,  1788,  1789,  2757,
       0,     0,     0,  1172,     0,     0,     0,     0,     0,     0,
       0,  4784,     0,  4785,     0,     0,   958,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  -898,     0,  4786,     0,     0,     0,     0,     0,  1791,
       0,     9,     0,     0,  2315,     0,     0,     0,     0,     0,
     959,  4787,     0,     0,     0,     0,     0,     0,  4788,     0,
    2758,     0,     0,  3582,     0,     0,     0,     0,     0,     0,
       0,    13,     0,  4789,     0,     0,     0,  3599,     0,     0,
       0,     0,     0,  4790,     0,     0, -3674, -3674, -3674,     0,
       0,     0,     0,     0,     0,     0,   960,     0,  4791,     0,
      19,     0,  1172,   961,  2759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,  2958,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     962,     0,     0,  1793,     0,  1172,  1794,     0,   963,  1795,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      27,     0,     0,     0,  1172,  4792,     0,     0,     0,  1172,
    1172,     0,     0,  1796,  3653,  4793,     0,     0,     0,     0,
       0,     0,     0,     0,   964,     0,     0,     0,     0,     0,
    2182,     0,     0,  1798,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,  2760,     0,     0,
       0,  3267,     0,  4794,     0,     0,     0,     0,  2761,     0,
       0,     0,     0,     0,    38,     0,  4795,     0,     0,   965,
     966,     0,  4277,     0,     0,     0,     0,     0,   908,     0,
       0,  3268,  3269,     0,  3270,  3271,  3272,  3273,  3274,     0,
    3275,  3276,  3277,  3278,  3279,  3280,  3281,  3282,     0,  3283,
    3284,  3285,  3286,     0,     0,     0,  4796,     0,     0,     0,
     909,     0,  4797,     0,     0,     0,     0,  2657,     0,     0,
       0,     0,     0,     0,  3993,     0,  1172,  1172,     0,     0,
       0,   911,     0,     0, -3674,     0,    49,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4351,     0,     0,     0,  2323,  2323,     0,     0,
       0,   913,     0,     0,  1418,     0,     0,     0,  1418,     0,
    4798,     0,     0,     0,     0,   914,    82,  4799,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3287,  3288,   967,     0,
       0,     0,     0,   916,     0,     0,     0,     0,     0,  4800,
       0,  4776,     4,     5,  6292,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4801,  4802,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4803,  1917,  1917,
    1917,     0,     0,     0,  3663,  1172,     0,     0,     0,  1172,
       0,     0,  1172,     0, -3674,  2432,  4096,  2432,  2432,  3869,
    4096,  1172,   917,     0,     0,     0,   918,     0,     0,     0,
    1172,   968,  1172,  1172,     0,  1172,  1172,  1172,  1172,     0,
    1172,     0,  1172,  1172,   919,  1172,     0,     0,   920,   921,
       0,     0,  2460,  1172,  1172,     0,     0,     0,  1172,  1172,
    1172,     0,     0,     0,     0,     0,     0,     0,  1172,  1172,
    1172,     0,  1172,     0,  1172,     0,  1172,     0,  1172,   922,
    1172,  1172,     0,     0,     0,     0,   923,   924,  1172,     0,
    1172,     0,  1172,  1172,  1172,   958,  1172,     0,  4777,  1172,
    1172,  1172,  1172,     0,     0,  1172,     0,     0,     0,     0,
       0,     0,  1418,     0,     0,     0,     0,     0,  1172,     0,
       9,  1172,     0,  1172,  1172,  1172,     0,     0,  1172,   959,
       0,     0,     0,     0,  1172,     0,     0,     0,  4540,     0,
       0,     0,     0,     0,  2640,     0,     0,     0,     0,     0,
      13,     0,  1172,     0,  1172,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,  4779,  1172,
     969,     0,     0,     0,  1172,   960,     0,     0,     0,    19,
       0,     0,   961,     0,  2641,     0,     0,     0,     0,     0,
       4,     5,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   962,
    2657,     0,     0,     0,     0,     0,     0,   963,  1256,     0,
    1257,     0,  1172,     0,     0,  4780,  4781,  4782,   679,    27,
    2642,     0,     0,     0,     0,  2643,  1172,   958,     0,     0,
       0,     0,  1225,     0,     0,  4783,  2644,  2645,     0,     0,
    1258,  1259,     0,   964,     0,     0,     0,     0,     0,     0,
    1260,     0,     9,     0,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,    15,    16,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,     0,     0,     0,
       0,     0,    13,    38,     0,     0,     0,     0,   965,   966,
    4784,     0,  4785,  4679,     0,     0,     0,     0,  1172,     0,
       0,     0,     0,     0,     0,     0,  1261,   960,     0,     0,
       0,    19,  4786,     0,   961,     0,  4776,     4,     5,     0,
    1262,     0,     0,     0,     0,    22,     0,     0,     0,     0,
    4787,     0,     0,     0,     0,     0,     0,  4788,     0,     0,
       0,   962,     0,     0,  5579,     0,  4893,     0,     0,   963,
       0,     0,  4789,     0,     0,    49,     0,     0,     0,     0,
       0,    27,  4790, -3837,     0,     0,     0,     0,  4895,     0,
    1172,     0,     0,     0,     0,  1263,  5580,  4791,     0,     0,
       0,     0,     0,     0,     0,   964,     0,  1264,     0,     0,
       0,  1172,  2646,     0,     0,    82,     0,  2460,     0,     0,
       0,  4767,  2647,     0,     0,     0,  4772,  4773,  5581,     0,
       0,     0,     0,  2648,     0,  4196,     0,   967,     0,  2649,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
     965,   966,  2007,     0,  4792,     0,     0,  1418,  1418,     0,
       0,     0,  1265,  4777,  4793,     0,     0,     0,     0,     0,
    2650,     0,     0,     0,  2651,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4899,     0, -3837,     0,     0,     0,     0,     0,     0,
       0,     0,  4794,  2652,     0,  1266,     0,     0,     0,     0,
     968,     0,     0,     0,     0,  4795,     0,    49,     0,  2998,
       0,     0,     0,     0,  4901,     0,  1267,     0,  1814,     0,
       0,     0,     0,  4779,     0,  1268,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   904,  1269,     0,
       0,     0,     0,     0,     0,  4796,     0,    82,  4903,  1270,
       0,  4797,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   967,
       0,     0,  1271,     0,     0,     0,     0,     0,     0,     0,
    4780,  4781,  4782,     0,     0,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4783,     0,     0,     0, -2270,  1272,  1172,     0,  1273,  4798,
    1274,     0,     0,     0,     0,     0,  4799,     0,  1917,     0,
       0,  1172,     0,     0,  1172,  4037,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1275,  1276,   969,
       0,     0,   968,  1277,  1278,     0,     0,  4904,  4800,     0,
       0,  1172,  1172,     0,     0,  4784,  1172,  4785,     0,     0,
    1279,     0,     0,  4801,  4802,     0,     0,     0,     0,     0,
    2432,     0,     0,     0,     0,     0,  4803,  4786,  1172,     0,
    1172,  1280,  1172,     0,  1172,     0,     0,     0,     0,     0,
     958,     0,     0,     0,     0,  4787,     0,     0,     0,     0,
       0,     0,  4788,  1281,     0,  1172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     9,     0,  4789,     0,     0,
       0,     0,     0,     0,   959,  1172,  1172,  4790,     0,     0,
    1172,  4906,  1172,     0,  1172,     0,     0,     0,  4908,  1172,
       0,     0,  4791,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   958,     0,     0,  1282,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     960,  4910,     0,  1283,    19,     0,     0,   961,     0,  1172,
       9,   969,  1284,     0,     0,  1285,  1286,     0,    22,   959,
       0,     0,     0,  1172,     0,     0,     0,  1172,     0,  4792,
    1287,     0,     0,     0,   962,     0,     0,     0,     0,  4793,
   -3665,     0,   963,     0,     0,  1172,     0,     0,     0,     0,
       0,     0,     0,     0,    27,     0,     0,     0,     0,     0,
       0,     0,  2432,     0,     0,   960,     0,  1288,     0, -3664,
       0,     0,   961,     0,     0,  1289,     0,  4794,   964,     0,
       0,     0,     0,    22,     0,  5121,     0,     0,     0,     0,
    4795,     0,  4912,     0, -3291,  5145,  1290,     0,     0,   962,
       0,     0,     0,     0,     0,     0,     0,   963,  4814,  4814,
       0,     0,     0,     0,     0,     0,     0,     0,    38, -3664,
       0,     0,     0,   965,   966,     0,     0,     0,     0,     0,
    4796,     0,     0,     0,     0,     0,  4797,     0,     0,     0,
       0,  1172,     0,   964,     0,     0,     0, -3291,     0,     0,
       0,  1172,  4591,     0,  1291,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,     0,  1172,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -3664,     0,     0,     0,     0,   965,   966,
      49,     0,     0,     0,  4798,     0,     0,     0,  4633,     0,
       0,  4799,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4814,     0,     0,     0,     0,     0,     0,     0,     0,
      82,     0,     0,  4800,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4801,  4802,
       0,     0,   967,     0,     0, -3664,     0,     0,     0,     0,
    4688,  4803,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -3665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4272,     0,
       0,     0,     0,     0,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,   968,  2323,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1172,  1172,
       0,  1172,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1172,  1172,  1172,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4096,     0,  1172,
     968,  1172,     0,  1172,     0,  1172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,  1172,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2432,     0,     0,     0,     0,     0,
       0,     0,  1172,     0,     0,     0,     0,     0,     0,  1172,
       0,     0,     0,     0,     0,     0,     0,     0,  1172,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5431,
       0,     0,     0,     0,   969,     0,     0,     0,  1172,     0,
       0,     0,     0,  1172,  1172,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,     0,     0,     0,  1172,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   969,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4814,  5569,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4814,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1172,  1172,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1917,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1172,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1172,
    1172,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1172,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4814,     0,  4814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,  1172,  1174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5839,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2432,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4814,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1172,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1917,     0,     0,     0,     0,  4196,     0,
       0,     0,     0,     0,  1172,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1960,     0,  1172,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,  1172,  1172,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,  1960,     0,     0,     0,     0,
    1174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1814,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    6050,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    6056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5697,     0,     0,     0,     0,     0,     0,  1174,
    1174,  1174,  1174,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,  3993,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  6167,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1172,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1172,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5697,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,  1960,     0,     0,  1960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4814,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4814,  3993,     0,     0,  4814,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,   865,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2657,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4814,     0,     0,     0,     0,
       0,     0,     0,  4814,     0,     0,     0,     0,     0,  4814,
    4814,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4814,     0,     0,     0,     0,     0,     0,     0,
       0,  6150,     0,     0,     0,     0,     0,     0,     0,  4814,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  6150,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4814,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4814,     0,     0,     0,  4814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1172,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4814,  6297,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,  4814,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4814,     0,  4814,  4814,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,  1174,     0,     0,  1172,     0,  1174,     0,  1172,
       0,  1174,  1174,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,  1174,  1960,  4814,     0,     0,  1174,     0,
       0,     0,  1174,  1174,  1174,     0,  1174,  1174,  1174,  1960,
    1960,     0,     0,     0,     0,     0,  1174,     0,  1174,     0,
       0,  1174,  1174,  1174,  1174,     0,  1174,     0,  1174,  1174,
       0,     0,     0,     0,  4814,     0,     0,     0,     0,     0,
       0,     0,  1174,  1174,  1174,  1174,  1174,  1174,     0,  1174,
    1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,     0,
    1174,  1174,  1174,  1174,  1174,  4814,  1174,  1174,     0,  1174,
    1174,  1174,     0,     0,  1174,  1174,  1174,     0,  1174,  1174,
    1174,     0,  1174,     0,  1174,     0,  1174,     0,     0,     0,
    1174,  1174,  1174,     0,     0,  1174,  1174,  1174,  1174,  1174,
       0,  1174,     0,     0,     0,     0,     0,     0,  1174,     0,
       0,     0,     0,  1172,  1174,  1174,  1174,  1174,     0,     0,
       0,     0,     0,     0,     0,  1174,  1174,     0,  1174,  1174,
       0,     0,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,  1174,  1174,  1174,  1174,     0,     0,  1174,     0,     0,
       0,     0,  1960,     0,     0,     0,     0,     0,     0,  1960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1174,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1141,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,     0,     0,  1960,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1506,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,  1174,     0,     0,     0,     0,     0,     0,     0,
    1174,  1174,  1971,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1998,     0,     0,     0,
       0,     0,     0,     0,     0,  2012,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1960,  1960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,  1174,  1174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2099,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
    1960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,  1174,
    1174,     0,  1174,  1174,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1174,
       0,     0,     0,  1960,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2293,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,     0,     0,     0,
    1960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
    1960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2455,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2494,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1960,     0,
    1960,  1960,  1960,     0,  1174,     0,     0,     0,     0,  1174,
    1174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,  1174,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,  1174,  1174,     0,  1174,  1174,  1174,  1174,     0,
    1174,     0,  1174,  1174,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,  1174,  1174,     0,     0,     0,  1174,  1174,
    1174,     0,     0,     0,     0,     0,     0,     0,  1174,  1174,
    1174,     0,  1174,     0,  1174,     0,  1174,     0,  1174,     0,
    1174,  1174,     0,     0,     0,     0,     0,     0,  1174,     0,
    1174,     0,  1174,  1174,  1174,     0,  1174,     0,     0,  1174,
    1174,  1174,  1174,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1174,     0,
       0,  1174,     0,  1174,  1174,  1174,     0,     0,  1174,     0,
       0,     0,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2663,     0,  2663,     0,     0,
       0,     0,  1174,     0,  1174,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,  1960,  1174,
       0,     0,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2711,     0,     0,     0,  2716,     0,  2718,     0,
       0,     0,  1174,     0,     0,     0,     0,  2734,  2735,     0,
       0,     0,     0,  2764,     0,     0,  1174,  2769,  2770,  2771,
       0,  2773,  2774,  2775,     0,     0,     0,     0,     0,     0,
       0,  2783,  1960,  2786,     0,     0,  2787,  2788,  2789,  2790,
       0,     0,     0,  2794,  2795,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2806,  2807,  2812,
    2814,  2815,  2816,     0,  2819,  1174,  2821,  2822,  2823,  2824,
    2827,  2828,     0,  2831,     0,  2832,  2833,  2834,  2835,  2836,
       0,  2842,  2843,     0,  2846,  2847,  2848,     0,  1174,  2851,
       0,  2853,     0,  2855,  2856,  2857,     0,  2859,     0,  2861,
       0,  2862,     0,     0,     0,  2865,  2812,  2867,     0,     0,
    2873,  2874,     0,  2876,  2877,     0,  2878,     0,     0,     0,
       0,     0,     0,  2882,     0,     0,     0,     0,     0,  2884,
    2885,  2886,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,     0,  2979,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3091,     0,  3096,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3119,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,  1174,     0,     0,     0,  1174,     0,  3197,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1174,     0,
    1174,     0,  1174,     0,  1174,     0,  3221,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,  1174,     0,     0,     0,
    1174,     0,  1174,     0,  1174,     0,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3410,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,  1960,  1174,     0,
       0,     0,     0,     0,     0,     0,     0,  3460,     0,     0,
       0,     0,     0,     0,     0,  3467,  3468,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3487,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3526,  3528,  3530,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1174,  1174,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
    3606,     0,     0,     0,  1174,  1174,  1174,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3614,     0,  3615,  1174,
       0,  1174,     0,  1174,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,  1174,     0,
       0,     0,     0,     0,     0,     0,  3637,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,  1174,
       0,     0,  3651,     0,     0,     0,     0,     0,  1174,     0,
       0,     0,     0,     0,  2455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2455,  1174,     0,
       0,     0,     0,  1174,  1174,     0,     0,     0,  3706,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,  3712,     0,  1174,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3732,     0,     0,     0,     0,     0,     0,  3096,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3851,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3851,
       0,     0,     0,     0,  2455,  2455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1174,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1174,     0,     0,  1960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4000,  4001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1174,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,  1174,
    1174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4073,     0,     0,     0,  4075,     0,     0,  4076,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4106,     0,     0,     0,     0,
    4110,  4111,  4112,  4113,     0,  4114,     0,  4115,  4116,     0,
       0,     0,     0,     0,     0,  1174,     0,  1174,  4121,  4122,
       0,     0,     0,  4123,  4124,  4125,     0,     0,     0,     0,
       0,     0,     0,  4127,  4128,  4129,     0,  4130,     0,  4132,
       0,  4134,     0,  4136,     0,  4138,  4139,     0,     0,     0,
       0,     0,     0,  2824,     0,  4142,     0,  2824,     0,  4145,
       0,  4146,     0,     0,  4147,  4148,  4150,  4151,     0,     0,
    4152,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4159,     0,  4160,  4161,
    4162,     0,     0,  4163,     0,     0,     0,     0,     0,  4167,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4186,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,     0,     0,  4197,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,  4230,     0,     0,
       0,     0,     0,     0,     0,  1174,  1174,     0,     0,     0,
       0,  2455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3096,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3096,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4379,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4525,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4545,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4553,     0,     0,  4554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4574,  4575,     0,     0,
       0,  4580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4600,     0,  4601,     0,  4602,     0,  4603,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4627,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4649,  4650,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3851,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,  2455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2455,     0,
       0,     0,  2455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3096,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4848,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,  3851,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3851,     0,     0,  4862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5004,  5005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5012,
    5013,  5014,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5034,     0,  5035,     0,  5036,     0,
    5037,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5040,  5041,     0,  1174,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5063,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2455,     0,     0,     0,     0,  2455,  2455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3096,     0,     0,
       0,  3096,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5290,  5291,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3851,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3851,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2455,  2455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3096,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5515,     0,  5517,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5619,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3851,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2455,  2455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3851,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3096,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5835,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    6059,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,     0,     0,  1000,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,  6189,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,  2099,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,    41,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,    48,     0,     0,  1075,  1076,
    3096,     0,     0,     0,    50,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,  3096,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,  2809,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,  2810,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,  2811,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,  2451,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2452,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  2453,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,  2454,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,  1970,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  3093,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,  3094,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,  3525,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,  3527,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,  3529,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  5087,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,  3094,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1997,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,  2661,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  2662,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  2662,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,  2893,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1044,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,     0,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,  2894,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  4137,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  4158,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,  1053,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,  6281,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1963,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,     0,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1964,
    1965,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  2092,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1964,  1965,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  2094,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,     0,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1964,
    1965,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  2914,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,     0,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
    1133,     0,     0,   999,     0,  1134,     0,     0,  1000,  1001,
    1135,     0,     0,     0,  1136,  1137,     0,     0,  1138,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1016,  1017,  1018,
    1019,     0,     0,     0,     0,     0,     0,     0,  1020,  1021,
       0,  1022,     0,     0,     0,     0,     0,     0,  1023,  1024,
       0,     0,  1025,  1026,  1027,  1028,     0,  1029,  1030,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    21,     0,     0,     0,     0,
       0,  1042,     0,     0,   574,     0,     0,     0,     0,     0,
    1043,     0,     0,  2916,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    28,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,  1077,  1078,  1079,
    1080,    60,    61,    62,  1081,  1082,    65,    66,    67,    68,
      69,    70,  1083,    72,    73,    74,    75,    76,    77,    78,
    1084,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,  1085,    96,   581,
      98,    99,   100,   101,   102,   582,  1086,   104,  1087,   106,
    1088,  1089,  1090,  1091,  1092,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1093,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  1094,  1095,  1096,   585,  1097,  1098,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,  1099,   184,   185,   591,   187,   188,
    1100,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,  1101,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,  1102,  1103,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,  1104,   265,
    1105,   267,   268,   269,   270,   271,  1106,   273,   274,   275,
     276,   277,   278,   279,   280,   281,  1107,  1108,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,  1109,   298,   299,   300,   598,   301,   302,
    1110,   304,   305,   306,   307,   308,   309,   310,  1111,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
    1112,   323,   324,   325,   326,   327,   328,  1113,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,  1114,   361,
     603,   363,   364,   365,  1115,  1116,   368,   369,   604,   371,
     372,  1117,   374,   375,   376,   377,   378,   379,  1118,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,  1119,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  1120,  1121,
    1122,  1123,   433,   434,   435,   436,  1124,  1125,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,  1126,   453,  1127,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,  1128,  1129,   610,  1130,   469,   470,
     471,     0,   472,   611,   474,  1131,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1133,     0,     0,   999,     0,
    1134,     0,     0,  1000,  1001,  1135,     0,     0,     0,  1136,
    1137,     0,     0,  1138,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,  1021,     0,  1022,     0,     0,     0,
       0,     0,     0,  1023,  1024,     0,     0,  1025,  1026,  1027,
    1028,     0,  1029,  1030,     0,  1031,  1032,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,  1034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,  1035,  1036,  1037,     0,  1038,
       0,     0,     0,     0,     0,     0,     0,  1039,  1040,  1041,
      21,     0,     0,     0,     0,     0,  1042,     0,     0,   574,
       0,     0,     0,     0,     0,  1043,     0,     0,  1963,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,  1049,     0,  1050,     0,
       0,     0,  1051,     0,     0,     0,     0,  1052,     0,     0,
      28,     0,     0,  1054,  1055,  1056,  1057,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,  1058,  1059,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1063,     0,     0,     0,
       0,     0,     0,     0,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,  1068,     0,  1069,  1070,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,  1073,  1074,     0,     0,
       0,     0,     0,  1075,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,  1077,  1078,  1079,  1080,    60,    61,    62,  1081,
    1082,    65,    66,    67,    68,    69,    70,  1083,    72,    73,
      74,    75,    76,    77,    78,  1084,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1085,    96,   581,    98,    99,   100,   101,   102,
     582,  1086,   104,  1087,   106,  1088,  1089,  1090,  1091,  1092,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1093,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,  1094,  1095,  1096,   585,
    1097,  1098,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,  1099,
     184,   185,   591,   187,   188,  1100,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,  1101,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,  1102,
    1103,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,  1104,   265,  1105,   267,   268,   269,   270,
     271,  1106,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  1107,  1108,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,  1109,   298,
     299,   300,   598,   301,   302,  1110,   304,   305,   306,   307,
     308,   309,   310,  1111,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,  1112,   323,   324,   325,   326,
     327,   328,  1113,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,  1114,   361,   603,   363,   364,   365,  1115,
    1116,   368,   369,   604,   371,   372,  1117,   374,   375,   376,
     377,   378,   379,  1118,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,  1119,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,  1120,  1121,  1122,  1123,   433,   434,   435,
     436,  1124,  1125,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,  1126,   453,  1127,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1128,
    1129,   610,  1130,   469,   470,   471,     0,   472,   611,   474,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,  6141,
    6142,     0,     0,   999,     0,     0,     0,     0,  2002,     0,
    6143,     0,     0,     0,     0,  1137,     0,     0,  1138,  1956,
    1957,     0,  1004,  1005,  1006,  1007,  1008,  1009,  1010,  1011,
    1012,  1013,  1014,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,  1037,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,  1057,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,  2947,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  2948,   430,
     431,  2949,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,  6444,   472,   611,   474,   475,  2869,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1138,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,  6444,
     472,   611,   474,   475,  2869,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,     5,     0,     0,     0,
       0,     0,     0,     0,  6445,     0,     0,     0,     0,     0,
       0,  2870,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,  2002,   472,   611,
     474,   475,     0,     0,     0,     0,     0,     0,  1956,  1957,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2870,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
    2002,   472,   611,   474,   475,     0,     0,     0,     0,     0,
       0,  1956,  1957,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2003,     0,     0,     0,     0,     0,
       0,     0,  1138,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,  2869,   472,   611,   474,   475,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1138,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     1,     0,     2,     3,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2870,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     6,     7,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     9,     0,    10,     0,    11,     0,
       0,     0,     0,     0,     0,     0,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,    14,     0,    15,
      16,     0,     0,     0,     0,     0,    17,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,    20,     0,     0,
       0,    21,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,    23,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    24,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    25,     0,    26,
       0,     0,     0,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,    31,    32,    33,     0,     0,     0,     0,     0,
       0,     0,     0,    34,    35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,    37,    38,     0,    39,
       0,     0,     0,     0,    40,     0,     0,     0,     0,     0,
      41,     0,     0,     0,    42,    43,    44,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      45,     0,    46,     0,    47,     0,     0,     0,     0,     0,
       0,    48,     0,     0,     0,     0,     0,     0,     0,    49,
      50,     0,     0,     0,    51,    52,    53,     0,    54,    55,
      56,    57,    58,     0,    59,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,     0,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,   473,
     474,   475,     1,     0,     0,     3,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     4,     5,     0,     0,
       0,   476,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     6,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     8,     0,     9,     0,    10,     0,    11,
       0,     0,     0,     0,     0,     0,     0,    12,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,    14,     0,
      15,    16,     0,     0,     0,     0,     0,    17,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,    20,     0,
       0,     0,    21,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    24,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    25,     0,
      26,     0,     0,     0,    27,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,    31,    32,    33,     0,     0,     0,     0,
       0,     0,     0,     0,    34,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    36,    37,    38,     0,
      39,     0,     0,     0,     0,    40,     0,     0,     0,     0,
       0,    41,     0,     0,     0,    42,    43,    44,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    45,     0,    46,     0,    47,     0,     0,     0,     0,
       0,     0,    48,     0,     0,     0,     0,     0,     0,     0,
      49,    50,     0,     0,     0,    51,    52,    53,     0,    54,
      55,    56,    57,    58,     0,    59,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
       0,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
     473,   474,   475,     1,     0,     0,     3,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     4,     5,     0,
       0,     0,   476,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     6,     7,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     8,     0,     0,     0,    10,     0,
      11,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    14,
       0,    15,    16,     0,     0,     0,     0,     0,    17,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,    31,    32,    33,     0,     0,     0,
       0,     0,     0,     0,     0,    34,    35,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    37,     0,
       0,    39,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,    41,     0,     0,     0,    42,    43,    44,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    45,     0,    46,     0,    47,     0,     0,     0,
       0,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,    50,     0,     0,     0,    51,    52,    53,     0,
      54,    55,    56,    57,    58,     0,    59,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
       0,     0,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,     0,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,   473,   474,   475,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   476,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   765,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
    3756,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3757,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   767,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,  5126,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5127,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1400,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    41,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    48,     0,     0,
       0,     0,     0,     0,     0,     0,    50,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1401,     0,     0,
       0,     0,     0,     0,     0,   796,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1399,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1400,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1401,     0,     0,     0,     0,  1402,
       0,     0,   796,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1400,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1401,     0,     0,     0,     0,  1402,     0,     0,   796,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1400,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1401,     0,
       0,     0,     0,     0,     0,     0,   796,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,  3400,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   796,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5287,     0,     0,     0,     0,     0,     0,     0,
    5127,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,  5537,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5127,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   793,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   794,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   795,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   796,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,     0,
     472,   611,   474,   475,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   796,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,   816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   718,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5127,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1479,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2086,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
    1224,   472,   611,   474,   475,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     4,     5,     0,     0,
       0,     0,     0,     0,  2925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1226,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,  1227,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,  1228,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,  1229,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,  1230,   187,   188,   189,   592,  1231,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,  1232,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,  1233,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,  1234,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,  1235,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,  1236,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,  1237,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,  1238,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,  1239,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,  1240,   468,   469,   470,   471,  1224,   472,
     611,   474,   475,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1226,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,  1227,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,  1228,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,  1229,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,  1230,   187,   188,   189,   592,  1231,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,  1232,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,  1233,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,  1234,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,  1235,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,  1236,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,  1237,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,  1240,   468,   469,   470,   471,  2166,   472,   611,   474,
     475,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     4,     5,   816,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   718,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,  2410,   472,   611,   474,   475,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,   816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,  2701,   472,   611,   474,   475,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     4,     5,
     816,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     718,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
    2317,   472,   611,   474,   475,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1956,  1957,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2318,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,  2317,   472,
     611,   474,   475,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1956,  1957,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,  2424,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1956,  1957,     0,     0,     0,     0,     0,     0,
       0,  2425,     0,  2426,     0,  2427,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2428,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,  2424,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1956,  1957,     0,     0,     0,     0,     0,     0,     0,  2425,
       0,  2426,     0,  2427,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3202,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,  3203,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,  2424,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1956,  1957,
       0,     0,     0,     0,     0,     0,     0,  2425,     0,  2426,
       0,  2427,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4515,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,  2424,  1001,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1956,  1957,     0,     0,
       0,     0,     0,     0,     0,  2425,     0,  2426,     0,  2427,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
    3381,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,  1956,  1957,     0,
       0,     0,     0,     0,     0,     0,     0,  4531,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,     0,
     472,   611,   474,   475,  1956,  1957,     0,     0,     0,     0,
       0,     0,     0,     0,  4687,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,  5377,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,  5650,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,     0,     0,     0,
       0,     0,  3363,     0,     0,  5965,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   712,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,   713,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,  4007,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4008,     0,   683,     0,  4009,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,   816,     0,     0,     0,     0,     0,
       0,  3364,     0,     0,   718,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1468,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2171,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2172,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,   816,  1469,     0,     0,     0,     0,     0,     0,     0,
       0,   718,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1468,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,     4,     5,     0,  1469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
    1544,     0,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  1554,  1555,     0,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,
    1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,
    1582,  1583,  1584,    18,  1585,  1586,  1587,  1588,  1589,  1590,
    1591,  1592,  1593,  1594,     0,  1595,  1596,  1597,  1598,  1599,
       0,     0,    21,  1600,  1601,  1602,  1603,  1604,  1605,  1606,
    1607,  1608,  1609,  1610,  1611,     0,  1612,  1613,     0,  1614,
    1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
    1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,
    1635,  1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
    1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,
    1655,  1656,    28,  1657,  1658,  1659,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,    30,  1668,  1669,  1670,  1671,     0,
    1672,  1673,  1674,  1675,  1676,    33,  1677,  1678,  1679,  1680,
    1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,
    1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,
    1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,
    1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,     0,  1737,  1738,  1739,
    1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,
    1750,  1751,     0,  1752,  1753,  1754,  1755,  1756,  1757,  1758,
    1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1771,  1772,  1773,    51,    52,    53,     0,    54,
      55,    56,    57,    58,     0,  1774,  1775,  1776,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,  1777,    85,  1778,  1779,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
       0,  1780,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,  1781,   136,  1782,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,  1783,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,  1784,   589,   590,   182,
       0,   183,   184,   185,     0,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,  1785,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,     0,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1786,
    1787,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,     0,  1788,  1789,   296,  1790,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,  1791,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,  1792,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,     0,   378,   379,   380,   381,   605,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,  1793,   427,   428,  1794,   430,   431,  1795,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,     0,  1796,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,  1797,   468,   469,   470,   471,     0,   472,
     611,   474,  1798,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1516,
    1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,     0,  1545,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
       0,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,
      18,  1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,
    1594,     0,  1595,  1596,  1597,  1598,  1599,     0,     0,    21,
    1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,  1609,
    1610,  1611,     0,  1612,  1613,     0,  1614,  1615,  1616,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,    28,
    1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,
    1667,    30,  1668,  1669,  1670,  1671,     0,  1672,  1673,  1674,
    1675,  1676,    33,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,
    1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,
    1734,  1735,  1736,     0,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,     0,
    1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,
    1772,  1773,    51,    52,    53,     0,    54,    55,    56,    57,
      58,     0,  1774,  1775,  1776,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,  1777,
      85,  1778,  1779,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,     0,  1780,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,  1781,   136,  1782,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,  1783,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,  1784,   589,   590,   182,     0,   183,   184,
     185,     0,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,  1785,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,  1786,  1787,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,     0,  1788,  1789,   296,  1790,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,  1791,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,  4497,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,     0,
     378,   379,   380,   381,   605,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,  1793,
     427,   428,  1794,   430,   431,  1795,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,     0,  1796,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
    1797,   468,   469,   470,   471,     0,   472,   611,   474,  1798,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,     0,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,     0,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,  1582,  1583,  1584,    18,  1585,  1586,
    1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,     0,  1595,
    1596,  1597,  1598,  1599,     0,     0,    21,  1600,  1601,  1602,
    1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,     0,
    1612,  1613,     0,  1614,  1615,  1616,  1617,  1618,  1619,  1620,
    1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,
    1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,  1650,
    1651,  1652,  1653,  1654,  1655,  1656,    28,  1657,  1658,  1659,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,    30,  1668,
    1669,  1670,  1671,     0,  1672,  1673,  1674,  1675,  1676,    33,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
       0,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,
    1746,  1747,  1748,  1749,  1750,  1751,     0,  1752,  1753,  1754,
    1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,  1764,
    1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,    51,
      52,    53,     0,    54,    55,    56,    57,    58,     0,  1774,
    1775,  1776,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,  1777,    85,  1778,  1779,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,     0,  1780,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,  1781,   136,  1782,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,  1783,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
    1784,   589,   590,   182,     0,   183,   184,   185,     0,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,  1785,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1786,  1787,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,     0,
    1788,  1789,   296,  1790,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,  1791,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,     0,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,  5681,   378,   379,   380,
     381,   605,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,  1793,   427,   428,  1794,
     430,   431,  1795,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,     0,  1796,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,  1797,   468,   469,
     470,   471,     0,   472,   611,   474,  1798,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,     0,  1545,  1546,  1547,  1548,  1549,  1550,  1551,
    1552,  1553,  1554,  1555,     0,  1556,  1557,  1558,  1559,  1560,
    1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,
    1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,
    1581,  1582,  1583,  1584,    18,  1585,  1586,  1587,  1588,  1589,
    1590,  1591,  1592,  1593,  1594,     0,  1595,  1596,  1597,  1598,
    1599,     0,     0,    21,  1600,  1601,  1602,  1603,  1604,  1605,
    1606,  1607,  3991,  1609,  1610,  1611,     0,  1612,  1613,     0,
    1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,
    1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,
    1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,  1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,
    1654,  1655,  1656,    28,  1657,  1658,  1659,  1660,  1661,  1662,
    1663,  1664,  1665,  1666,  1667,    30,  1668,  1669,  1670,  1671,
       0,  1672,  1673,  1674,  1675,  1676,    33,  1677,  1678,  1679,
    1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,
    1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,
    1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,
    1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,
    1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,
    1730,  1731,  1732,  1733,  1734,  1735,  1736,     0,  1737,  1738,
    1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,
    1749,  1750,  1751,     0,  1752,  1753,  1754,  1755,  1756,  1757,
    1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,    51,    52,    53,     0,
      54,    55,    56,    57,    58,     0,  1774,  1775,  1776,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,  1777,    85,  1778,  1779,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,     0,  1780,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,  1781,   136,
    1782,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,  1783,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,  1784,   589,   590,
     182,     0,   183,   184,   185,     0,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,  1785,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
    1786,  1787,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,     0,  1788,  1789,   296,
    1790,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,  1791,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,     0,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,     0,   378,   379,   380,   381,   605,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,  1793,   427,   428,  1794,   430,   431,  1795,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,     0,  1796,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     0,   468,   469,   470,   471,     0,
     472,   611,   474,  1798,     4,     5,   816,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   718,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   907,   908,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   909,     0,     0,     0,   910,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   911,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   913,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     914,     0,     0,     0,     0,   915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   916,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   917,     0,     0,
       0,   918,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   919,
       0,     0,     0,   920,   921,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   922,     0,     0,     0,     0,     0,
       0,   923,   924,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   925,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   926,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   927,   164,   165,   166,   167,
     928,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   929,   930,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   931,   325,   326,
     327,   932,   329,   330,   331,   332,   333,   933,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   934,   346,
     347,   601,   349,   350,   935,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   936,   383,   384,   385,   937,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   938,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,   816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   718,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1202,
     908,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   909,     0,     0,     0,   910,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   911,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   913,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   914,     0,     0,
       0,     0,   915,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   916,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   917,     0,     0,     0,   918,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   919,     0,     0,     0,
     920,   921,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   922,     0,     0,     0,     0,     0,     0,   923,   924,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,  1203,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   925,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   926,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   927,   164,   165,   166,   167,   928,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   929,   930,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   931,   325,   326,   327,  1204,   329,
     330,   331,   332,   333,   933,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   934,   346,   347,   601,   349,
     350,   935,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   936,   383,   384,   385,   937,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   938,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,  2723,  2724,  5476,     0,  5477,     0,  5478,
     718,  5479,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,   816,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   718,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     910,  1479,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,   816,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   718,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2186,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2187,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,     0,     0,  1361,     0,     0,  1362,  1363,     0,     0,
       0,  1364,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,     4,     5,   816,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   718,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2171,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2172,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,   816,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   718,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1479,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,   816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2222,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,     4,     5,   816,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   718,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   910,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,     0,
     472,   611,   474,   475,     4,     5,   816,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   718,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3315,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,   816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   718,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2171,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
     816,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     718,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3678,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,   816,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   718,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3983,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   682,     0,     0,     0,     0,     0,     0,     0,     0,
     683,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,   816,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   718,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   852,   853,     0,     0,     0,     0,     0,
       0,     0,     0,   854,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   855,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,     0,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
       0,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,   856,   857,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   186,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   858,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1926,     0,     0,     0,     0,     0,     0,    21,
    1927,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
    1928,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   683,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,     0,
     472,   611,   474,   475,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1837,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,  1956,  1957,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1958,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,  1956,  1957,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,  1956,  1957,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,  2997,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3009,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3749,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,  1956,  1957,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2996,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,  4735,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,   604,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5105,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,   575,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,   591,   187,   188,   189,   592,
     191,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   610,   468,   469,   470,   471,     0,
     472,   611,   474,   475,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5560,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5570,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,  5925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
     575,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,   591,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   610,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,   575,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,   591,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   610,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,   575,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,   577,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,   587,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     591,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   725,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   610,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,   575,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,   577,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,   580,    96,   581,
      98,    99,   100,   101,   102,   582,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   806,   114,   583,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   584,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,   586,   151,   152,   153,
     154,   587,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,   590,   182,     0,   183,   184,   185,   591,   187,   188,
     189,   592,   191,   192,   593,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   596,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   597,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   598,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   599,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   601,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     603,   363,   364,   365,   366,   367,   368,   369,   604,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     605,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   608,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   610,   468,   469,   470,
     471,     0,   472,   611,   474,   475,  1956,  1957,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,    52,    53,   575,    54,
      55,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   576,     0,
     577,   578,    84,    85,    86,    87,    88,    89,   579,    91,
      92,    93,    94,    95,   580,    96,   581,    98,    99,   100,
     101,   102,   582,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   583,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   584,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   585,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,   586,   151,   152,   153,   154,   587,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   588,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   589,   590,   182,
       0,   183,   184,   185,   591,   187,   188,   189,   592,   191,
     192,   593,   194,   195,   594,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   595,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   596,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     597,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   598,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   599,   318,   600,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   601,   349,   350,   351,   602,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   603,   363,   364,
     365,   366,   367,   368,   369,   604,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   605,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   606,   403,
     404,   607,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   608,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   609,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   610,   468,   469,   470,   471,     0,   472,
     611,   474,   475,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,    52,    53,   575,    54,    55,    56,    57,
      58,     0,     0,     0,     0,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   576,     0,   577,   578,    84,
      85,    86,    87,    88,    89,   579,    91,    92,    93,    94,
      95,   580,    96,   581,    98,    99,   100,   101,   102,   582,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   583,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   584,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   585,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,   149,
     586,   151,   152,   153,   154,   587,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   588,
     169,     0,     0,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   589,   590,   182,     0,   183,   184,
     185,   591,   187,   188,   189,   592,   191,   192,   593,   194,
     195,   594,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   595,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   596,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   597,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   598,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   599,
     318,   600,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     601,   349,   350,   351,   602,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   603,   363,   364,   365,   366,   367,
     368,   369,  2337,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   605,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   606,   403,   404,   607,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   608,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   609,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     610,   468,   469,   470,   471,     0,   472,   611,   474,   475,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3014,
      52,    53,   575,    54,    55,    56,    57,    58,     0,     0,
       0,     0,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   576,     0,   577,   578,    84,    85,    86,    87,
      88,    89,   579,    91,    92,    93,    94,    95,   580,    96,
     581,    98,    99,   100,   101,   102,   582,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     583,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     584,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   585,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,   149,   586,   151,   152,
     153,   154,   587,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   588,   169,     0,     0,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   589,   590,   182,     0,   183,   184,   185,   591,   187,
     188,   189,   592,   191,   192,   593,   194,   195,   594,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   595,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   596,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   597,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   598,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   599,   318,   600,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   601,   349,   350,
     351,   602,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   603,   363,   364,   365,   366,   367,   368,   369,   604,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   605,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   606,   403,   404,   607,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   608,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   609,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   610,   468,   469,
     470,   471,     0,   472,   611,   474,   475,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   718,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3657,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,  3658,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    51,    52,    53,  3659,
      54,    55,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   576,
       0,   577,   578,    84,    85,    86,    87,    88,    89,   579,
      91,    92,    93,    94,    95,   580,    96,   581,    98,    99,
     100,   101,   102,   582,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   583,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   584,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   585,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,   586,   151,   152,   153,   154,   587,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   588,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   589,   590,
     182,     0,   183,   184,   185,  3660,   187,   188,   189,   592,
       0,   192,   593,   194,   195,   594,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     595,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     596,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   597,   289,   290,   291,   292,   293,   294,   295,   296,
    3661,   297,   298,   299,   300,   598,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   599,   318,   600,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   601,   349,   350,   351,   602,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   603,   363,
     364,   365,   366,   367,   368,   369,   604,   371,   372,   373,
     374,   375,   376,   377,     0,   379,   380,   381,   605,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   606,
     403,   404,   607,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   608,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   609,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,  3662,   468,   469,   470,   471,     0,
     472,   611,   474,   475,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,    52,    53,   575,    54,    55,    56,
      57,    58,     0,     0,     0,     0,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   576,     0,   577,   578,
      84,    85,    86,    87,    88,    89,   579,    91,    92,    93,
      94,    95,   580,    96,   581,    98,    99,   100,   101,   102,
     582,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   583,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   584,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   585,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
     149,   586,   151,   152,   153,   154,   587,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     588,   169,     0,     0,   170,   171,   172,   173,   174,   175,
     176,   177,   178,  3776,   180,   589,   590,   182,     0,   183,
     184,   185,   591,   187,   188,   189,   592,   191,   192,   593,
     194,   195,   594,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   595,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   596,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,     0,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,  3777,   283,   284,   285,   286,   287,   288,   597,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   598,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     599,   318,   600,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   601,   349,   350,   351,   602,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   603,   363,   364,   365,   366,
     367,   368,   369,   604,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   605,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   606,   403,   404,   607,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   608,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   609,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   610,   468,   469,   470,   471,     0,   472,   611,   474,
     475,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5877,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,   575,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,   577,   578,    84,    85,    86,
      87,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,   101,   102,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,   587,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   589,   590,   182,     0,   183,   184,   185,   591,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,   366,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   605,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   610,   468,
     469,   470,   471,     0,   472,   611,   474,   475,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,  3418,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
    3419,    54,    55,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     576,     0,   577,   578,    84,    85,    86,    87,    88,    89,
     579,    91,    92,    93,    94,    95,   580,    96,   581,    98,
      99,   100,   101,   102,   582,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   583,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   584,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   585,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,   586,   151,   152,   153,   154,
     587,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   588,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   589,
     590,   182,     0,   183,   184,   185,  3420,   187,   188,   189,
     592,   191,   192,   593,   194,   195,   594,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   595,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   596,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   597,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   598,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   599,   318,   600,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   601,   349,   350,   351,   602,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   603,
     363,   364,   365,   366,   367,   368,   369,   604,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   605,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     606,   403,   404,   607,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   608,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   609,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     0,   468,   469,   470,   471,
       0,   472,   611,   474,   475,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   718,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
    3658,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,    52,    53,  3659,    54,    55,
      56,    57,    58,     0,     0,     0,     0,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,    84,    85,    86,    87,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,   101,
     102,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   589,   590,   182,     0,
     183,   184,   185,  3660,   187,   188,   189,   592,     0,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   596,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,   293,   294,   295,   296,  3661,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
     366,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,   377,     0,   379,   380,   381,   605,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,  3662,   468,   469,   470,   471,     0,   472,   611,
     474,   475,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   854,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,    52,    53,     0,    54,    55,    56,    57,    58,
       0,     0,     0,     0,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   576,     0,     0,   578,    84,    85,
      86,    87,    88,    89,   579,    91,    92,    93,    94,    95,
     580,    96,   581,    98,    99,   100,   101,   102,   582,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   583,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   584,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   585,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,   149,   586,
     151,   152,   153,   154,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   588,   169,
       0,     0,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   589,   590,   182,     0,   183,   184,   185,
     186,   187,   188,   189,   592,   191,   192,   593,   194,   195,
     594,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   595,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   596,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   597,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     598,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   599,   318,
     600,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   601,
     349,   350,   351,   602,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   603,   363,   364,   365,   366,   367,   368,
     369,   604,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   605,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   606,   403,   404,   607,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     608,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     609,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   858,
     468,   469,   470,   471,     0,   472,   611,   474,   475,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,    52,
      53,     0,    54,    55,    56,    57,    58,     0,     0,     0,
       0,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   576,     0,     0,   578,    84,    85,    86,    87,    88,
      89,   579,    91,    92,    93,    94,    95,     0,    96,   581,
      98,    99,   100,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,     0,
     116,   117,   118,   119,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   585,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,   149,     0,   151,   152,   153,
     154,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   588,   169,     0,     0,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     589,     0,   182,     0,   183,   184,   185,   186,   187,   188,
     189,   592,   191,   192,     0,   194,   195,   594,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   595,   211,   212,   213,   214,   215,   216,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   600,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   349,   350,   351,
     602,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,   363,   364,   365,   366,   367,   368,   369,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   606,   403,   404,   607,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   609,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,   611,   474,   475,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,  1913,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1924,     0,
       0,     0,     0,     0,     0,    51,    52,    53,  1914,    54,
       0,    56,    57,    58,     0,     0,     0,     0,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
      72,    73,    74,    75,    76,    77,    78,    79,     0,     0,
       0,     0,    84,    85,    86,    87,    88,     0,     0,    91,
      92,    93,    94,    95,     0,     0,     0,    98,    99,   100,
     101,   102,     0,   103,   104,   105,   106,     0,     0,     0,
       0,     0,     0,   112,     0,   114,     0,   116,   117,  1915,
     119,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,   149,     0,   151,   152,   153,   154,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,     0,     0,   169,     0,     0,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,     0,     0,     0,
       0,     0,   184,   185,  1916,   187,   188,   189,     0,   191,
     192,     0,   194,   195,     0,     0,   197,     0,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,   303,     0,   305,
     306,     0,   308,   309,   310,   311,     0,   313,   314,   315,
     316,     0,     0,     0,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   347,     0,   349,   350,   351,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,     0,   363,   364,
     365,   366,   367,   368,   369,     0,   371,   372,   373,     0,
     375,   376,   377,   378,     0,   380,   381,     4,     5,   384,
     385,     0,     0,   388,   389,   390,     0,   392,     0,   394,
     395,   396,   397,     0,   398,   399,   400,   401,     0,   403,
     404,     0,   406,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   429,   430,   431,   432,   433,
     434,   435,   436,   437,     0,   439,   440,   441,     0,   443,
     444,   445,   446,     0,     0,   449,   450,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,     0,     0,   469,   470,     0,     0,   472,
       0,   474,   475,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,  1913,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1934,
       0,     0,     0,     0,     0,     0,    51,    52,    53,  1914,
      54,     0,    56,    57,    58,     0,     0,     0,     0,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,    72,    73,    74,    75,    76,    77,    78,    79,     0,
       0,     0,     0,    84,    85,    86,    87,    88,     0,     0,
      91,    92,    93,    94,    95,     0,     0,     0,    98,    99,
     100,   101,   102,     0,   103,   104,   105,   106,     0,     0,
       0,     0,     0,     0,   112,     0,   114,     0,   116,   117,
    1915,   119,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   151,   152,   153,   154,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,     0,     0,   169,     0,     0,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,     0,     0,
       0,     0,     0,   184,   185,  1916,   187,   188,   189,     0,
     191,   192,     0,   194,   195,     0,     0,   197,     0,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,     0,     0,     0,   303,     0,
     305,   306,     0,   308,   309,   310,   311,     0,   313,   314,
     315,   316,     0,     0,     0,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   347,     0,   349,   350,   351,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,     0,   363,
     364,   365,   366,   367,   368,   369,     0,   371,   372,   373,
       0,   375,   376,   377,   378,     0,   380,   381,     4,     5,
     384,   385,     0,     0,   388,   389,   390,     0,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,     0,
     403,   404,     0,   406,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   429,   430,   431,   432,
     433,   434,   435,   436,   437,     0,   439,   440,   441,     0,
     443,   444,   445,   446,     0,     0,   449,   450,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     0,     0,   469,   470,     0,     0,
     472,     0,   474,   475,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,     0,     0,     0,     0,
       0,     0,     0,  1913,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,    52,    53,
    1914,    54,     0,    56,    57,    58,     0,     0,     0,     0,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,    72,    73,    74,    75,    76,    77,    78,    79,
       0,     0,     0,     0,    84,    85,    86,    87,    88,     0,
       0,    91,    92,    93,    94,    95,     0,     0,     0,    98,
      99,   100,   101,   102,     0,   103,   104,   105,   106,     0,
       0,     0,     0,     0,     0,   112,     0,   114,     0,   116,
     117,  1915,   119,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,   149,     0,   151,   152,   153,   154,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,     0,     0,   169,     0,     0,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,     0,
       0,     0,     0,     0,   184,   185,  1916,   187,   188,   189,
       0,   191,   192,     0,   194,   195,     0,     0,   197,     0,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,   303,
       0,   305,   306,     0,   308,   309,   310,   311,     0,   313,
     314,   315,   316,     0,     0,     0,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   347,     0,   349,   350,   351,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,     0,
     363,   364,   365,   366,   367,   368,   369,     0,   371,   372,
     373,     0,   375,   376,   377,   378,     0,   380,   381,     0,
       0,   384,   385,     0,     0,   388,   389,   390,     0,   392,
       0,   394,   395,   396,   397,     0,   398,   399,   400,   401,
       0,   403,   404,     0,   406,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   429,   430,   431,
     432,   433,   434,   435,   436,   437,     0,   439,   440,   441,
       0,   443,   444,   445,   446,     0,     0,   449,   450,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     4,     5,   469,   470,     0,
       0,   472,     0,   474,   475,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,
    1525,  1526,     0,  4078,  1529,  1530,  1531,     0,     0,  1534,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  4079,  1543,  1544,
       0,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
    1554,  1555,     0,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  4080,  1566,  1567,  1568,  1569,  1570,  1571,  1572,
    1573,  1574,  1575,  1576,  1577,  4081,  1579,  1580,  1581,  1582,
    1583,  1584,    18,  1585,  1586,  1587,  1588,  1589,  1590,  1591,
    1592,  4082,  1594,     0,  1595,  1596,  1597,  1598,  1599,     0,
       0,    21,  1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,
    3991,  1609,  1610,  1611,     0,  1612,  1613,     0,  1614,  4083,
    1616,  4084,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,
    1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,
       0,     0,     0,  1639,  1640,  1641,  1642,  1643,  1644,  1645,
       0,     0,     0,  1649,  1650,  1651,  1652,  1653,  1654,  1655,
    1656,    28,  1657,  1658,  1659,  1660,  1661,  1662,     0,  1664,
    1665,  1666,  1667,    30,  1668,  1669,  1670,  1671,     0,  1672,
    1673,  1674,  1675,  1676,    33,  1677,  1678,  1679,  1680,  1681,
    1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,
       0,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,
    1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,     0,  1717,  1718,     0,  1720,  1721,
    1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,
    1732,  1733,  1734,  1735,  1736,     0,  1737,  1738,  1739,  1740,
       0,     0,     0,  1744,  1745,  1746,  1747,  1748,  1749,  1750,
    1751,  4085,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,
    1760,  1761,     0,  4086,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,    51,    52,    53,     0,    54,    55,
      56,    57,    58,     0,  1774,  1775,  1776,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   576,     0,   577,
     578,     0,    85,     0,     0,    88,    89,   579,    91,    92,
      93,    94,    95,   580,    96,   581,    98,    99,   100,     0,
       0,   582,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   583,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   584,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,  4087,   136,  4088,   138,
     585,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,   149,   586,   151,   152,   153,   154,   587,   155,   156,
     157,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   588,   169,     0,     0,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,     0,   589,   590,   182,     0,
     183,   184,   185,     0,   187,   188,   189,   592,   191,   192,
     593,   194,   195,   594,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   595,   211,
     212,   213,   214,   215,   216,   217,     0,   219,   596,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,   253,   254,   255,   256,   257,   258,   259,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,  4089,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   597,
     289,   290,   291,   292,     0,     0,     0,   296,  1790,   297,
     298,   299,   300,   598,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   599,   318,   600,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   601,   349,   350,   351,   602,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   603,   363,   364,   365,
       0,   367,   368,   369,   604,   371,   372,   373,   374,   375,
     376,     0,   378,   379,   380,   381,   605,  4090,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   606,   403,   404,
     607,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,     0,   430,   431,  4091,   433,   434,
     435,   436,   437,   608,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   609,   449,   450,   451,   452,   453,   454,
       0,  4092,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     0,   468,   469,   470,   471,     0,   472,   611,
     474,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,   855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,     0,     0,     0,     0,     0,  5694,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,    52,    53,     0,    54,    55,    56,    57,    58,     0,
       0,     0,     0,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   576,     0,     0,   578,     0,    85,     0,
       0,    88,    89,   579,    91,    92,    93,    94,    95,   580,
      96,   581,    98,    99,   100,     0,     0,   582,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   583,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   584,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,     0,   136,     0,   138,   585,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,   149,   586,   151,
     152,   153,   154,     0,   155,   156,   157,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   588,   169,     0,
       0,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,     0,   589,   590,   182,     0,   183,   184,   185,  5695,
     187,   188,   189,   592,   191,   192,   593,   194,   195,   594,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   595,   211,   212,   213,   214,   215,
     216,   217,     0,   219,   596,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
     254,   255,   256,   257,   258,   259,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   597,   289,   290,   291,   292,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   598,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   599,   318,   600,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   601,   349,
     350,   351,   602,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   603,   363,   364,   365,     0,   367,   368,   369,
     604,   371,   372,   373,   374,   375,   376,     0,   378,   379,
     380,   381,   605,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   606,   403,   404,   607,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   427,   428,
       0,   430,   431,     0,   433,   434,   435,   436,   437,   608,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   609,
     449,   450,   451,   452,   453,   454,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,  1797,   468,
     469,   470,   471,     0,   472,   611,   474
};

static const yytype_int16 yycheck[] =
{
       3,     0,    29,   970,    82,     8,   634,   648,     0,   696,
     697,   476,    82,   859,  2139,     0,     0,  1982,  1291,  2019,
     696,     0,   642,   779,     0,   812,  2472,   812,  2324,     0,
     724,  2152,    35,  2350,  2294,  2597,    39,   663,     0,  2698,
       0,    44,  2591,     0,    47,     0,     0,     0,  2658,  1461,
       0,  1843,    40,  1637,  1429,   696,  1233,  1432,  1235,  1236,
    1989,  1432,  3324,  2028,   632,  3652,  1243,  3073,  2607,  2491,
    1565,  2577,  1998,  1197,  2349,   648,  2087,  2068,  1048,   664,
     664,     0,   650,   691,   652,   653,   654,   655,   656,   657,
     658,  3803,   660,   661,  2435,  3217,  1426,  1401,  1593,  2090,
    1472,  1813,  3337,  3085,  3961,  3879,  1420,  1533,  2542,   694,
     694,   741,  1472,   850,   744,  1891,  4344,  4350,  1270,  4444,
    2209,  2210,   690,   696,  1358,  2125,  2126,  2127,  2128,  2129,
    2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,  4444,  1565,
    1292,   644,  3872,  2577,  2267,  4036,   626,   880,  3735,   629,
    2699,  3148,  3847,  4824,   181,  3719,  2152,  4366,  3083,  4334,
    3452,  3453,   631,  2687,  3861,   168,  1016,  1593,  1663,  4071,
     764,  2216,   766,  2462,  3259,   769,   770,  1532,   746,   747,
    2318,  4490,  3112,   859,  3469,  3880,  3469,  3473,  3473,  1293,
    3473,  2236,  3178,  3573,     0,   664,  2543,  2318,  4444,  5192,
     703,    37,  3177,  3178,  3933,  4332,  3187,  1638,  5178,  2399,
     642,  2110,   642,   642,  4935,  2260,  2261,  1648,   859,  2118,
    2119,    15,  2121,  2122,   642,   694,  2315,  4311,   854,  4091,
      15,    15,  1199,    42,    53,  1637,  1638,  1663,   879,   642,
    4087,    31,     6,     7,  4091,    42,  1648,  4892,   717,    63,
       6,     7,    42,   791,    53,  4892,    15,  4892,    47,     6,
       7,    97,   731,   127,    42,    83,  1500,   127,    65,  5374,
    2692,    40,    89,     6,     7,  1636,     6,     7,     6,     7,
     145,    47,  1132,  1133,  1134,  1646,   859,   136,    33,  1784,
       6,     7,   790,  1788,    15,  1145,    41,    15,  4849,    50,
       6,     7,    15,   128,    15,    50,   879,  4774,   242,    42,
     182,    15,  1743,   203,    42,    15,   319,    15,   806,    15,
    1815,   348,  2318,   891,    16,    17,   217,  4727,  1823,   203,
      11,    12,   203,   901,   902,  3816,   839,   156,  4944,  3719,
      42,  1743,   203,    99,   244,     6,     7,  5408,  5409,  1780,
    2575,    26,    42,   122,   775,   206,   178,   156,  1784,   828,
     158,    47,  1788,   203,    31,    31,  3925,   370,   531,    12,
     203,   203,    65,    33,   252,    26,   123,   299,  1780,   143,
    1741,    41,   252,  2700,  3948,  3371,  3630,    31,  1814,  1815,
      50,    33,    53,    53,    47,    31,  3371,  1823,  2982,    41,
     314,    26,    26,   123,    31,   281,   827,  1762,    50,  2534,
     232,  2995,   892,   893,   894,   895,    26,   123,  4808,    26,
      42,   168,  1777,   379,  1785,    14,  1781,   196,  5429,   898,
      47,    26,   201,   318,    71,    26,  1791,    67,  1793,  1794,
    1795,  1796,   388,  1798,   254,    42,    42,    14,   168,   377,
      26,    26,   314,  1808,  1809,  1810,  1811,  1812,   362,  4926,
     295,   281,   168,   208,    14,    26,    31,    50,   310,   197,
    5180,   974,  1968,  1969,    99,  6169,    43,    44,   239,    71,
    3901,  1977,   317,    99,   476,   364,    14,   333,    42,    28,
     331,  3416,    99,    43,    44,   305,    33,    53,   122,  4331,
    4332,   370,    31,  3065,    42,   127,   160,    42,  5683,  1839,
      42,   475,  2008,    50,  2010,    43,    44,    33,   107,   596,
    6012,   290,  5139,    99,    99,    41,  5704,  5845,   531,  2025,
    2026,  2027,   649,    42,    50,    99,  2032,  2033,    99,   646,
     107,    42,    19,    20,   409,  2041,    33,    42,   208,   170,
     542,  5553,   167,   211,    41,   404,   729,   107,   542,   496,
     128,   338,   343,    50,   328,   312,   208,  6300,  3948,   299,
     315,  6360,    28,   254,    30,    14,   208,   258,   648,   107,
    4437,  5187,  1319,   151,   151,   532,    42,   143,   542,    24,
      25,    26,  2368,    28,  4893,    30,  4895,    32,   632,  4898,
      33,   151,  5663,   192,    43,    44,   312,  6340,    41,  6398,
    4197,   254,  4444,  4912,   244,    53,   267,    50,  4347,   370,
     793,   314,   625,   626,   305,   192,   629,   784,   631,   498,
     251,   387,   789,   314,   791,    57,    33,   201,  3222,  3223,
    4204,  2958,   192,   642,    41,  1401,    51,   122,    33,    71,
     642,    73,    14,    50,   688,   315,    41,  1287,   642,  1289,
     441,   664,   305,   648,   192,    50,   290,   144,   107,   648,
    1135,   314,   648,   315,  4920,   462,   793,  5995,   663,    96,
    5858,    43,    44,   110,   663,   688,   793,   663,   642,   658,
     467,   694,   208,  4902,   573,   235,   283,   312,   648,   104,
     637,   689,   258,  1488,   287,    51,   709,   145,   785,   555,
      67,   696,  4559,   663,   717,   307,   680,   696,   314,   196,
     696,   208,   160,   585,   573,   696,   201,   730,   731,   648,
     367,   128,  1856,    24,    25,    26,  3971,    28,   155,    30,
      53,    32,   298,   634,   663,   107,   696,   498,    24,    25,
      26,   268,    28,   192,    30,  1224,    32,   598,   104,   287,
     763,  1885,   379,  6255,  1233,   693,  6460,  1236,   314,   427,
    5772,   387,  1241,   299,  1511,   208,   779,   696,   315,  3054,
    5490,   173,   510,   299,    14,  5175,   732,  1381,   119,    57,
    1384,   314,   638,   796,  1388,  1389,  1390,  1391,   790,   315,
      31,   804,   805,  1272,  5421,   641,  3066,   711,   693,   812,
     646,   208,   573,    43,    44,   290,   299,   234,   143,   606,
    5287,   152,   476,   208,  4204,   828,   662,   645,   315,   785,
     192,   700,   820,   709,   837,   582,   671,   314,   251,  1459,
     676,   778,   648,   663,  3830,  5846,   644,   850,   508,   287,
     143,   729,    99,   178,   788,  3830,  3837,   663,   314,   729,
    3841,  4342,   582,   699,  3205,   178,   788,  6042,   717,   854,
     299,   793,  5181,   749,   788,   854,   582,   107,   854,   693,
     859,  4440,   315,   859,   887,   674,   889,   244,   788,   892,
     893,   894,   895,   896,   879,   898,  3192,   788,   788,   764,
     879,   258,   294,   879,   854,  5511,   153,   463,   674,   897,
     387,   899,  4333,   785,   788,   733,   481,   788,   315,   232,
     342,  1489,  5322,   741,   788,  1463,   744,   788,   788,   879,
     315,  3248,   749,   722,  5579,   854,  1401,   788,   360,   761,
     859,  2353,  5579,   785,  5579,   367,  6051,   385,   788,   700,
    5417,  2877,  2878,  1422,   957,   788,   788,   960,  1456,  5284,
     879,   292,   192,   788,   967,  5516,   969,  5518,  4212,   738,
     392,   598,   769,   792,   973,   785,  4808,  1398,  5284,   769,
     983,   973,   958,   959,   793,   961,   962,   963,   973,   973,
    2167,   785,   968,   792,   973,  3185,  3186,   973,  5719,   793,
     785,   785,   973,  2902,  2903,  2182,  2905,  2906,   958,   959,
    3055,   961,   962,   963,  3289,   793,  1496,  1987,   968,   973,
     973,  4401,  4402,   973,   501,  4405,  4406,  1459,   792,  1459,
    1459,  4411,  4412,  2003,   793,  5119,   792,  2161,  5284,   958,
     959,  1459,   961,   962,   963,   792,   791,  2422,   854,   968,
    5177,  2422,   785,   859,   973,   748,  1459,   785,  4438,   792,
     793,  2213,   792,  2215,   792,   793,  2218,   769,  6129,   598,
    6131,  6132,   793,   879,  3391,   793,   792,  5544,  2230,  5546,
     793,  2233,   793,  2207,  5551,  2237,   792,  2391,  4920,   793,
    2462,  5558,  5559,   793,  1257,   793,   788,   793,  2402,   785,
     775,  5568,  2462,   793,   785,  3689,  1891,  5574,   769,  4838,
    2541,  2263,  2264,  2265,  1964,  1965,  6086,  6087,   785,   785,
    1857,  3346,  3347,  3470,   775,  3472,  4856,  4052,   788,  4859,
    4717,   792,   785,    71,  1137,  1298,  1135,  2568,  2550,  2541,
    2571,   785,   785,  1135,   786,  2557,   788,   769,  2579,   785,
     775,   775,   958,   959,  2258,   961,   962,   963,   788,  2520,
    5022,  2522,   968,  4860,  5026,   775,  2568,   973,   775,  2571,
    6231,  6232,   769,   769,  2535,  5022,   786,  2579,   788,  5026,
     775,  6242,  2152,   143,   775,   774,   775,   776,   777,   778,
     779,   786,  2553,   788,  1197,   786,   793,   788,  3323,   775,
     775,   788,   254,   729,  2565,   772,   773,   774,   775,   776,
     777,   778,   779,   769,   775,   769,   573,  1954,   178,  2580,
     647,  1224,   772,   773,   774,   775,   776,   777,   778,   779,
    1233,   769,   749,  1236,   769,   774,   775,   769,  1241,   793,
    6301,   654,   788,   648,   772,   773,   774,   775,   776,   777,
     778,   779,  4374,   305,   127,   793,  1334,  3380,   793,    33,
     769,   793,   314,   738,   532,   788,  4388,    41,   769,  1272,
    1854,   392,   788,   750,   769,  4862,    50,  2511,    33,    33,
     697,  1975,  5581,  5750,   793,  2781,    41,    41,  2784,  5756,
    2140,  5487,   793,   586,   619,    50,    50,   689,   793,   786,
     197,   788,   648,   197,  2800,   788,  1463,  1310,   182,  1312,
     793,   359,    33,   769,   736,  1318,  1319,   564,   774,   775,
      41,  2817,   232,  5498,  4610,  4610,  6319,  4610,   281,    50,
     270,   769,  1335,   772,   773,   774,   775,   776,   777,   778,
     779,  1344,   281,  5175,  2521,  5177,    33,   169,  2318,  2043,
      40,   786,   583,   786,    41,  1358,  1359,   786,   377,   788,
    4740,    81,  4292,    50,  2120,   281,  2060,   598,  1848,   774,
    4356,  4357,  4457,   143,   232,  2162,  1379,  2162,    74,  4360,
    4361,  4356,  4357,  2639,    31,  1854,   281,   281,   178,    98,
     372,   788,   116,   101,  1382,  1383,   314,   439,  1401,  1402,
    6033,   786,  1401,   788,   342,   391,  5715,   229,   452,  1401,
     585,   773,   774,   775,   776,   777,   778,   779,  5485,  1422,
      40,  1924,  5723,   127,  5326,   585,  5893,   147,   476,   367,
     370,  1934,    54,   462,   208,    99,   461,  1440,   158,    74,
     226,    72,   377,   377,   110,  5912,   166,  2234,   761,  2234,
     232,    40,  5284,   208,   208,   786,   769,    33,  1461,  1462,
    1459,    50,   229,    47,  1456,    41,    55,  1459,   145,  1287,
      74,  1289,  1475,   193,    50,  1459,  4221,  4222,   437,    71,
    3986,    73,  3988,  1486,   251,  1488,  1955,   208,   577,  3764,
     160,  1327,   365,  1496,  1497,   786,    53,  1500,  3498,  5695,
    3638,  3761,  1338,   178,    74,  1459,   196,  2194,  1511,    99,
     786,  2267,  3801,   127,  3936,   759,  3791,  3638,  2194,   479,
     167,   208,   106,    33,   154,  5222,    33,   178,   298,   249,
     143,    41,  1997,   607,    41,  4532,  4533,  4061,  2662,   431,
      50,   315,  1360,    50,   774,   775,   776,   777,   778,   779,
     532,    39,  3986,  2194,  3988,    33,    44,   277,   498,   173,
     315,   315,   151,    41,  5865,   232,  5867,   123,  5826,     0,
     464,   127,    50,   452,   127,   619,   196,   606,   167,   452,
     605,   454,   379,  2368,  2169,  2169,   761,  5151,   296,  6260,
    3382,    33,   258,   375,   315,  2332,   226,  5161,  5162,    41,
    5330,   761,  2452,   393,  2198,   232,    81,   196,    50,   657,
     314,   201,   168,   510,    74,  4540,   510,   173,    76,    77,
    3396,  2194,    33,  6256,  6257,   321,    33,  3627,   315,  3620,
      41,   571,   208,    74,    41,  2391,  5703,  5367,   496,    50,
    2268,  4063,  3638,    50,   353,  6044,  2402,  2403,  4232,   238,
     206,   693,    33,  1471,   101,  2158,  1026,  1027,  1028,   619,
      41,    99,  4246,   752,   785,   312,  4250,   585,  3633,    50,
    2139,   544,   147,   659,   693,  3604,   226,   551,  2308,  5854,
    5855,   467,    33,   158,  3729,   298,   321,   509,  3614,  3615,
      41,   166,   674,   463,  6365,  4987,    33,  5872,   208,    50,
    2169,   208,  1072,   150,    41,  2335,  3605,  1077,  3607,  2965,
    2966,  5969,   436,    50,   336,  4277,  4033,   321,   193,  2199,
    2200,    33,  2202,  2203,  2204,  2205,   390,   637,   392,    41,
     208,   362,  5425,   785,  2214,    18,    19,    20,    50,   315,
     619,    75,   299,   418,   788,    33,   619,    33,   438,  2377,
    2378,   321,  2232,    41,   664,    41,   709,    40,   693,   693,
     700,  1831,    50,   452,    50,   429,   208,   418,   663,   405,
     709,  5151,  3144,    54,   249,   367,  2370,  2371,  3051,  2466,
    2374,  5161,  5162,  2367,  3144,  2379,  2380,  2381,   741,   410,
    5354,   412,   126,   709,   753,   459,    33,   208,   736,   691,
    2977,   208,   277,   478,    41,   315,   476,   254,   315,  2779,
     749,   145,   365,    50,   709,   709,   613,  2994,   438,    19,
      20,  2998,   762,  6019,  1827,  6021,   160,   208,  5574,   496,
    2954,  2955,  1835,  3833,  1837,  5565,  3211,   315,  3213,  3214,
    3211,  6050,  3213,  3214,  1847,  1848,   436,  6056,  2317,   296,
     463,  1854,  3224,  1856,  1857,  5550,  2980,   208,   305,    74,
    2593,   321,  3166,   742,  3224,   303,   304,   314,  3172,   496,
    5761,   208,  3024,   315,  6273,  4997,  3028,   160,  3030,   510,
     321,   328,  1885,   217,  2621,  2622,   708,   107,  1891,  2358,
      40,   225,  3044,  2501,  6219,  2375,   208,   114,  2367,   452,
    2369,   454,  4025,    72,   315,  3057,  3058,    33,   315,   788,
      33,  4893,   709,   196,  6220,    41,  4898,   467,    41,   607,
     208,  4903,   208,  1926,    50,  4535,   193,    50,   725,   593,
     619,  5661,  6165,  5055,   315,  4680,  6164,   573,  4027,    33,
    2566,  2410,   225,   293,   144,    33,   472,    41,   336,   120,
     145,  1954,  1955,    41,     7,   173,    50,   126,  6259,   143,
     577,    40,    50,   627,   315,   160,   404,   394,  4414,   587,
    4266,   208,   192,  2461,  5354,    33,   173,   775,   315,  6004,
      10,  5674,  6034,    41,   510,  5817,  5679,  5680,   786,   447,
     448,   544,    50,  2496,   600,  2671,   196,  1989,  1997,    63,
     466,  4550,  2471,   315,  5750,  1997,   287,   582,  4268,   128,
     293,   141,   786,  5845,   788,  2623,   514,  5849,  3252,  5399,
      35,    36,    37,  6048,    39,   458,   582,   315,    40,   315,
    2671,   786,   786,   788,   788,   154,  2114,   387,    50,  6078,
     676,   479,  6081,    55,    33,   577,   196,   218,    67,  4390,
    4556,   385,    41,   742,   793,  4561,   225,  2698,  2061,   557,
     131,    50,  4568,  2066,  5794,  2534,   619,   788,  2694,    75,
     458,   791,    33,  2076,  2543,    33,   294,   141,   315,    33,
      41,   160,   208,    41,  2087,   208,   465,    41,  2696,    50,
     696,   358,    50,   682,   311,   546,    50,   718,  2671,   786,
     721,   788,   101,  3417,   387,    57,   321,  4691,  2100,  1479,
    3077,   141,  4696,  4697,   208,    33,  2100,   196,   497,    71,
     208,    73,  4556,    41,   293,  2698,  5958,  4561,  5840,   595,
    5842,  5905,    50,   566,  4568,   752,  2139,   577,  2141,   151,
     666,   156,   339,  5836,   328,   751,   225,  3324,  2904,   499,
     208,   150,    33,    33,  2157,   167,  5138,  5139,  2161,  2162,
      41,    41,    10,  5995,    33,    33,  2169,  2170,    33,    50,
      50,   788,    41,    41,   119,   793,    41,  2680,  5972,  5973,
    6012,    50,    50,  2686,   196,    50,  2880,   387,  2191,   315,
     385,   618,   315,   572,  2697,   693,  2199,  2200,  2201,  2202,
    2203,  2204,  2205,  2206,  2207,  2208,   672,   152,   127,  2194,
     786,  2214,   788,   788,   293,  2194,   499,  6269,  2194,   208,
     752,   315,  5204,  2194,  5206,   244,   238,   315,  2231,  2232,
     236,  2234,    53,   673,  4026,   788,   214,  5967,  6112,    10,
    5362,  6280,  6116,  5770,  2194,   729,   209,   208,   226,   769,
     208,  1165,  2255,   654,   208,   232,   788,   315,   177,   425,
     417,    10,  3386,   714,  2267,   599,  5249,  5979,   417,   141,
    4046,  4047,  6324,  5508,   653,  2194,   786,   214,   788,    33,
    1194,   788,   733,    33,  6141,  6142,  4185,    41,  4187,   226,
     208,    41,  5275,   141,    33,  3262,    50,   296,  2974,   268,
      50,   501,    41,   281,  2932,    57,   532,    33,   387,   793,
     788,    50,   752,   788,  2317,    41,   769,  6369,    55,  6113,
       3,    73,   241,  6117,    50,  6157,   315,   208,   208,  2332,
      47,   268,  2150,  2974,  2337,   156,   493,   314,   785,   208,
     208,    33,   532,   208,   493,  4274,   788,   292,    31,    41,
     417,    33,   289,   225,   315,  2358,   127,   315,    50,    41,
     323,   315,  2365,    33,  2367,  2368,  2369,    42,    50,  4081,
    2373,    41,  2375,   707,  5901,   786,  2961,  2961,   127,   545,
      50,   788,  6094,  3120,   785,  6097,   144,    33,  2391,   106,
     342,   693,   618,  6334,   313,    41,    47,   315,  3728,  2402,
    2403,  2974,   603,  6304,    50,   786,    47,  2410,   360,    33,
    3166,   774,   775,  5396,   151,   367,  3172,    41,   387,  2237,
     499,   145,  6296,  6255,    99,  3392,    50,    47,   618,  3801,
     167,  3187,   793,  2898,   315,   315,   160,   788,   196,  5421,
     458,  3801,    40,  6384,   746,    33,   315,   315,   674,  3779,
     315,   788,   603,    41,   208,   106,    33,    55,   208,  4719,
     769,  3246,    50,  3071,    41,   106,   537,   538,  2471,   208,
     541,   542,   543,    50,  3104,   758,   788,  2480,   307,   311,
     681,   310,   208,  2486,   674,   503,   106,  2490,  3665,   467,
    2308,  3866,  2961,  5248,  5616,  3866,  4942,  2567,  5082,  5083,
     788,   238,   788,   440,  3681,  2575,  3193,   785,  2511,  2978,
    3687,  3688,   758,  6307,  6308,   793,   208,  2335,  6419,  6420,
    4861,  5027,  3646,    63,    33,  4971,   208,  5282,    33,  3009,
     681,  2534,    41,  3837,  3014,   775,    41,  3841,   208,   785,
    2543,    50,    31,  3023,   353,    50,   786,  5086,   788,  3029,
     750,   788,  3676,   151,  1054,   573,   776,   777,   778,   779,
      33,   315,   208,  3157,  4986,   315,  3160,  3993,    41,   167,
    3164,  2574,    51,  1073,  1074,  3987,   315,    50,   404,   718,
      47,  2566,   217,   722,   208,  4080,    33,  2566,    57,   315,
    2566,   153,    33,  5027,    41,   421,    33,    33,   196,  5581,
      41,   141,    71,    50,    41,  2608,   168,  2610,   136,    50,
    3079,  3396,  2615,    50,    50,   147,  2566,    88,  2621,  2622,
     208,    47,   431,   315,  3380,   104,   158,    53,  2698,    55,
     158,   208,   328,   315,   166,  2638,  2639,   578,   579,   106,
     238,   154,  5648,   117,   118,   315,   281,  2566,  4574,  4575,
      33,  5166,   287,  4028,  4080,  5101,  5171,  4028,    41,  2662,
    4086,  3337,   788,  2666,   775,   788,  4092,    50,  3638,   315,
     682,  4662,  4637,  2676,  3154,   786,  3156,  4603,   206,   785,
    2683,  1439,  3162,  3163,  1442,  1443,  2671,   793,  2691,    33,
    2693,   315,  2671,    65,   788,  2671,  3337,    41,   786,   208,
    4030,  4627,   128,   208,  6312,  6313,    50,   514,    33,  2694,
    4675,  4722,    33,  2698,   655,  2694,    41,   249,  2694,  2698,
      41,  2671,  2698,  4078,  4079,    50,  3195,   315,   685,    50,
     788,   205,   271,  6223,  4089,   208,   693,   258,   315,  3227,
    3228,   698,   743,   282,  2694,   277,  6354,   148,  2698,  2741,
     151,    33,  2671,   178,   769,   770,   771,  2741,  2468,    41,
    2566,   208,  2472,    81,  3337,    33,    33,   208,    50,    33,
      33,   208,  3739,    41,    41,  2694,   785,    41,    41,  2698,
    3474,  3457,    50,    50,   736,  4643,    50,    50,   344,  4647,
    5545,  3485,  3486,  3469,  5378,  5379,  3490,  3473,   423,   788,
    3385,  3385,    19,    20,    33,   430,   315,  5562,   282,  5084,
     315,   212,    41,  2586,  2587,  6305,  3457,    28,    33,    30,
    5575,    50,  5577,  6374,  6375,   208,    41,   788,  3469,   147,
     788,    50,  3473,   182,   788,    50,   352,   353,   311,   299,
     158,    23,   315,   421,    26,    27,  2849,   141,   166,    31,
      22,  2854,  3546,   652,  3323,  5301,   128,    29,  6348,    31,
    3647,   786,  3647,   788,   208,  2671,  5312,  2870,   315,   786,
     788,   788,    35,   389,   315,   193,    39,  3571,   315,   752,
    6467,    44,   675,   208,  3457,   203,    23,   208,  2694,    26,
      27,   675,  2698,  6155,    31,  1349,  3469,  6387,   464,  2898,
    3473,  1355,  1356,   281,    33,    33,  2898,   788,   788,  2080,
    2081,   710,    41,    41,   713,   431,  3385,    33,   128,   788,
     788,    50,    50,   788,   786,    41,   208,   786,  6418,   788,
      33,   249,   315,   191,    50,   113,   114,   115,    41,   792,
     208,   208,   741,   145,   208,   208,   667,    50,    33,   145,
     749,  2954,  2955,    33,   145,   786,    41,   788,  2961,   277,
     312,    41,  2965,  2966,   786,    50,   788,   127,    24,    25,
      50,   315,    28,   231,    30,  2978,    32,  2980,    24,   208,
    2983,  2984,    28,   793,    30,  4258,    32,  6086,  6087,  2974,
     315,    33,   740,   208,   315,  2974,    33,   793,  2974,    41,
     786,  3470,   788,  3472,    41,  3008,  3009,   120,    50,   480,
     268,  3014,   361,    50,  4943,  4390,  3703,  3704,   662,  4390,
    3023,   281,    33,  4607,  2974,   440,  3029,  3703,  3704,    33,
      41,  4304,   268,   315,   788,   749,   287,    41,   788,    50,
     787,   788,    33,  4010,   785,  5655,    50,   315,   315,   788,
      41,   315,   315,  3056,   114,  3043,    19,    20,   407,    50,
     786,   792,  3703,  3704,   474,    33,    33,   792,   283,  3072,
    4247,   128,  4249,    41,    41,   788,  3079,  3080,  3081,   208,
     208,  3837,    50,    50,   682,  3841,   315,   141,  4265,  5100,
    4214,   607,   208,    24,    25,    26,   788,    28,   151,    30,
     315,    32,    36,    37,   786,   208,  3109,    33,   624,  3737,
    4262,   751,   752,  3116,   754,    41,   756,  3120,   788,   786,
     591,   788,   652,   208,    50,  3971,   611,   598,   208,   387,
    3703,  3704,    24,   604,   650,   785,    28,  5063,    30,   488,
      32,   399,   788,  3146,    33,  3610,   479,  3150,  3151,  3152,
     589,  3154,    41,  3156,   785,   709,  2974,    33,  3161,  3162,
    3163,    50,    33,  3166,   788,    41,   208,  5613,  2974,  3172,
      41,   208,   585,  4965,    50,   691,   786,    33,   788,    50,
     785,   144,  4512,   785,  3187,    41,   315,   315,  3191,   786,
     741,   788,  3195,  3196,    50,   785,   203,   208,    33,   315,
     788,   333,   551,  3021,   208,   786,    41,   788,   679,  5868,
      33,   788,   315,   333,  3032,    50,   333,   208,    41,   568,
     569,   555,   519,   520,   573,   574,   575,    50,    24,    25,
     315,  5793,    28,   196,    30,   315,    32,   534,   287,   536,
     208,   208,   203,  3246,   502,  5366,  3874,    33,    88,  3252,
     786,  5262,   788,   788,  4534,    41,  4536,    71,    33,    73,
     785,  4046,  4047,   786,    50,   788,    41,   283,   361,  4025,
     741,    15,   786,   315,   788,    50,  3346,  3347,   315,   788,
      33,    33,   208,   788,  3362,    99,  3104,   431,    41,    41,
     792,   785,   641,    33,  3297,  3971,    73,    50,    50,    47,
    3118,    41,  3305,   786,   315,   788,   786,   785,   788,    33,
      50,   315,   743,  5313,   786,   573,   788,    41,    38,   208,
    3323,    33,   743,   786,   315,   788,    50,   785,   785,    41,
    3971,   785,   208,   630,   631,   785,   299,   208,    50,   786,
    3820,   786,   691,   788,    31,   786,    57,   315,   315,   786,
     537,   538,   208,   128,   541,   542,   543,   785,  3337,  3362,
      71,  3337,    73,   785,  3990,  5291,   786,   785,   788,  3372,
     213,  3374,  5818,   208,   785,   213,  5387,  3380,  3847,   786,
    3383,   788,  3385,  3386,  4714,   208,   226,   213,   786,   315,
     788,   785,    33,  3396,  5654,   786,   785,   788,  3971,   785,
      41,  3889,  3890,   786,  3892,  3893,    33,  3225,    33,    50,
    3879,  3880,    53,   213,    41,  3233,    41,   786,  3337,   788,
     785,   785,   208,    50,   387,    50,   315,   786,   268,   788,
    5726,   785,   785,   208,  4221,  4222,  4221,  4222,  4711,   315,
      33,    33,   786,   786,   315,   788,  3915,   785,    41,    41,
     786,   786,   788,   788,   785,   208,   208,    50,    50,   315,
      75,   786,   786,   785,   788,   786,   785,  3470,   208,  3472,
     757,   786,  3457,   788,  6023,  3451,  3452,  3453,  3457,   785,
     315,  3457,   793,   786,   208,   788,   786,   785,   788,  4183,
    3469,   769,   315,  3469,  3473,   785,   208,  3473,   786,   339,
     788,  3451,  3452,  3453,   786,   785,  5627,  3457,  5825,    33,
     785,   126,  4689,  4690,  5831,  5832,  5637,    41,   786,   786,
      33,  5016,   786,   786,   458,   786,    50,   788,    41,   315,
     145,  3337,  3451,  3452,  3453,   785,   785,    50,   501,  4326,
     315,  4326,   785,   119,   101,   160,   786,   123,   788,    15,
    3469,   127,   785,   367,  3473,   958,   959,   786,   961,   962,
     963,   785,   315,   315,   786,   968,   788,   208,   786,   503,
     788,  4199,   786,   387,   788,   315,   152,   417,   786,   785,
     788,   208,  3585,   208,    15,   786,  4998,   788,   785,   788,
    5016,   315,   168,   150,   203,   306,   307,   173,   128,    47,
     440,   785,   785,   315,  4360,  4361,    33,  5572,   356,   785,
     225,  3610,  3604,  3616,    41,   208,   208,   786,  3610,   788,
      24,    25,    26,    50,    28,  5000,    30,   467,    32,   785,
     206,   342,   566,   786,   786,   788,   788,  4814,  3641,  3457,
    5640,   589,  5653,  3646,  3647,  3451,  3452,  3453,   786,   360,
     788,  3457,   400,   101,   402,   785,   367,   786,   786,   785,
     785,  4401,  4402,  3469,   785,  4405,  4406,  3473,    33,   203,
     786,  4411,  4412,  3676,   315,   609,    41,  3747,    88,    19,
      20,   392,   145,   786,   208,    50,    33,   786,   315,   788,
     315,   786,  3691,   788,    41,   208,  3699,   254,  3701,  3691,
     258,   786,   150,    50,   413,   788,  3691,  3691,   786,  4337,
     788,   785,  3691,  6262,   785,  3691,   292,   785,  3703,  3704,
    3691,   785,   315,   315,  3703,  3704,  3796,  3703,  3704,  3691,
    3733,  3691,  3703,  3704,  3691,   785,  3691,  3691,  3691,   296,
     785,  3691,  3745,    81,   786,   785,  3816,   495,   305,   786,
     785,   785,  5763,  3703,  3704,   675,   786,   314,   788,   785,
     785,    24,    25,   128,   785,    28,   729,    30,   785,    32,
     385,   328,  3691,   482,   786,   786,   788,   786,   464,   788,
     127,   208,   786,   785,  3703,  3704,   785,   750,  5788,   785,
     785,   315,  6109,   693,   786,   786,   788,   545,   786,   786,
     788,   788,   315,   785,   214,   145,   254,   127,   786,   147,
     788,   785,     6,     7,  5935,   785,   226,  3820,   786,   786,
     158,   785,  3825,   663,    18,   785,   785,   667,   166,    72,
     785,   785,    75,   785,  3837,   769,   770,   771,  3841,   548,
     785,   550,   785,   208,  3847,   593,   785,   556,   296,   785,
     785,   693,  3855,   785,   709,   193,   283,   305,   785,    53,
     786,   208,   785,   785,    33,  4345,   314,   785,   785,   785,
     785,   281,    41,   785,    33,   785,  3879,  3880,  6003,   289,
     328,    50,    41,   126,   785,  3691,   129,    81,   315,   785,
    4584,    50,   785,  4680,    53,  4680,   681,   786,    88,  3969,
     785,   741,   145,  4523,   517,   785,   519,   520,   617,   749,
     786,   249,  3915,   785,   324,   786,   785,   160,   785,   785,
     785,   534,   785,   536,   387,   119,   785,   785,  3931,   123,
     786,   394,   785,   127,  4610,   683,   514,   433,   143,   277,
     119,   788,   136,   137,   123,   177,   409,   788,   127,   143,
     315,   786,   661,   147,   788,   145,   587,   705,   152,   128,
     154,  4655,   361,   786,   158,   127,   788,   395,   315,  4610,
     788,   434,   166,   152,   168,   788,  3794,   584,   704,   173,
    5945,   769,   225,     7,   599,   749,   467,   467,   785,   168,
      10,   217,  3971,   788,   173,  3971,    31,   136,   296,   193,
     786,  4004,   151,    65,  6450,  3990,   582,   394,    42,   203,
      42,  3990,   206,   409,  3990,     3,   588,   630,   631,   262,
     749,   793,  4025,   311,   214,   736,   431,   206,   785,   785,
     440,   224,   226,   786,   786,   392,   226,  4610,   785,   208,
    3990,    15,  4045,  4046,  4047,   754,   786,   387,  4051,   208,
     293,   245,  3971,   785,   394,   249,   765,   467,    33,  4062,
     785,   127,   786,   793,   258,   792,    41,   785,  6328,   409,
     127,  3990,   353,   792,   786,    50,   539,    54,  6043,   127,
     788,   120,   177,   277,   648,  3903,  3904,  3905,  3906,   552,
    3908,  3909,   707,   793,   434,  4071,   793,   709,   292,   289,
     333,   786,   333,   333,   298,   299,    44,   570,   141,   510,
     311,  5523,  5524,   292,  5526,   566,   128,   154,   312,   311,
     314,  4071,   785,  6088,   177,   792,   788,   793,  3946,  3947,
     785,  3949,    47,  3951,  3952,  3953,  3954,  3955,  3956,  3957,
     431,  3959,   385,    47,   786,  3963,   315,   786,   786,   106,
     337,   788,  4071,   128,   786,   653,   315,   793,   786,   786,
     786,   786,  4165,   127,   127,  3971,   786,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,   786,   793,
    6191,   786,   785,   167,  3990,   785,   136,   788,  4816,   287,
     788,    71,   127,   786,   786,   776,    73,  4200,  6198,   539,
      33,   788,   106,   793,   693,   127,  6466,  2530,    41,   776,
     786,  4214,   552,  4216,   151,  5392,    96,    50,  4221,  4222,
      53,  4224,   494,   706,  4227,  4228,  2549,   455,   785,   109,
     570,   127,   695,   208,   788,  2558,  4864,   439,   693,   127,
     786,  2564,   785,   788,   785,   125,   154,   710,   431,  2572,
     440,     3,   151,   663,   364,   788,   217,   239,  2581,   514,
     514,  2584,   786,   514,   514,  4071,   514,   122,   361,   463,
     514,   788,   788,   786,   769,   155,   120,   467,   681,   287,
    4283,    47,  4274,  4275,   678,   127,   601,   749,   158,   786,
     158,  4779,  4780,  4781,  4782,  4783,  4784,  4785,  4786,  4787,
    4788,   786,  4790,  4791,  4792,  4793,  4794,  4795,  4796,  4797,
    4798,  4799,   786,   786,  4802,  4803,  6327,   786,   210,    65,
     785,  4324,  5734,  4326,  5736,  5737,  4329,  4330,   788,   793,
     137,   741,  6332,   251,   443,    33,   793,   785,    43,   749,
     315,   669,  4345,    41,   422,  6310,   201,    18,    19,    20,
     785,   484,    50,   484,   234,   695,   599,  4360,  4361,   788,
     264,   600,   266,    68,  4367,   786,   788,  4445,    68,   283,
     710,   740,    77,   277,    22,   208,    24,    25,   785,   310,
      28,    29,    30,    31,   310,   392,    30,    57,   582,   293,
     237,   708,   222,    98,    92,    93,    94,    95,   788,   128,
      71,   206,    73,   582,   203,   788,  4224,   788,   785,  4878,
      63,  4899,   287,   146,   154,   295,  4904,   607,   123,   654,
      42,   431,   127,   786,  6435,   130,   786,   786,    99,   128,
    4508,   786,   250,   776,   786,   290,   141,   786,  6449,   775,
     138,   139,   140,   785,  6455,    18,    19,    20,   793,   786,
     785,  6462,   157,    40,   786,   786,  4936,   786,   788,   649,
     165,   786,   786,   786,   707,   786,   788,    40,   786,   788,
     786,   785,   177,   786,   145,   786,   786,   667,   786,   786,
      53,   786,   315,   785,   788,   788,   786,  4490,   379,   786,
     786,   189,   190,   786,   779,   217,   201,   786,   785,   596,
      73,   769,    31,  2675,    31,  4508,    31,   431,  4511,   788,
     208,  4514,   131,   128,   788,   788,   793,   793,   105,   127,
    4338,   127,   793,   713,  4523,   508,    99,   788,   788,   793,
     410,  4523,   412,   128,   786,   788,   241,   618,   258,  4523,
     786,   246,   247,  5137,   215,   363,  4538,   788,   788,  4552,
      53,   741,   788,   371,   100,   253,    47,   412,   675,   749,
     366,   788,   756,   788,  5251,   127,   581,   158,   386,   158,
     756,   511,    81,   553,   478,   769,   443,   785,   396,   397,
     398,    81,   123,  5429,    18,    19,    20,   160,   406,   561,
     268,   268,   786,   662,   788,   268,   268,   791,   792,   268,
     314,   272,   273,   274,   191,   203,    40,   785,   313,   196,
     127,   769,   769,   769,    18,    19,    20,   315,   316,   769,
     740,   292,   769,   196,   769,   769,   769,   769,   201,   769,
     203,  4610,  4635,    88,  4610,   769,    40,   769,   147,    73,
     769,   769,  5236,   769,   231,   769,   769,   147,   353,   158,
     769,   769,   225,  5122,   769,   769,  5144,   166,   158,   156,
    4663,   769,   769,   769,   769,    99,   166,   317,  5156,    73,
     375,   295,   793,  4676,   129,   786,   347,  4680,   349,   769,
    4683,   268,   562,   563,   193,   786,  5254,   786,   531,  5158,
     145,  4610,   786,   193,   203,    99,   367,   788,   369,   431,
     299,   168,   581,   203,   793,   788,    34,   333,   793,   793,
    4713,   287,   287,   788,   761,   413,   387,   510,   393,  4722,
     293,   154,   431,   394,  4723,   786,   160,   153,   153,   547,
     793,  4734,   786,   213,   786,   786,  4728,   786,   409,   775,
     249,   559,   786,   448,   775,    65,   786,   793,   419,   249,
     793,   702,   287,  5429,   339,   287,   160,   786,   788,   785,
     785,   589,   196,   434,   241,  4768,   128,   201,   277,   203,
     128,  4774,   793,   496,   347,  4778,   793,   277,   232,   785,
     684,   685,   686,   687,   482,   785,   775,    30,  5429,   786,
     299,   225,   196,   788,   785,   321,   792,   201,  4801,   203,
     387,   769,   769,   788,  4610,   739,   785,   262,   549,   203,
     333,  5778,   399,   126,   387,   203,   203,    50,   287,   158,
     491,   225,   158,   717,   786,   409,   281,   645,   788,  5423,
     501,   409,  5508,  5427,  5428,    31,    31,    31,   293,   240,
      53,   721,   660,   283,  5485,  4663,  4849,    30,    30,   785,
     548,   465,   550,   785,   793,  4858,  5429,   785,   556,   293,
     245,   177,   589,   718,   776,  4683,   721,  5508,   539,   786,
     776,   143,   353,   793,    95,  4878,   155,   155,    30,   786,
     698,   552,   587,   786,   339,   786,   786,   730,   793,   293,
     785,   788,   206,   786,   712,   250,   469,   786,   788,   785,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,   153,  5485,   347,   786,   502,    65,   769,   128,   617,
     785,   592,   785,  4926,    31,    31,   499,   598,   232,   788,
     786,   788,   177,  4936,   311,  5508,   779,   785,  4941,   785,
     232,   558,   695,   347,   695,   203,   409,   785,   785,   299,
    3122,  4943,   299,   387,   785,   379,    53,   786,   392,  4962,
      31,   788,   417,   661,   788,   450,   287,   208,    53,   786,
     443,   251,   212,   131,   786,   506,    65,   168,  6155,  5244,
    5245,  4973,  5247,   387,   786,   656,   573,  5252,   256,  4973,
    5255,   314,   663,  5258,  5259,   786,   508,   648,   206,   788,
     122,  5266,  6414,  5268,    65,   786,   786,   348,   363,   788,
     169,  4987,  5277,   217,   786,   786,   371,   786,   314,   786,
     788,   451,   173,   785,   695,  5103,   769,   788,   167,   760,
     747,   386,    19,    20,   203,    53,  3208,  4987,   422,   710,
     711,   396,   397,   398,   422,   217,   247,   786,   681,   247,
     299,   406,   723,   299,   170,   785,   754,  5060,  4876,    30,
      30,   598,  5703,   217,   217,   499,   385,   765,  4987,   217,
      57,    65,   217,   159,   710,   159,   217,  5671,   710,   201,
     217,  5550,   597,   788,   217,   217,   217,   608,   203,   203,
    5718,   489,   665,   387,   128,   499,   252,  5100,   443,  6276,
    5103,   589,   314,   203,  5182,   154,   431,  5099,  5111,   502,
    5180,   553,   786,   618,   957,  5099,   155,   788,   786,  5122,
     786,    71,  5125,   786,  5127,   786,   788,    65,   786,   786,
    5703,   407,   786,   788,   793,    50,   788,   786,   785,  5142,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,   785,   793,   659,   785,  5158,   786,    31,    53,   379,
     785,    65,   785,    65,   117,    65,   450,   785,   290,    30,
    5846,   331,   141,    55,   160,  5178,    72,   747,  5181,    75,
     747,  4987,   225,   281,   391,   758,  5189,   674,   426,   314,
     786,   428,   547,   553,   649,   788,   449,   690,   786,   423,
     786,   160,   785,   785,   559,  5846,   786,   788,   663,   588,
     236,   785,   667,   785,   160,   786,   785,    53,   786,  5246,
     431,   105,   788,   203,   788,   785,   127,  5868,   786,    31,
     126,   665,  5235,   129,  5261,    65,    65,    65,   413,   127,
     122,   287,   127,   160,  5271,  5248,  5249,  5250,  6004,   145,
     788,  5278,   314,  5280,  5281,   287,   786,  5260,   713,  5262,
     788,   665,   589,   654,   160,   648,  5269,  5270,   786,   606,
     786,   444,  5275,  5846,   606,   785,   368,   299,   785,  5282,
     663,  6458,   404,   270,  5287,   793,   741,  5552,    72,   785,
     412,   785,  6048,   792,   677,  5868,   120,   120,   793,  5302,
    5118,   793,   792,   792,   786,   660,   281,    73,   287,   287,
     287,    72,   589,   281,   697,   690,    72,    15,   160,   201,
      50,   217,   786,    30,   758,   701,   716,   788,   788,   225,
     786,    18,   785,    65,    65,   218,  5154,  5155,   785,   785,
     144,   724,    99,   698,    99,   217,  5164,     6,   729,   432,
    5326,   296,   654,   589,   758,   589,   785,   712,   422,   422,
    5178,   434,   785,   180,   786,   786,   262,   785,   788,   785,
     785,   160,  5375,  5191,   707,   747,  5326,   160,   296,   201,
     340,    99,    53,  6070,  5387,  5388,   792,   792,   785,   154,
     702,   594,   203,  5396,   786,   430,   785,   293,  6154,   785,
     198,   743,  5405,   785,   431,  5408,  5409,  5326,   290,   353,
    5413,   127,   426,   207,  5417,   786,   785,   339,  3590,   173,
     590,   786,  5425,   786,   785,   218,   785,  5430,   247,   484,
     251,   788,   788,   420,   786,   786,  5905,   786,   332,   203,
     203,   431,    19,    20,   112,   203,    65,   434,   786,   436,
    5429,   296,   101,  5429,   654,   203,   203,   143,   841,  5537,
     116,  5539,  5950,  5951,   436,  5953,  5954,  5955,  5956,  1312,
      30,   854,   258,   788,   785,  1318,   859,  3691,  5296,  3092,
      57,   468,  3965,  5309,  5305,  6452,  3813,  5830,  5503,   385,
    4423,  5307,  5870,  6032,   481,  6264,   879,  1484,  2163,  3990,
    5189,  4497,   777,  3974,  5103,  4508,  5485,  2151,  2590,  5485,
    5429,  5538,  3113,  5516,  4292,  5518,  4061,  4041,  2497,   843,
    5326,  2694,   404,  5693,  2695,  5692,  2696,   514,  5566,  5508,
     412,  5475,  5508,  4444,  6003,  4925,  4672,  5371,  4676,  5060,
    5543,  5544,  5545,  5546,  2940,   532,  6076,  5550,  5551,  5640,
    5553,  6193,  6332,  6289,  5958,  5558,  5559,  5638,  1401,  5562,
    3224,  1472,  4920,  5243,  5567,  5568,  5485,  5852,  5287,  5417,
    4926,  5574,  5575,  5540,  5577,   958,   959,  5136,   961,   962,
     963,  6313,  5585,  6143,  6154,   968,  6048,  6037,  6037,  5508,
    6037,  6037,  4607,  4559,  6082,  1637,   718,  6085,  6157,   721,
    4081,  3354,  5605,  6070,  2532,  6093,  4169,  4644,  6096,   731,
    6338,  5614,  4647,  4639,  5432,   496,   496,  6307,  5837,  6308,
    6089,  6117,  3805,  5429,   611,  3797,  6101,  6113,  5747,  5536,
    5448,   618,  2557,  1016,  4327,  6263,  5534,  1020,  4925,  5284,
    1493,   628,  5720,  1486,  1900,  2347,  3793,  5917,  3788,  3252,
    5653,  5721,  6067,  5723,  1497,   642,  5751,  2514,  3641,  4051,
    5663,  1044,  3081,  4541,  5667,  3416,   542,  1403,  1456,  3604,
    1053,  5674,  5675,   783,  3734,  4970,  5679,  5680,  6143,  5485,
    1443,  1221,  3870,  3650,  4663,  3545,  5689,   674,  4199,  3541,
     677,  2084,  2141,   270,  1993,  4108,  4999,  2003,  6036,  6266,
    5692,  1971,  5508,   599,   281,  6375,   693,  6374,  2403,  1401,
    2398,  1401,  5715,  1401,  1401,  1401,  5521,  5208,  5721,  4716,
    5723,  6040,  5725,  5111,  5703,  6041,  3201,  5703,  1977,  2393,
    2419,  4192,  3857,  4858,  4857,  3907,  5935,   724,  4190,  5763,
    5366,  5086,  5362,  1434,  6213,  3873,  5000,  5750,  3866,  1132,
    1133,  1134,  1135,  5756,  5383,  5758,   789,  1464,  4626,  4864,
    5763,  3195,  1145,   514,  3372,   706,  1311,  5845,   496,  5772,
    3942,  5849,  3944,  3945,  2660,  3409,  4538,  4728,  3950,  3900,
    5783,  5784,  5117,  4715,  5703,  5653,  3958,  4713,   887,  2608,
    3962,  6327,  3964,   888,   697,  5865,  3052,  5867,  5868,  2223,
     697,  3053,  3726,  1459,   697,  3107,  5809,  5689,  2336,  5399,
    4544,   707,  6330,  1905,  5213,  6380,  5530,  5820,  6287,  6455,
    1004,  3406,  6462,  5826,  3072,  5387,  3703,  3457,  3704,   696,
    3705,  5834,  2986,  5836,   696,  6463,   718,  2701,  3695,   721,
    3696,  2367,  3700,   420,  4233,  2676,   694,  5850,  1202,   731,
    4433,  2163,  1893,  3246,  3646,  1893,  1236,   434,  5861,   436,
    5863,  4878,  5865,  4976,  5867,  3808,  5610,  5846,  4445,   737,
    5846,  1345,   520,   496,  1000,   496,   496,   973,  4535,  4064,
    2697,  6163,  5909,  5868,   992,   973,  4732,  6164,  6316,  5868,
    5893,   468,  5868,  4342,  3814,  5703,  5703,  5703,  5710,  5695,
    5903,  5694,  5905,   879,   481,  5510,  1831,    -1,  5911,  5912,
    5913,   992,    -1,    -1,    -1,    -1,    -1,  5995,  5868,    -1,
      -1,    -1,  1048,    -1,    -1,    -1,    -1,  5846,    -1,    -1,
      -1,    -1,    -1,    -1,  6012,    -1,    -1,   514,    -1,    -1,
      -1,  1324,    -1,    -1,  1327,    -1,    -1,    -1,    -1,  5868,
      -1,    -1,    -1,    -1,    -1,   532,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5969,    -1,    -1,    -1,
    6439,  5974,    -1,    -1,    -1,  6444,    -1,  5980,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1835,    -1,  1837,    -1,    -1,    -1,    -1,    -1,
    6003,    43,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    43,  1138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,  6031,    -1,
      -1,    -1,    -1,  6036,   611,    77,    68,  6040,  6041,    -1,
    5846,   618,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,   628,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,  5868,    -1,  6067,   642,    98,    -1,    -1,    -1,
      -1,    -1,    -1,  6076,    -1,    -1,    -1,    -1,    -1,  6157,
      -1,   123,  1465,    -1,    -1,   127,  6089,    -1,   130,    -1,
      -1,   123,    -1,    -1,    -1,   127,    -1,   674,   130,   141,
     677,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   141,
      -1,    -1,  1238,    -1,    -1,   157,   693,    -1,  6121,  1502,
      -1,    -1,    -1,   165,    -1,   157,  6129,    -1,  6131,  6132,
      -1,    -1,   709,   165,    -1,   177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6143,   177,    -1,   724,    -1,    -1,
      -1,  6143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
      -1,    -1,  5990,    -1,    -1,    -1,    -1,  6255,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6191,  6259,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,  1328,    -1,   246,   247,    -1,    -1,    -1,   241,
    6213,    -1,    -1,    -1,   246,   247,    -1,    43,  2061,    -1,
      -1,    -1,    -1,  2066,    -1,    -1,    -1,    -1,  6231,  6232,
      -1,    -1,  6235,  2076,  6312,  6313,    -1,    -1,    -1,  6242,
    6318,    -1,    68,    -1,    -1,  6315,  6316,    -1,    -1,    -1,
      -1,    77,    -1,    -1,    -1,    -1,  6259,    -1,    -1,    -1,
      -1,    -1,  4434,  4435,  4436,  6083,  6084,    -1,    -1,    -1,
      -1,   313,    98,    -1,    -1,    -1,  6354,  6095,    -1,    -1,
      -1,   313,    -1,    -1,  6287,    -1,  4458,  4459,    -1,  4461,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,  6301,    -1,
      -1,   127,    -1,  1429,   130,    -1,  1432,    -1,    -1,    -1,
      -1,   353,  6315,  6316,  2157,   141,    -1,    -1,    -1,    -1,
      -1,   353,  6400,    -1,  6327,    -1,    -1,    -1,    -1,    -1,
      -1,   157,    -1,   375,     6,     7,    -1,    -1,    -1,   165,
      -1,    -1,    -1,   375,    -1,    -1,    18,    -1,    -1,    -1,
      -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,  2201,    -1,
      -1,    -1,    -1,  2206,    -1,  2208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,  6202,    -1,    -1,  6205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   431,
      -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,    81,
      -1,    -1,  2255,    -1,    -1,   241,   448,    -1,    -1,    -1,
     246,   247,    -1,    -1,  2267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6435,    -1,    -1,    -1,  6439,    -1,    -1,    -1,
      -1,  6444,    -1,    -1,    -1,    -1,  6449,   119,    -1,    -1,
      -1,   123,  6455,    -1,  4626,   127,    -1,    -1,    -1,  6462,
      -1,    -1,    -1,    -1,   136,   137,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   147,  4648,    -1,    -1,    -1,
     152,    -1,   154,    -1,    -1,    -1,   158,   313,    -1,    -1,
      -1,    -1,    -1,    -1,   166,    -1,   168,    -1,    -1,    -1,
      -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1903,   193,  1905,    -1,    -1,    -1,    -1,   353,    -1,    -1,
    2373,   203,    -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,  2391,   375,
      -1,    -1,    -1,    -1,   226,   587,    -1,    -1,    -1,  2402,
    2403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   245,    -1,    -1,    -1,   249,    -1,    -1,
      -1,  1964,  1965,    -1,    -1,    -1,   258,  1970,    -1,    -1,
      -1,  1974,  1975,  1976,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1985,  1986,    -1,   277,    -1,    -1,  1991,    -1,
      -1,    -1,  1995,  1996,  1997,    -1,  1999,  2000,  2001,    -1,
     292,    -1,   448,    -1,    -1,    -1,  2009,   299,  2011,    -1,
      -1,  2014,  2015,  2016,  2017,    -1,  2019,  2480,  2021,  2022,
     312,    -1,   314,  2486,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2035,  2036,  2037,  2038,  2039,  2040,    -1,  2042,
    2043,  2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,    -1,
    2053,  2054,  2055,  2056,  2057,    -1,  2059,  2060,    -1,  2062,
    2063,  2064,    -1,    -1,  2067,  2068,  2069,    -1,  2071,  2072,
    2073,    -1,  2075,    -1,  2077,    -1,  2079,   739,    -1,    -1,
    2083,  2084,  2085,    -1,    -1,  2088,  2089,  2090,  2091,  2092,
      -1,  2094,    -1,    -1,    -1,    -1,    -1,    -1,  2101,    -1,
      -1,    -1,    -1,    -1,  2107,  2108,  2109,  2110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2118,  2119,    -1,  2121,  2122,
      -1,    -1,  2125,  2126,  2127,  2128,  2129,  2130,  2131,  2132,
    2133,  2134,  2135,  2136,  2137,    -1,    -1,  2140,    -1,    -1,
      -1,   587,     6,     7,    -1,    -1,    -1,    -1,  1894,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    -1,    -1,    -1,
      -1,    -1,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2175,    -1,    18,  2638,  2639,    -1,    -1,    -1,
      -1,    -1,    46,    -1,    48,    49,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2666,    -1,    -1,    70,    -1,    72,    53,
      -1,    -1,    -1,  2676,    78,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    81,    -1,    -1,
      -1,  1987,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2002,  2003,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,   123,
      -1,   145,    -1,   127,    -1,    -1,    -1,    -1,    -1,  2292,
     582,  2294,   136,   137,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   147,    -1,    -1,    -1,    -1,   152,   173,
     154,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   166,    11,   168,    13,  2329,    -1,    -1,   173,
      18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,   193,
      -1,   215,    -1,   217,  5146,  5147,  5148,  5149,    -1,   203,
    5152,  5153,   206,    -1,    -1,  5157,    -1,    -1,  5160,    -1,
      -1,  5163,    -1,    -1,  5166,    -1,   240,    -1,  5170,  5171,
      -1,    -1,   226,    71,    -1,    73,  2849,    -1,    -1,    -1,
      -1,  2854,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2145,
      -1,   245,    -1,    -1,    -1,   249,  2152,    -1,   272,   273,
     274,    99,    -1,  2416,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2444,    -1,    -1,    -1,    -1,    -1,  2193,   292,  2452,
      -1,    -1,    -1,    -1,    -1,   299,    -1,   145,    -1,    -1,
      -1,    -1,    -1,    -1,   756,    -1,    -1,    -1,   312,    -1,
     314,    -1,    -1,    -1,    -1,   339,    -1,   769,    -1,   167,
      -1,    -1,    -1,   347,    -1,   349,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   786,    -1,   788,    -1,    -1,   791,
     792,    -1,  2965,  2966,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,   376,  5305,    -1,  5307,    -1,  5309,    -1,    -1,
      -1,    -1,    -1,   387,    -1,    -1,    -1,   215,    -1,    -1,
     394,    -1,    -1,    -1,    56,    57,    -1,    -1,    -1,    61,
      62,    -1,    -1,    -1,    -1,   409,    -1,    -1,    -1,    71,
      -1,    -1,    -1,    -1,    -1,   419,    -1,    -1,    -1,   423,
     424,    -1,    -1,  2566,    -1,    -1,   430,    -1,  5360,    -1,
     434,    -1,  2318,    -1,    96,    -1,    -1,    -1,   442,    -1,
      -1,    -1,    -1,    -1,   272,   273,   274,   109,    -1,    -1,
      -1,    -1,    -1,  3056,    -1,    92,    93,    94,    95,   463,
      -1,    -1,    -1,   125,   292,   127,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3081,    -1,
      -1,    -1,    -1,   487,    -1,    -1,    -1,   491,    -1,    -1,
      -1,    -1,    -1,   155,    -1,    -1,    -1,   501,    -1,    -1,
      -1,   138,   139,   140,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   174,   175,   176,    -1,    -1,    -1,  2661,   347,
      -1,   349,   184,   185,   186,    -1,    -1,    -1,  2671,    -1,
      -1,    -1,    -1,    -1,    -1,   539,  2422,    -1,  2424,   367,
     202,   369,    -1,    -1,    -1,    -1,    -1,    -1,   552,  3152,
     554,  2694,   189,   190,    -1,  2698,    -1,    -1,  3161,   387,
      -1,    -1,  2705,  3166,    -1,    -1,   394,    -1,    -1,  3172,
    2713,  2714,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   409,    -1,    -1,  3187,    -1,    -1,    -1,   592,    -1,
      -1,   419,    -1,    -1,   598,    -1,    -1,    -1,   582,   261,
      -1,    -1,    18,    19,    20,    -1,   434,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   253,    -1,    -1,   623,
      -1,    -1,   284,   285,   286,  2768,    -1,    -1,    -1,    -1,
     634,   635,   636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,    -1,    -1,    -1,    -1,
      -1,    -1,   656,    -1,    -1,    71,    -1,    73,    -1,   663,
      -1,    -1,    -1,   491,    -1,    -1,  2809,  2810,  2811,    -1,
      -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,   316,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   695,    -1,   355,    -1,   357,   358,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   710,   711,    -1,    -1,
      -1,   539,   374,    -1,    -1,    -1,    -1,    -1,    -1,   723,
      -1,    -1,    -1,   727,   552,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2880,    -1,    -1,
      -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,   410,    -1,
     412,    -1,    -1,    -1,    -1,  2898,    -1,    -1,    -1,  2902,
    2903,    -1,  2905,  2906,   592,    -1,    -1,    -1,    -1,    -1,
     598,  2914,   756,  2916,    -1,    -1,   413,  3380,   142,    -1,
    3383,    -1,    -1,    -1,    -1,   769,    -1,    -1,   792,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   459,    -1,   215,
      -1,  2944,   786,    -1,   788,    -1,    -1,   791,   792,    -1,
      -1,    -1,    -1,    -1,    -1,   179,    -1,    -1,  2704,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2970,   656,    -1,
      -1,  2974,    -1,    -1,    -1,   663,    -1,    -1,   500,  2982,
      -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,
      -1,    -1,  2995,    -1,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,  3006,    -1,    -1,    -1,   695,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,  3022,
      -1,    -1,   710,   711,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2779,  2780,   723,    -1,    -1,    -1,    -1,
     562,   563,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   548,    -1,   550,    -1,    -1,  3059,   579,   580,   556,
      -1,    -1,    -1,  3066,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   347,    -1,   349,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,   621,
      -1,    68,    -1,    -1,  3107,    -1,    -1,    -1,    -1,    -1,
      77,   387,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,
     617,    -1,    -1,  2869,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,   409,    -1,    -1,    -1,  2883,    -1,    -1,
      -1,    -1,    -1,   419,    -1,    -1,   113,   114,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,   434,    -1,
     127,    -1,  3165,   130,   661,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,  3641,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,   715,    -1,  3198,   718,    -1,   165,   721,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     177,    -1,    -1,    -1,  3217,   491,    -1,    -1,    -1,  3222,
    3223,    -1,    -1,   745,  2970,   501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,    -1,    -1,
    2986,    -1,    -1,   765,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3258,    -1,   754,    -1,    -1,
      -1,   485,    -1,   539,    -1,    -1,    -1,    -1,   765,    -1,
      -1,    -1,    -1,    -1,   241,    -1,   552,    -1,    -1,   246,
     247,    -1,  3745,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,   515,   516,    -1,   518,   519,   520,   521,   522,    -1,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,    -1,    -1,    -1,   592,    -1,    -1,    -1,
      80,    -1,   598,    -1,    -1,    -1,    -1,  3073,    -1,    -1,
      -1,    -1,    -1,    -1,  3337,    -1,  3339,  3340,    -1,    -1,
      -1,   101,    -1,    -1,   311,    -1,   313,    -1,    -1,    -1,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3825,    -1,    -1,    -1,  3112,  3113,    -1,    -1,
      -1,   131,    -1,    -1,  3837,    -1,    -1,    -1,  3841,    -1,
     656,    -1,    -1,    -1,    -1,   145,   353,   663,    -1,    -1,
     150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   630,   631,   375,    -1,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,   695,
      -1,    18,    19,    20,  6216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   723,  3451,  3452,
    3453,    -1,    -1,    -1,  3457,  3458,    -1,    -1,    -1,  3462,
      -1,    -1,  3465,    -1,   431,  3211,  3469,  3213,  3214,  3215,
    3473,  3474,   232,    -1,    -1,    -1,   236,    -1,    -1,    -1,
    3483,   448,  3485,  3486,    -1,  3488,  3489,  3490,  3491,    -1,
    3493,    -1,  3495,  3496,   254,  3498,    -1,    -1,   258,   259,
      -1,    -1,    99,  3506,  3507,    -1,    -1,    -1,  3511,  3512,
    3513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3521,  3522,
    3523,    -1,  3525,    -1,  3527,    -1,  3529,    -1,  3531,   289,
    3533,  3534,    -1,    -1,    -1,    -1,   296,   297,  3541,    -1,
    3543,    -1,  3545,  3546,  3547,    43,  3549,    -1,   145,  3552,
    3553,  3554,  3555,    -1,    -1,  3558,    -1,    -1,    -1,    -1,
      -1,    -1,  4025,    -1,    -1,    -1,    -1,    -1,  3571,    -1,
      68,  3574,    -1,  3576,  3577,  3578,    -1,    -1,  3581,    77,
      -1,    -1,    -1,    -1,  3587,    -1,    -1,    -1,  4051,    -1,
      -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,
      98,    -1,  3605,    -1,  3607,    -1,    -1,  3610,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3620,   215,  3622,
     587,    -1,    -1,    -1,  3627,   123,    -1,    -1,    -1,   127,
      -1,    -1,   130,    -1,   394,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,   141,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,
    3406,    -1,    -1,    -1,    -1,    -1,    -1,   165,    47,    -1,
      49,    -1,  3675,    -1,    -1,   272,   273,   274,    57,   177,
     440,    -1,    -1,    -1,    -1,   445,  3689,    43,    -1,    -1,
      -1,    -1,    71,    -1,    -1,   292,   456,   457,    -1,    -1,
      79,    80,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,
      89,    -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    -1,    -1,   103,   104,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3738,    -1,    -1,    -1,    -1,
      -1,    -1,    98,   241,    -1,    -1,    -1,    -1,   246,   247,
     347,    -1,   349,  4216,    -1,    -1,    -1,    -1,  3761,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,   123,    -1,    -1,
      -1,   127,   369,    -1,   130,    -1,    18,    19,    20,    -1,
     159,    -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,
     387,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,   157,    -1,    -1,    46,    -1,    48,    -1,    -1,   165,
      -1,    -1,   409,    -1,    -1,   313,    -1,    -1,    -1,    -1,
      -1,   177,   419,   321,    -1,    -1,    -1,    -1,    70,    -1,
    3833,    -1,    -1,    -1,    -1,   214,    78,   434,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   201,    -1,   226,    -1,    -1,
      -1,  3854,   612,    -1,    -1,   353,    -1,    99,    -1,    -1,
      -1,  4324,   622,    -1,    -1,    -1,  4329,  4330,   110,    -1,
      -1,    -1,    -1,   633,    -1,  3621,    -1,   375,    -1,   639,
      -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,
     246,   247,  3638,    -1,   491,    -1,    -1,  4360,  4361,    -1,
      -1,    -1,   281,   145,   501,    -1,    -1,    -1,    -1,    -1,
     670,    -1,    -1,    -1,   674,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   173,    -1,   431,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,   703,    -1,   324,    -1,    -1,    -1,    -1,
     448,    -1,    -1,    -1,    -1,   552,    -1,   313,    -1,  3705,
      -1,    -1,    -1,    -1,   206,    -1,   345,    -1,  3971,    -1,
      -1,    -1,    -1,   215,    -1,   354,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3990,   367,    -1,
      -1,    -1,    -1,    -1,    -1,   592,    -1,   353,   240,   378,
      -1,   598,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
      -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,  4040,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,   433,   434,  4059,    -1,   437,   656,
     439,    -1,    -1,    -1,    -1,    -1,   663,    -1,  4071,    -1,
      -1,  4074,    -1,    -1,  4077,   431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,   467,   587,
      -1,    -1,   448,   472,   473,    -1,    -1,   339,   695,    -1,
      -1,  4104,  4105,    -1,    -1,   347,  4109,   349,    -1,    -1,
     489,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,    -1,
    3866,    -1,    -1,    -1,    -1,    -1,   723,   369,  4131,    -1,
    4133,   510,  4135,    -1,  4137,    -1,    -1,    -1,    -1,    -1,
      43,    -1,    -1,    -1,    -1,   387,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   532,    -1,  4158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    68,    -1,   409,    -1,    -1,
      -1,    -1,    -1,    -1,    77,  4178,  4179,   419,    -1,    -1,
    4183,   423,  4185,    -1,  4187,    -1,    -1,    -1,   430,  4192,
      -1,    -1,   434,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,   587,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,   463,    -1,   602,   127,    -1,    -1,   130,    -1,  4232,
      68,   587,   611,    -1,    -1,   614,   615,    -1,   141,    77,
      -1,    -1,    -1,  4246,    -1,    -1,    -1,  4250,    -1,   491,
     629,    -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,   501,
      98,    -1,   165,    -1,    -1,  4268,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4028,    -1,    -1,   123,    -1,   666,    -1,   127,
      -1,    -1,   130,    -1,    -1,   674,    -1,   539,   201,    -1,
      -1,    -1,    -1,   141,    -1,  4768,    -1,    -1,    -1,    -1,
     552,    -1,   554,    -1,   693,  4778,   695,    -1,    -1,   157,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,  4331,  4332,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,   177,
      -1,    -1,    -1,   246,   247,    -1,    -1,    -1,    -1,    -1,
     592,    -1,    -1,    -1,    -1,    -1,   598,    -1,    -1,    -1,
      -1,  4364,    -1,   201,    -1,    -1,    -1,   746,    -1,    -1,
      -1,  4374,  4118,    -1,   753,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4388,    -1,    -1,  4391,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,   246,   247,
     313,    -1,    -1,    -1,   656,    -1,    -1,    -1,  4164,    -1,
      -1,   663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     353,    -1,    -1,   695,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   710,   711,
      -1,    -1,   375,    -1,    -1,   313,    -1,    -1,    -1,    -1,
    4226,   723,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   431,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   448,  4292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4581,  4582,
      -1,  4584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4597,  4598,  4599,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4610,    -1,  4612,
     448,  4614,    -1,  4616,    -1,  4618,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4630,  4631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4390,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4655,    -1,    -1,    -1,    -1,    -1,    -1,  4662,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4671,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5142,
      -1,    -1,    -1,    -1,   587,    -1,    -1,    -1,  4691,    -1,
      -1,    -1,    -1,  4696,  4697,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4715,    -1,    -1,    -1,  4719,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5250,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4808,  5269,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4920,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4933,  4934,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4987,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4997,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   677,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5055,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5082,
    5083,   724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5117,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5614,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5175,    -1,  5177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5198,    -1,  5200,   841,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5000,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5326,    -1,    -1,    -1,    -1,  5074,    -1,
      -1,    -1,    -1,    -1,  5337,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1000,    -1,  5362,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1016,    -1,  5378,  5379,  1020,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1044,    -1,    -1,    -1,  1048,    -1,    -1,    -1,    -1,
    1053,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5903,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5913,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5485,    -1,    -1,    -1,    -1,    -1,    -1,  1132,
    1133,  1134,  1135,    -1,    -1,  1138,    -1,    -1,    -1,    -1,
      -1,    -1,  1145,    -1,    -1,  5508,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6031,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5616,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5640,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5654,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5670,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1324,    -1,    -1,    -1,  1328,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5703,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5788,  1429,    -1,    -1,  1432,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5817,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5845,  5846,    -1,    -1,  5849,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1502,
      -1,    -1,    -1,    -1,    -1,  5868,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5648,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5918,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5958,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5966,    -1,    -1,    -1,    -1,    -1,  5972,
    5973,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5995,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6004,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6012,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6048,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6060,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6101,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6113,    -1,    -1,    -1,  6117,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6198,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6223,  6224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1894,  6255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1903,    -1,  1905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6305,    -1,  6307,  6308,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1964,  1965,    -1,    -1,  6328,    -1,  1970,    -1,  6332,
      -1,  1974,  1975,  1976,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1985,  1986,  1987,  6348,    -1,    -1,  1991,    -1,
      -1,    -1,  1995,  1996,  1997,    -1,  1999,  2000,  2001,  2002,
    2003,    -1,    -1,    -1,    -1,    -1,  2009,    -1,  2011,    -1,
      -1,  2014,  2015,  2016,  2017,    -1,  2019,    -1,  2021,  2022,
      -1,    -1,    -1,    -1,  6387,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2035,  2036,  2037,  2038,  2039,  2040,    -1,  2042,
    2043,  2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,    -1,
    2053,  2054,  2055,  2056,  2057,  6418,  2059,  2060,    -1,  2062,
    2063,  2064,    -1,    -1,  2067,  2068,  2069,    -1,  2071,  2072,
    2073,    -1,  2075,    -1,  2077,    -1,  2079,    -1,    -1,    -1,
    2083,  2084,  2085,    -1,    -1,  2088,  2089,  2090,  2091,  2092,
      -1,  2094,    -1,    -1,    -1,    -1,    -1,    -1,  2101,    -1,
      -1,    -1,    -1,  6466,  2107,  2108,  2109,  2110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2118,  2119,    -1,  2121,  2122,
      -1,    -1,  2125,  2126,  2127,  2128,  2129,  2130,  2131,  2132,
    2133,  2134,  2135,  2136,  2137,    -1,    -1,  2140,    -1,    -1,
      -1,    -1,  2145,    -1,    -1,    -1,    -1,    -1,    -1,  2152,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2292,
      -1,  2294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2318,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2329,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   677,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2416,    -1,    -1,    -1,    -1,    -1,  2422,
      -1,  2424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   841,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2661,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2704,  2705,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2713,  2714,  1020,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1044,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1053,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2768,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2779,  2780,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2809,  2810,  2811,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2869,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2880,    -1,    -1,
    2883,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2898,    -1,    -1,    -1,  2902,
    2903,    -1,  2905,  2906,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2914,    -1,  2916,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2970,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2982,
      -1,    -1,    -1,  2986,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2995,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3006,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1324,    -1,    -1,  3022,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3059,    -1,    -1,    -1,
      -1,    -1,    -1,  3066,    -1,    -1,    -1,    -1,    -1,    -1,
    3073,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3112,
    3113,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1465,    -1,    -1,
      -1,    -1,  3165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1502,  3198,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3211,    -1,
    3213,  3214,  3215,    -1,  3217,    -1,    -1,    -1,    -1,  3222,
    3223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3339,  3340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3406,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3458,    -1,    -1,    -1,  3462,
      -1,    -1,  3465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3483,    -1,  3485,  3486,    -1,  3488,  3489,  3490,  3491,    -1,
    3493,    -1,  3495,  3496,    -1,  3498,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3506,  3507,    -1,    -1,    -1,  3511,  3512,
    3513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3521,  3522,
    3523,    -1,  3525,    -1,  3527,    -1,  3529,    -1,  3531,    -1,
    3533,  3534,    -1,    -1,    -1,    -1,    -1,    -1,  3541,    -1,
    3543,    -1,  3545,  3546,  3547,    -1,  3549,    -1,    -1,  3552,
    3553,  3554,  3555,    -1,    -1,  3558,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3571,    -1,
      -1,  3574,    -1,  3576,  3577,  3578,    -1,    -1,  3581,    -1,
      -1,    -1,    -1,    -1,  3587,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1903,    -1,  1905,    -1,    -1,
      -1,    -1,  3605,    -1,  3607,    -1,    -1,  3610,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3620,  3621,  3622,
      -1,    -1,    -1,    -1,  3627,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3638,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1970,    -1,    -1,    -1,  1974,    -1,  1976,    -1,
      -1,    -1,  3675,    -1,    -1,    -1,    -1,  1985,  1986,    -1,
      -1,    -1,    -1,  1991,    -1,    -1,  3689,  1995,  1996,  1997,
      -1,  1999,  2000,  2001,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2009,  3705,  2011,    -1,    -1,  2014,  2015,  2016,  2017,
      -1,    -1,    -1,  2021,  2022,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2035,  2036,  2037,
    2038,  2039,  2040,    -1,  2042,  3738,  2044,  2045,  2046,  2047,
    2048,  2049,    -1,  2051,    -1,  2053,  2054,  2055,  2056,  2057,
      -1,  2059,  2060,    -1,  2062,  2063,  2064,    -1,  3761,  2067,
      -1,  2069,    -1,  2071,  2072,  2073,    -1,  2075,    -1,  2077,
      -1,  2079,    -1,    -1,    -1,  2083,  2084,  2085,    -1,    -1,
    2088,  2089,    -1,  2091,  2092,    -1,  2094,    -1,    -1,    -1,
      -1,    -1,    -1,  2101,    -1,    -1,    -1,    -1,    -1,  2107,
    2108,  2109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3833,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3854,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3866,    -1,    -1,    -1,  2175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2292,    -1,  2294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2329,    -1,    -1,    -1,  4028,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4040,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4059,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4074,    -1,    -1,  4077,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4104,  4105,    -1,    -1,    -1,  4109,    -1,  2416,    -1,
      -1,    -1,    -1,    -1,    -1,  4118,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4131,    -1,
    4133,    -1,  4135,    -1,  4137,    -1,  2444,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4158,    -1,    -1,    -1,    -1,
      -1,  4164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4178,  4179,    -1,    -1,    -1,
    4183,    -1,  4185,    -1,  4187,    -1,    -1,    -1,    -1,  4192,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4226,    -1,    -1,    -1,    -1,    -1,  4232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4246,    -1,    -1,    -1,  4250,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4268,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2661,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4388,    -1,  4390,  4391,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2705,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2713,  2714,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2768,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2809,  2810,  2811,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4581,  4582,
      -1,  4584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2898,    -1,    -1,    -1,  4597,  4598,  4599,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2914,    -1,  2916,  4612,
      -1,  4614,    -1,  4616,    -1,  4618,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4630,  4631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2944,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4655,    -1,    -1,    -1,    -1,    -1,    -1,  4662,
      -1,    -1,  2970,    -1,    -1,    -1,    -1,    -1,  4671,    -1,
      -1,    -1,    -1,    -1,  2982,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2995,  4691,    -1,
      -1,    -1,    -1,  4696,  4697,    -1,    -1,    -1,  3006,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4715,    -1,  3022,    -1,  4719,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3059,    -1,    -1,    -1,    -1,    -1,    -1,  3066,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3165,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3198,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3217,
      -1,    -1,    -1,    -1,  3222,  3223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4933,  4934,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4997,    -1,    -1,  5000,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3339,  3340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5055,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5074,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5082,
    5083,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5117,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3458,    -1,    -1,    -1,  3462,    -1,    -1,  3465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3483,    -1,    -1,    -1,    -1,
    3488,  3489,  3490,  3491,    -1,  3493,    -1,  3495,  3496,    -1,
      -1,    -1,    -1,    -1,    -1,  5198,    -1,  5200,  3506,  3507,
      -1,    -1,    -1,  3511,  3512,  3513,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3521,  3522,  3523,    -1,  3525,    -1,  3527,
      -1,  3529,    -1,  3531,    -1,  3533,  3534,    -1,    -1,    -1,
      -1,    -1,    -1,  3541,    -1,  3543,    -1,  3545,    -1,  3547,
      -1,  3549,    -1,    -1,  3552,  3553,  3554,  3555,    -1,    -1,
    3558,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3574,    -1,  3576,  3577,
    3578,    -1,    -1,  3581,    -1,    -1,    -1,    -1,    -1,  3587,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5313,    -1,    -1,    -1,  3622,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5337,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5362,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3675,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5378,  5379,    -1,    -1,    -1,
      -1,  3689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3738,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3761,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3854,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5616,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5640,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5648,    -1,    -1,    -1,    -1,
      -1,  5654,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5670,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4040,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4059,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4074,    -1,    -1,  4077,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5788,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4104,  4105,    -1,    -1,
      -1,  4109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4131,    -1,  4133,    -1,  4135,    -1,  4137,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4178,  4179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4192,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5918,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4232,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4246,    -1,
      -1,    -1,  4250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6004,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6048,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4364,  6060,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4388,    -1,    -1,  4391,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6198,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4581,  4582,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4597,
    4598,  4599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4612,    -1,  4614,    -1,  4616,    -1,
    4618,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4630,  4631,    -1,  6328,    -1,    -1,    -1,  6332,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4671,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4691,    -1,    -1,    -1,    -1,  4696,  4697,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4715,    -1,    -1,
      -1,  4719,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  6466,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4933,  4934,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4997,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5055,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5082,  5083,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5117,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5198,    -1,  5200,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5337,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5362,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5378,  5379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5616,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5654,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5670,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5918,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,     8,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,  6060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,  6143,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,   305,    -1,    -1,   308,   309,
    6328,    -1,    -1,    -1,   314,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,  6466,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    64,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,   163,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,   311,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,   196,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,   182,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,   780,    -1,    -1,     8,     9,
     785,    -1,    -1,    -1,   789,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   774,   775,    -1,    -1,     3,    -1,
     780,    -1,    -1,     8,     9,   785,    -1,    -1,    -1,   789,
     790,    -1,    -1,   793,    19,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,   134,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,   198,   199,   200,   201,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,   302,    -1,    -1,
      -1,    -1,    -1,   308,   309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
     775,    -1,    -1,     3,    -1,    -1,    -1,    -1,     8,    -1,
     785,    -1,    -1,    -1,    -1,   790,    -1,    -1,   793,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,     3,   762,   763,   764,   765,     8,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,     3,
     762,   763,   764,   765,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   786,    -1,    -1,    -1,    -1,    -1,
      -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,     8,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
       8,   762,   763,   764,   765,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,     8,   762,   763,   764,   765,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,     5,    -1,     7,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    49,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    66,    -1,    68,    -1,    70,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
     104,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,   131,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,   173,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   239,   240,   241,    -1,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,    -1,    -1,    -1,   258,   259,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     294,    -1,   296,    -1,   298,    -1,    -1,    -1,    -1,    -1,
      -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,    -1,    -1,    -1,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,    -1,   328,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,    -1,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,    -1,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,    -1,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,    -1,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,     5,    -1,    -1,     8,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,   785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    66,    -1,    68,    -1,    70,    -1,    72,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,   104,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,   131,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,
     173,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   239,   240,   241,    -1,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,    -1,    -1,    -1,   258,   259,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   294,    -1,   296,    -1,   298,    -1,    -1,    -1,    -1,
      -1,    -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,    -1,    -1,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,    -1,   328,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,    -1,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
      -1,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,    -1,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,    -1,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,     5,    -1,    -1,     8,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,
      -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    49,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    66,    -1,    -1,    -1,    70,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
      -1,   103,   104,    -1,    -1,    -1,    -1,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   239,   240,    -1,
      -1,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,    -1,    -1,    -1,   258,   259,   260,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   294,    -1,   296,    -1,   298,    -1,    -1,    -1,
      -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   314,    -1,    -1,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,    -1,   328,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,    -1,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
      -1,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,    -1,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,    -1,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      75,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   160,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   314,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   785,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   785,    -1,    -1,    -1,    -1,   790,
      -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   785,    -1,    -1,    -1,    -1,   790,    -1,    -1,   793,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   785,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   776,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    85,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   785,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
       3,   762,   763,   764,   765,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,     3,   762,
     763,   764,   765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,     3,   762,   763,   764,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,     3,   762,   763,   764,   765,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,     3,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
       3,   762,   763,   764,   765,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,     3,   762,
     763,   764,   765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,     8,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    28,    -1,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,     8,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,     8,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,     8,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     776,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   776,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   776,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    -1,    -1,    -1,
      -1,    -1,    26,    -1,    -1,   776,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,   209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   265,    -1,   267,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,   775,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    21,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,    -1,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,    -1,   149,   150,    -1,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,    -1,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,    -1,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,    -1,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,    -1,   666,   667,   668,   669,   670,    -1,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,    -1,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,    -1,   149,   150,    -1,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,    -1,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,    -1,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,    -1,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,    -1,
     666,   667,   668,   669,   670,    -1,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,    -1,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,    -1,
     149,   150,    -1,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,    -1,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,    -1,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,    -1,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,    -1,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,    -1,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,    -1,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,    -1,   149,   150,    -1,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,    -1,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,    -1,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,    -1,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,    -1,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,    -1,   666,   667,   668,   669,   670,    -1,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,    -1,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    84,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
     145,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,   236,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   254,
      -1,    -1,    -1,   258,   259,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   289,    -1,    -1,    -1,    -1,    -1,
      -1,   296,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    80,    -1,    -1,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   131,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,   145,    -1,    -1,
      -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,   236,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,
     258,   259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,    -1,    -1,    -1,    -1,    -1,    -1,   296,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    24,    25,    26,    -1,    28,    -1,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    -1,    -1,    23,    -1,    -1,    26,    27,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    85,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    76,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   128,    -1,    -1,    -1,    -1,    -1,    -1,   135,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,    -1,   762,
     763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
      -1,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,    -1,   762,   763,   764,   765,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,    -1,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,    -1,   762,   763,   764,   765,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,    -1,
     762,   763,   764,   765,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,    -1,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,    -1,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,    -1,   762,   763,   764,
     765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764,   765,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,    -1,   757,   758,   759,   760,
      -1,   762,   763,   764,   765,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,    -1,   762,   763,
     764,   765,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,    -1,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,    -1,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,    -1,   762,   763,   764,   765,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,    -1,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,    -1,   574,   575,   576,   577,   578,   579,
     580,   581,    -1,   583,   584,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,    -1,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,    -1,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
      -1,   651,   652,   653,   654,   655,   656,   657,    -1,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
      -1,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,    -1,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,    -1,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,    -1,   762,   763,   764,   765,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   311,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
      -1,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,    -1,
      -1,    -1,   355,   356,   357,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,    -1,    -1,    -1,
      -1,    -1,    -1,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,    -1,
      -1,    -1,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,   475,   476,    -1,    -1,   479,    -1,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,    -1,
     493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
      -1,   574,   575,   576,   577,   578,   579,   580,   581,    -1,
     583,   584,   585,   586,    -1,    -1,    -1,   590,    -1,   592,
     593,    -1,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,    -1,    -1,    -1,    -1,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,    -1,   635,    -1,   637,   638,   639,    -1,   641,   642,
      -1,   644,   645,   646,   647,   648,   649,    -1,   651,   652,
     653,   654,   655,   656,   657,    -1,   659,   660,   661,    -1,
     663,   664,   665,   666,    -1,   668,   669,    19,    20,   672,
     673,    -1,    -1,   676,   677,   678,    -1,   680,    -1,   682,
     683,   684,   685,    -1,   687,   688,   689,   690,    -1,   692,
     693,    -1,   695,    -1,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,    -1,   718,   719,   720,   721,   722,
     723,   724,   725,   726,    -1,   728,   729,   730,    -1,   732,
     733,   734,   735,    -1,    -1,   738,   739,    -1,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,    -1,    -1,   758,   759,    -1,    -1,   762,
      -1,   764,   765,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   311,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,    -1,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
      -1,    -1,    -1,   355,   356,   357,   358,   359,    -1,    -1,
     362,   363,   364,   365,   366,    -1,    -1,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,    -1,
      -1,    -1,    -1,    -1,   386,    -1,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,    -1,
      -1,    -1,    -1,   465,   466,   467,   468,   469,   470,    -1,
     472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
      -1,   493,   494,   495,   496,   497,   498,   499,   500,   501,
      -1,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,    -1,   574,   575,   576,   577,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,    -1,    -1,    -1,   590,    -1,
     592,   593,    -1,   595,   596,   597,   598,    -1,   600,   601,
     602,   603,    -1,    -1,    -1,    -1,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,    -1,   635,    -1,   637,   638,   639,    -1,   641,
     642,    -1,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,   653,   654,   655,   656,   657,    -1,   659,   660,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,    19,    20,
     672,   673,    -1,    -1,   676,   677,   678,    -1,   680,    -1,
     682,   683,   684,   685,    -1,   687,   688,   689,   690,    -1,
     692,   693,    -1,   695,    -1,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,    -1,   718,   719,   720,   721,
     722,   723,   724,   725,   726,    -1,   728,   729,   730,    -1,
     732,   733,   734,   735,    -1,    -1,   738,   739,    -1,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,    -1,    -1,   758,   759,    -1,    -1,
     762,    -1,   764,   765,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,    -1,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,    -1,    -1,    -1,   355,   356,   357,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,    -1,
      -1,    -1,    -1,    -1,    -1,   386,    -1,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,    -1,   574,   575,   576,   577,   578,   579,   580,
     581,    -1,   583,   584,   585,   586,    -1,    -1,    -1,   590,
      -1,   592,   593,    -1,   595,   596,   597,   598,    -1,   600,
     601,   602,   603,    -1,    -1,    -1,    -1,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,    -1,   635,    -1,   637,   638,   639,    -1,
     641,   642,    -1,   644,   645,   646,   647,   648,   649,    -1,
     651,   652,   653,   654,   655,   656,   657,    -1,   659,   660,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,    -1,
      -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,   680,
      -1,   682,   683,   684,   685,    -1,   687,   688,   689,   690,
      -1,   692,   693,    -1,   695,    -1,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,    -1,   718,   719,   720,
     721,   722,   723,   724,   725,   726,    -1,   728,   729,   730,
      -1,   732,   733,   734,   735,    -1,    -1,   738,   739,    -1,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,    19,    20,   758,   759,    -1,
      -1,   762,    -1,   764,   765,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,    -1,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,    -1,   149,   150,    -1,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,    -1,    -1,   177,   178,   179,   180,   181,   182,   183,
      -1,    -1,    -1,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,   282,   283,
      -1,    -1,    -1,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,    -1,   356,    -1,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,    -1,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
      -1,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,    -1,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,    -1,    -1,    -1,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,    -1,    -1,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
      -1,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,    -1,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,    -1,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,    -1,   716,   717,    -1,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,    -1,   757,   758,   759,   760,    -1,   762,   763,
     764,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,    -1,   356,    -1,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,    -1,   411,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,    -1,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,    -1,    -1,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
      -1,    -1,    -1,   581,    -1,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,    -1,    -1,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,    -1,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,    -1,   666,   667,
     668,   669,   670,    -1,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,    -1,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,    -1,   716,   717,
      -1,   719,   720,    -1,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,    -1,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,    -1,   762,   763,   764
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     5,     7,     8,    19,    20,    48,    49,    66,    68,
      70,    72,    80,    98,   101,   103,   104,   110,   116,   127,
     131,   135,   141,   150,   161,   171,   173,   177,   195,   204,
     207,   216,   217,   218,   227,   228,   239,   240,   241,   243,
     248,   254,   258,   259,   260,   294,   296,   298,   305,   313,
     314,   318,   319,   320,   322,   323,   324,   325,   326,   328,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   368,   369,   370,   371,
     372,   373,   374,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   462,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   574,
     575,   576,   577,   578,   579,   580,   581,   583,   584,   585,
     586,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   762,   763,   764,   765,   785,   795,   798,   799,
     800,   801,   802,   804,   810,   812,   827,   874,   913,   914,
     921,   922,   935,   965,   990,  1008,  1070,  1123,  1223,  1276,
    1279,  1289,  1294,  1300,  1313,  1316,  1322,  1325,  1330,  1337,
    1349,  1352,  1355,  1356,  1358,  1361,  1362,  1364,  1365,  1368,
    1369,  1372,  1606,  1608,  1621,  1624,  1662,  1671,  1689,  1697,
    1711,  1715,  1716,  1720,  1721,  1731,  1738,  1746,  1748,  1754,
    1757,  1758,  1790,  1812,  1832,  1835,  1836,  1837,  1838,  1839,
    1841,  1882,  1889,  1891,  1900,  1903,  1939,  1941,  1946,  1947,
    1948,  1949,  1974,  1983,  1984,  1985,  1987,  2012,  2014,  2015,
    2068,  2069,  2087,  2093,   144,   321,   351,   353,   354,   361,
     367,   369,   375,   389,   399,   414,   426,   431,   445,   460,
     461,   467,   471,   474,   477,   492,   502,   573,   587,   605,
     607,   636,   640,   650,   658,   670,   691,   694,   727,   737,
     756,   763,  1812,  1814,  1821,  1828,  1832,  1833,  1834,  1835,
    1836,  1837,  1838,  1839,  1995,    88,   226,   339,   417,   467,
     663,   667,   741,  1224,  1953,  1954,  1955,  1956,   197,   464,
     510,  1324,  1718,  1821,   966,   532,  1317,   208,  2095,  1672,
      88,   145,   214,   226,   289,   440,   467,   649,   667,   713,
     741,   749,  1620,   993,   865,   936,  1622,  1749,   145,   409,
     764,  1763,   281,   709,  1885,   991,  1324,  1124,  1009,    57,
     532,  1703,   258,   267,   910,   915,   917,  1821,   658,   741,
    1885,   995,   915,   916,   865,  1359,  1842,  1698,   915,  1890,
    1663,  1821,  1357,   992,   235,  1792,  1625,   173,   294,   689,
    1732,  1940,    40,   196,  1405,  1986,  2092,     3,    31,  1815,
     145,  1885,   759,  1943,  1607,   486,  1821,  1324,   404,   923,
    1892,   811,   603,   681,  1821,  1324,  1739,  1943,  1821,  1755,
      47,   674,   722,    47,   674,  1690,   603,   681,   352,   353,
     389,   431,   607,   624,   650,   691,  1977,  1358,  1365,  1368,
       0,     7,   796,   607,    88,   129,   145,   262,   293,   649,
     741,   844,  1201,  1202,  1620,  1953,  1954,  1955,  1956,   128,
     154,  1375,  1376,  1602,  1353,  1350,   119,   152,   292,  1367,
    1950,  1366,  1950,   452,   464,   596,   793,  1717,  1718,  1809,
    1821,  1362,  1364,    42,   793,   793,   387,  1243,  1821,   868,
    1821,   769,   769,   868,   141,  1619,    21,  1815,  1821,  1823,
    1619,  1268,  1269,   268,  1393,  1957,  1958,  1953,   769,  1885,
    1349,  1352,  1621,  1624,  1662,  1671,  1714,   793,   875,   311,
     946,   947,   967,   970,   973,   823,   824,  1815,   749,  1314,
    1885,   328,    76,    77,    86,   144,   447,   448,   756,   897,
     898,   900,   906,   933,   934,  1814,  1832,  1833,  1834,  1835,
    1836,  1839,  1986,  1997,  2012,  2013,  2059,  2077,  2078,  2080,
    2081,  2083,   143,   178,   479,   619,  1674,  1687,  1688,  1619,
    1610,    63,  1619,  1619,  1619,  1619,  1619,  1619,  1619,  1619,
    1619,   663,  1885,   978,  1814,  1999,  2013,    47,    48,    80,
      84,   101,   110,   131,   145,   150,   173,   232,   236,   254,
     258,   259,   289,   296,   297,   354,   394,   440,   445,   456,
     457,   612,   616,   622,   633,   639,   670,   674,   703,  1823,
    1904,  1908,  1909,  1910,  1912,  1914,  1915,  1916,  1917,   946,
     961,  1627,   475,   680,  1750,   154,  1759,  1883,    43,    77,
     123,   130,   157,   165,   201,   246,   247,   375,   448,   587,
     892,   935,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   955,   956,   957,   958,   959,   965,   980,   983,   990,
    2004,  2005,  2019,  2020,  2085,  2086,  2088,  2093,  1885,     3,
       8,     9,    19,    20,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    40,    57,    58,    59,    60,
      68,    69,    71,    78,    79,    82,    83,    84,    85,    87,
      88,    90,    91,    99,   102,   120,   121,   122,   124,   132,
     133,   134,   141,   150,   153,   162,   164,   166,   180,   181,
     183,   187,   192,   196,   198,   199,   200,   201,   219,   220,
     221,   223,   230,   241,   249,   250,   268,   275,   276,   278,
     279,   290,   300,   301,   302,   308,   309,   327,   328,   329,
     330,   334,   335,   342,   350,   367,   376,   378,   380,   381,
     382,   383,   384,   399,   411,   412,   413,   415,   416,   464,
     470,   482,   504,   505,   548,   550,   556,   566,   567,   583,
     590,   598,   610,   617,   648,   654,   655,   661,   668,   699,
     718,   719,   720,   721,   726,   727,   741,   743,   754,   755,
     757,   765,   774,   775,   780,   785,   789,   790,   793,  1368,
    1374,  1399,  1400,  1401,  1402,  1406,  1417,  1419,  1420,  1421,
    1422,  1423,  1424,  1425,  1427,  1428,  1429,  1437,  1443,  1444,
    1445,  1446,  1447,  1449,  1452,  1782,  1785,  1787,  1788,  1789,
    1806,  1813,  1814,  1821,  1828,    65,  1010,   514,   250,   363,
     371,   386,   396,   397,   398,   406,   547,   559,   660,   698,
     712,   918,   920,   743,   911,   917,  1821,   865,  1619,   892,
     981,   917,    47,   333,   616,  1901,  1902,  1910,  1912,    47,
     106,   264,   266,   277,   293,   478,   684,   685,   686,   687,
    1378,  1385,  1386,  1952,     3,    71,    99,   144,   321,   367,
     467,   472,   510,   560,   582,   598,   649,   666,   692,   722,
     756,  1166,  1812,  1819,  1830,  1832,  1833,  1834,  1836,  1837,
    1838,  1839,  1843,  1853,  1864,  1995,    47,    49,    79,    80,
      89,   145,   159,   214,   226,   281,   324,   345,   354,   367,
     378,   401,   434,   437,   439,   466,   467,   472,   473,   489,
     510,   532,   587,   602,   611,   614,   615,   629,   666,   674,
     695,   753,  1166,  1200,  1699,  1703,  1704,  1706,  1715,  1814,
    1854,   917,  1885,   178,  1670,   785,  1641,  1650,   946,  2001,
    1791,  1627,  1733,  1821,  1943,   344,  2094,  1823,  1331,  1290,
      50,  1944,  1399,  1468,   805,   299,   807,  1722,   421,  1809,
    1811,  1821,  1893,  1823,   141,  1069,  1815,   128,  1295,   532,
     618,   674,  1740,  1741,   287,  1944,   752,  1756,   675,   823,
     232,   314,  1280,  1281,  1282,   675,   823,   281,  1692,  1619,
    1619,    23,    26,    27,    31,  1783,  1784,  1816,  1976,  1976,
    1976,   464,  1975,  1976,  1976,   786,   786,   792,  1821,  1069,
    1069,   145,  1069,  1069,   667,   849,   145,   145,   281,   663,
     214,   226,   289,   440,  1957,   338,   866,   866,  1953,   111,
     135,   785,   790,  1374,  1377,  1474,  1477,  1489,  1492,  1493,
    1494,  1505,  1506,  1507,  1508,  1510,  1511,  1512,  1809,   211,
     427,  1597,  1598,  1603,   312,  1535,  1375,   123,   127,   168,
     173,   206,   582,  1387,  1560,  1565,  1566,  1575,  1576,  1580,
     226,  1579,  1592,  1602,    47,   106,  1951,  1951,  1951,  1575,
    1577,  1368,  1371,  1372,  1576,  1578,  1370,    47,  1821,  1713,
     127,  1712,   793,  1354,  1351,  2016,  1821,  1821,    42,   769,
    1644,  1645,  1226,   740,  1228,   793,   546,   714,   733,    85,
    1823,  1824,  1825,  1908,  1229,   120,  1234,  1233,   865,   281,
     143,   586,  1270,  1271,  1272,   662,   440,   749,  1957,  1823,
    1301,  1821,   785,   878,   946,   968,  1399,   114,   975,   973,
     287,  1315,  1613,  1614,  1809,  2013,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   128,   129,   130,   131,   132,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   149,   150,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   208,   209,
     210,   211,   213,   214,   215,   216,   217,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   328,   329,   330,   355,   357,   358,
     374,   410,   412,   435,   459,   500,   562,   563,   579,   580,
     582,   621,   654,   715,   718,   721,   745,   756,   765,   893,
     933,  1129,  1131,  1132,  1134,  1135,  1136,  1137,  1138,  1139,
    1140,  1141,  1142,  1143,  1814,  1831,  1832,  1833,  1834,  1835,
    1836,  1839,  1840,  1994,  1995,   792,   474,   788,    74,   321,
    2096,  2079,  2083,   900,   792,   128,  1675,   128,  1675,  1676,
    1677,  1684,  1685,  1821,  1687,  1821,   141,  1618,  1619,   868,
     868,   868,   868,  1821,   865,  1823,   865,  1611,  1619,  1619,
     994,   151,   979,   611,  1913,   652,   652,   710,   713,   741,
     749,   785,  1398,   479,   589,   709,   585,   741,    89,   749,
     333,   555,   638,   333,   333,   203,   333,   372,   532,   674,
     555,   287,   203,   788,   785,   283,   431,   178,   418,   478,
    1629,  1631,   394,   618,  1751,  1752,   361,   178,   393,  1765,
    1809,  1886,  1887,   144,   321,   392,   467,  1814,  1822,  1835,
    1836,  1837,  1839,  1996,   311,  1822,   128,   136,   566,  1821,
    1822,  1822,  1822,  1821,   311,  1822,  1821,   431,  2085,  1987,
    1988,  2014,   946,   960,  1821,   127,   177,   241,   313,    98,
     353,  2020,  2086,   792,  1323,  1453,    19,    20,    30,  1813,
    1828,    31,  1784,   153,   774,   775,  1422,   785,   785,   785,
     311,  1399,  1471,  1472,   785,   785,   785,   785,   785,  1398,
    1398,  1398,   785,  1397,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,  1399,   785,
     785,   785,     8,   785,  1469,  1470,  1806,  1813,   785,   785,
     785,   785,  1399,  1397,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,    15,   785,   785,   785,   785,  1398,
    1397,  1397,   785,   785,  1398,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,    31,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   743,   785,   785,   785,   785,
     743,   785,   785,   785,   785,   785,   785,   785,    31,   785,
     785,   785,    31,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   153,  1422,   153,  1422,  1422,  1125,  1368,  1399,
    1790,  1821,  1813,    33,    41,    50,   208,   315,  1403,  1404,
      35,    36,    37,    39,   156,   769,   770,   771,  1407,    55,
     151,   167,   238,   682,  1405,    14,    43,    44,   107,   192,
     772,   773,   774,   775,   776,   777,   778,   779,  1422,    73,
      38,   213,   213,   757,  1816,   793,   785,    15,  1011,    54,
     287,   788,   769,  1816,  1327,  1824,  1826,  1326,   739,  1913,
     589,   203,   128,   203,  1360,  1386,     3,  1823,   258,   649,
     793,    57,    99,  1167,  1168,  1644,  1823,   127,  1644,  1644,
    1909,    99,  1813,  1847,  1856,  1844,    57,    99,  1170,  1171,
    1823,   793,  1644,  1845,   788,   675,  1718,   785,    88,   214,
     226,   281,   289,   324,   440,   467,   663,   741,   749,   167,
     312,  1710,    63,   693,   377,   693,   693,   318,   693,   439,
     693,  1710,    47,  1082,  1823,  1564,  1565,  1570,   128,   151,
    1705,  1707,   377,   693,   127,   693,   709,   681,    47,   356,
     400,   402,   495,   545,   593,   683,   705,  1693,  1694,  1695,
     823,   481,   823,  1570,  1710,  1707,   514,   433,   379,   613,
     709,   725,  1718,  1392,   693,   746,   143,  1267,  1651,   788,
     177,  1793,  1794,  1801,  1821,  1630,  1631,  1809,  2031,  2097,
     788,  1332,  1333,  1334,  1335,  1809,  1613,   364,   573,   239,
     573,  1945,   788,  1399,   808,    57,   270,   420,   434,   436,
     468,   481,   514,   532,   611,   618,   628,   642,   674,   677,
     693,   724,  1723,  1728,  1729,  1814,  1885,     3,    74,   924,
     925,   926,   927,  1813,   587,   232,   375,  1405,  1821,   803,
     749,  1292,  1885,  1743,   361,  1742,   788,   658,  1821,  1945,
     127,  1283,  1284,  1283,   585,   761,   395,   788,  1283,  1283,
    1614,  1821,  1815,   788,   584,  1979,   704,  1980,   769,   158,
     644,  1978,     7,   797,  1821,   831,  1069,   865,   865,  1069,
     835,   837,  1069,  1069,    63,  1069,  1069,   842,   843,   749,
     467,   467,  1957,   785,  1474,  1494,  1506,  1507,  1508,  1509,
    1510,  1821,    10,  1383,    81,   147,   158,   166,   193,   249,
     277,  1501,  1502,   788,   217,  1503,  1504,    31,  1817,  1817,
       3,  1599,  1600,  1601,  1821,  1823,  1536,   136,  1539,  1535,
     458,   566,  1567,   296,     8,    28,    30,    32,   251,  1571,
    1572,  1785,  1813,   151,    65,  1572,  1564,  1387,  1821,  1387,
    1388,  1388,  1371,  1714,   394,  1719,  1783,  1821,  1821,  1576,
    1579,    47,    57,    99,   203,  1399,  1881,    42,    42,  1815,
      99,   387,  1066,  1067,  1079,  1080,  1174,   409,   869,  1821,
    1398,     3,   869,  1809,   588,  1824,  1825,  1826,  1923,  1927,
    1619,  1272,   417,   493,   868,  1809,   749,  1302,  1303,  1614,
     793,   876,   879,   880,  1399,   974,   311,   969,   971,  1993,
    2009,  2010,   431,   813,  1613,   127,   365,   452,   454,   544,
     619,   788,  1318,  1319,  1320,  2084,   785,  1149,  1150,  1152,
    1152,   392,  1150,  1158,  1160,   785,  1145,  1146,  1150,   224,
    1145,  1158,    57,    71,    73,   306,   342,   360,   736,  1133,
    1138,  1140,  1160,  1166,  1175,  1177,  1133,  1158,  1133,  1145,
     785,  1158,  1133,  1152,  1152,  1133,  1152,   785,  1145,  1158,
      71,   307,   307,   310,  1145,  1152,   785,   896,  1152,  1152,
    1152,  1152,  1152,    15,   793,   899,   310,  1152,  1152,  1152,
    1152,  1152,   785,  1146,  1154,  1145,  1145,  1145,   127,  1821,
     127,   353,  1986,  2081,  2082,   792,   792,  1809,    54,  1673,
    1616,  1617,  1810,  1821,   127,  1381,  1382,  1535,   788,  1678,
     793,  1686,   120,  1821,   868,   793,  1907,  1910,  1826,  1922,
    1613,  1612,  1609,   177,  2003,   648,   977,   709,   786,   333,
    1826,   333,   333,  1923,   214,   226,   281,   467,   867,  1911,
     354,   394,   440,   445,   456,   457,   612,   622,   633,   639,
     670,   674,   703,  1915,  1917,  1799,  1800,  1813,   962,   141,
    1267,   483,   741,  1399,  1753,  1753,  1338,   510,  1764,    53,
     769,  1531,  1532,  1533,   577,   752,   788,  1884,    44,   946,
     311,  1821,   566,   128,   154,   946,   311,   785,   954,   177,
     792,   793,  1989,   788,   986,   984,   989,   985,  2090,  2089,
    1613,     3,  1454,  1823,   793,   785,    47,  1462,  1534,  1462,
    1462,  1399,  1472,   114,   311,   431,  1399,  1468,  1399,   106,
    1462,  1534,   786,    24,    25,    26,    28,    30,    32,   786,
    1584,  1588,  1589,   786,  1399,  1399,  1806,   786,  1363,  1364,
    1373,  1790,    92,    93,    94,    95,   138,   139,   140,   189,
     190,   253,   316,   413,   482,   548,   550,   556,   617,   661,
     754,   765,  1528,  1529,  1399,   106,  1455,  1455,  1442,  1399,
    1399,  1399,  1528,  1399,  1399,  1399,  1813,  1470,   337,   788,
     793,   106,  1462,  1399,   106,  1462,  1399,  1399,  1399,  1399,
    1399,   786,  1402,   786,  1399,  1399,   786,   653,  1462,  1462,
     106,  1462,   786,  1584,  1462,  1462,  1399,  1399,  1426,    64,
     163,   288,  1399,  1418,  1399,  1399,  1399,   106,  1462,  1399,
    1468,  1399,  1399,  1399,  1399,  1414,  1415,  1399,  1399,  1467,
    1468,  1399,  1399,  1399,  1399,  1399,  1399,   410,   412,   718,
     721,  1530,  1399,  1399,  1468,  1809,  1399,  1399,  1399,   127,
    1809,  1399,  1467,  1399,   127,  1399,  1399,  1399,   786,  1399,
    1809,  1399,  1399,  1529,  1529,  1399,  1418,  1399,   786,     8,
     793,  1807,  1821,  1399,  1399,  1467,  1399,  1399,  1399,   786,
     788,  1364,  1399,   793,  1399,  1399,  1399,  1401,   122,   201,
     290,   738,  1405,    47,   341,  1401,  1408,  1401,   785,  1374,
    1401,  1401,   167,    55,   151,   167,   238,  1402,  1402,  1402,
    1402,  1402,  1402,  1402,   153,  1402,   153,  1402,  1402,  1402,
    1402,  1402,  1172,  1823,  1422,   785,  1451,  1545,  1821,   785,
     136,  1813,  1430,   465,   497,   572,   653,  1416,   169,   229,
     509,   708,  1012,  1016,  1747,  1815,   920,   412,   718,   721,
     919,  1452,  1787,  1806,   788,   287,  1328,  1329,  1809,   946,
     788,   127,  1826,  1825,  1924,   867,  1911,   776,  1390,  1391,
    1393,   472,   510,   666,  1855,  1644,  1910,  1821,    73,  1399,
    1874,  1873,  1872,   793,   793,  1644,   788,  1846,   232,   496,
    1875,  1876,  1877,  1878,  1821,  1865,    99,   722,  1813,  1848,
    1860,  1850,  1851,  1853,  1864,   693,   127,   776,  1069,    63,
     868,   868,  1809,   868,   318,   868,   868,   868,  1809,  1826,
    1809,  1392,  1392,   377,   693,  1710,   868,  1710,  1705,   377,
     693,  1710,   151,  1708,   514,   557,   693,  1702,  1702,  1710,
    1821,   868,  1710,  1825,  1705,  1710,  1815,   494,   706,   455,
     127,  1696,   788,   439,   693,  1809,  1707,  1705,  1705,   127,
    1710,  1710,  1710,  1477,  1661,  1809,  1393,  1653,  1655,   785,
    1648,  2002,   788,   785,  1797,   154,  1632,   891,   431,     3,
     151,   788,   217,  1343,  1345,  1346,   452,   619,  1291,   364,
     239,  1399,   806,    99,   143,   809,  1399,  1656,  1657,   514,
     514,   514,   514,   361,   514,   823,   514,   788,  1392,  1724,
    1823,   919,   929,   788,   769,  1532,  1894,   120,   681,  1399,
    1293,  1613,   287,  1745,   823,  1741,  1821,    47,  1278,   632,
     688,  1285,  1286,   127,   825,   826,   678,  1282,   825,  1884,
    1783,   601,  1981,  1823,   839,  1821,   833,  1907,  1923,  1823,
    1069,  1069,   828,  1809,  1069,   868,  2070,  1393,  1966,   853,
    1393,  1069,  1069,  1069,   749,  1490,   788,   786,   786,   786,
     786,   786,   788,   786,  1474,    47,    53,    55,   128,  1384,
    1533,   158,   158,   210,  1513,   166,   249,  1501,  1513,  1474,
    1492,   785,  1383,  1604,  1823,   788,   793,  1399,    65,   137,
    1537,  1539,   251,   654,  1568,  1572,   577,   673,   752,  1389,
    1813,   443,   251,   582,   788,   793,   669,  1561,   654,  1568,
    1593,  1399,  2017,  2018,  1227,  1645,  1067,    73,  1166,   422,
     191,   231,   268,   387,   399,   502,   573,   871,   873,  1628,
    1823,  1628,  1235,   785,   484,   242,   788,  1931,  1809,  1232,
    1231,  1809,   788,   600,  1304,  1821,   878,   786,   788,   283,
     946,   971,   892,    68,   108,   142,   179,   485,   515,   516,
     518,   519,   520,   521,   522,   524,   525,   526,   527,   528,
     529,   530,   531,   533,   534,   535,   536,   630,   631,   814,
     815,   822,   127,  1321,   740,  1614,  1319,   785,   902,    24,
      28,    30,    32,  1158,  1157,  1644,  1158,    30,   295,   317,
     671,  1147,  1148,  1148,  1175,    99,  1172,  1158,  1133,  1176,
    1177,  1167,    57,    73,   392,  1161,  1148,  1222,  1783,  1158,
    1222,  1148,   310,  1148,  1158,   894,   895,  2000,  2013,    42,
      99,  1986,  2007,  1133,  1133,  1148,   252,   729,  1821,  2007,
    1176,    57,  1178,  1133,  1158,  1148,    30,  1148,   237,  1144,
    1144,  1144,   901,    26,   775,   909,   910,  1581,  1583,  2097,
    1503,   708,   788,  1680,   793,  1686,   222,  1559,  1560,  1685,
     128,   776,  1821,   203,  1821,   788,   788,    67,   244,  1273,
    1613,  1613,   892,   785,   948,   951,   287,   314,  1906,    63,
     776,  1809,  1821,  1921,  1921,   786,   788,  1992,  2009,  1632,
    1399,  1826,  1339,  1340,  1341,  1342,  1809,   146,   144,   321,
     467,  1814,  1818,  1827,  1832,  1833,  1834,  1835,  1836,  1837,
    1838,  1839,  1995,   178,   232,   761,  1888,  1583,  1887,   946,
     154,   654,  1821,   946,   948,   949,   953,  1821,   878,  1821,
     978,   980,   981,  2001,  2077,  2097,  1884,  1855,    42,  1813,
    1399,   786,  1463,   786,   786,   283,   431,  1399,  1399,    53,
     299,   786,   299,   788,  1438,   786,   776,   786,   788,   788,
     786,   786,  1364,   128,   786,  1440,  1441,  1399,   788,   788,
     788,   775,   786,   788,   786,   788,   788,   786,   785,  1806,
    1813,  1462,   786,   786,  1462,   786,   788,   788,   786,   786,
     786,   151,   788,   788,   786,   786,  1462,   786,   786,   786,
     786,   788,   128,   788,   786,   128,  1399,   128,  1399,   128,
    1399,   128,   786,   788,   788,   786,  1462,   786,   786,   786,
     786,   788,   786,   788,   786,   788,   788,   788,   786,   788,
     786,   786,   788,   788,   788,   788,   786,   786,   788,   786,
     786,   786,   786,  1809,   786,   786,   786,   786,  1809,   786,
     786,   788,   786,   788,   788,   786,   788,   788,   788,   786,
     786,   788,  1813,  1821,   786,   793,   786,   788,    53,   508,
     788,  1189,   786,   786,  1528,  1528,  1468,   786,   791,  1813,
     122,   201,   290,   738,   785,    50,  1399,   438,  1401,  1401,
     785,  1374,  1401,  1401,  1399,  1399,  1546,   217,  1548,   785,
     785,   793,  1393,  1434,  1435,  1436,   379,   785,  1021,  1022,
    1014,  1021,  1015,   596,  1024,   160,   476,  1399,   769,  1826,
    1826,   788,  1884,   431,   131,  1910,   128,   788,  1921,  1921,
     788,  1399,  1804,  1813,   793,   793,   793,    99,   144,   321,
     467,   582,   756,  1814,  1815,  1820,  1829,  1832,  1833,  1834,
    1835,  1837,  1838,  1839,  1995,  1868,   127,  1644,    99,  1172,
    1173,  1826,    31,   583,   598,  1880,  1881,  1821,  1821,  1857,
    1856,   127,   585,   761,   508,   788,   788,  1644,  1881,   793,
    1849,   793,  1644,   788,   788,  1852,  1399,   786,  1821,   868,
     868,  1815,  1399,   868,  1710,  1710,   868,  1710,  1815,   128,
    1709,   865,  1710,   618,  1570,  1695,  1708,   825,  1705,  1809,
    1710,  1710,  1399,   258,  1503,  1657,   786,   788,  1649,   892,
    1794,  1798,  1800,    53,  1633,  1634,  2085,  2098,  1823,    99,
    1336,  1821,  1334,  1809,  1007,  1345,   145,   160,  1198,  1347,
     807,   788,   100,  1734,   823,  1729,  1613,  1730,   927,   930,
     931,   926,   578,   579,   655,   928,   458,   566,  1821,  1895,
    1896,  1815,  1613,   452,   619,   742,  1296,  1297,  1298,  1583,
      47,  1744,   675,   788,   366,  1277,  1691,   788,   127,  1982,
    1065,  1066,   299,   729,  1210,  1821,   314,  1905,  1931,   850,
    1821,  1821,  1809,   830,   868,  2039,  2040,   868,  2065,  1069,
    1069,  1809,   868,  1821,   868,  1069,  1399,  1474,  1474,   791,
     581,   718,   722,  1379,  1380,  1424,  1380,   158,  1513,  1513,
    1505,   158,   203,   299,  1527,  1821,  1532,  1166,  1169,  1600,
    1821,  1399,  1540,  1805,  1538,   756,  1542,  1537,   314,   585,
    1569,  1568,   511,  1583,  1572,  1573,   443,  1572,  1572,  1813,
     553,  1562,  1805,   123,   785,  1881,  1881,  1065,  1815,  1645,
    1645,   561,   268,   268,   662,  1815,   268,   268,   268,   182,
     361,   407,   488,   551,   568,   569,   573,   574,   575,   641,
     691,   846,   847,    88,   480,   591,   598,   604,   679,   741,
     851,   852,    65,   314,   748,  1925,   270,   370,   498,   571,
     700,   762,  1919,  1920,  1927,   314,  1934,  1884,   203,   861,
    1240,   785,  1959,  1230,  1303,   127,   877,  1399,  1993,   972,
     769,   769,   769,   769,   769,   769,   769,   769,   769,   769,
     769,   769,   769,   769,   769,   769,   769,   769,   769,   769,
     769,   769,   769,   769,   769,   788,   825,   740,   883,   884,
    1821,  2060,  2061,  2062,   156,   786,   786,   786,   786,  1821,
     788,   317,   295,    99,  1172,  1157,   786,   788,   786,   786,
     788,   144,  1129,  1814,  1832,  1833,  1834,  1835,  1836,  1839,
    1399,  1399,  2007,  2007,   793,  1178,   769,   209,   265,   269,
     907,   908,   909,   912,  1405,  1821,    24,    25,    28,    30,
      32,   431,  1380,  1617,  1821,   299,  1821,   581,   168,  1574,
    1477,   793,  1686,  1809,  1910,  1826,  1884,   431,   903,   904,
     952,    34,  1923,   333,   793,   793,   287,   287,  1799,   963,
    1633,   788,  1343,  1345,  1817,   761,   510,   393,   154,   950,
     786,   788,   793,  1990,   987,   976,   982,  1822,   982,   982,
    2091,   431,  1820,  1399,   788,  1399,  1399,   283,    57,    71,
      96,   109,   125,   153,   155,   295,   307,   410,   412,   563,
     671,   721,   745,  1464,  1465,  1466,  1814,  1831,  1994,  1167,
    1167,  1464,  1468,   786,   153,   153,  1399,  1468,  1468,   788,
    1399,  1399,  1399,  1399,  1399,  1399,  1399,  1402,   793,   786,
     786,  1399,  1399,  1399,  1399,  1399,   786,  1399,  1399,  1399,
    1399,   128,  1399,   128,  1399,   128,  1399,   153,  1399,  1399,
     786,  1415,  1399,  1414,  1468,  1399,  1399,  1399,  1399,  1473,
    1399,  1399,  1399,  1468,    28,   774,  1581,  1585,   153,  1399,
    1399,  1399,  1399,  1399,   793,   793,  1821,  1399,    57,    71,
    1184,  1185,  1186,  1187,  1188,  1584,  1583,   786,   775,   775,
    1373,  1401,   786,   788,  1401,    50,  1399,   438,  1528,  1528,
    1547,  1821,    65,   786,  1448,  1467,  1813,  1399,   786,   788,
     785,  1030,  1402,  1022,   168,  1060,  1061,  1584,   702,  1025,
     339,  1017,  1013,   919,   287,  1329,   287,   241,   589,  1922,
    1825,   128,   128,  1391,  1394,  1394,   793,   793,   793,  1644,
    1399,  1826,  1867,  1644,   785,   785,  1644,  1644,  1881,   798,
     232,   637,   664,  1879,  1877,  1876,  1866,  1821,  1875,  1821,
    1861,  1850,  1851,  1860,   437,   753,  1581,  1586,  1700,    30,
    1709,  1535,  1705,  1666,  1667,  1807,  1381,  1394,  1393,  1652,
    1654,  1657,   431,   786,   785,  1626,  1615,  1809,   792,   321,
    1986,  2021,  1344,   785,  1657,   769,   825,   127,   314,  1725,
    1726,   769,   788,    36,    37,   458,   503,   566,   609,   769,
     770,   771,  1897,  1899,  1535,   128,  1299,  1297,   825,  1286,
    1815,   739,  1287,   110,   647,  1986,  1998,  1583,   549,   359,
     476,   657,  1216,  1216,   203,  1210,   333,  1934,   126,   203,
     203,   829,   845,   846,  2039,    53,   156,  2030,   387,   873,
    1986,  2036,  2037,  2038,  2066,  1967,   868,   840,  2072,   646,
    2071,  1809,   788,  1380,    31,  1402,    50,   287,  1474,  1505,
     158,   158,  1474,  1505,  1495,  1496,   786,   788,  1522,  1523,
    1168,  1605,    16,    17,   788,  1541,    51,   104,  1563,  1399,
    1451,  1543,  1544,  1542,   717,  1569,  1573,  1389,   788,  1563,
    1567,  1393,  1594,  1595,  1596,  1173,  1168,   409,   409,   417,
     493,  1645,  1645,    65,  1645,  1647,  1645,   182,   551,   314,
    1645,  1646,  1646,   847,  1236,  1815,  1815,  1815,  1815,  1583,
    1815,  1815,   786,   788,    31,   598,  1823,  1928,  1929,    31,
      31,    31,    50,  1918,   537,   538,   541,   542,   543,  1932,
    1933,   331,   598,  1239,  1225,   391,   659,   240,  1241,  1821,
    1960,    53,  1959,    47,   379,  1305,   878,   283,   785,   785,
    1583,   785,  1583,  1583,  1815,  1815,  1586,  1815,  1583,  1815,
    1815,  1815,  1815,  1815,  1815,  1815,  1583,  1815,   405,   573,
     676,  1788,   122,   290,  1583,  1591,  1815,  1583,   815,   786,
     788,   148,   151,   212,   887,  1986,  2008,   654,   933,  1129,
     904,    30,  1176,  1783,  1176,   894,  1821,    30,   788,  2085,
     465,   793,  1477,  1686,  1392,   251,  1572,   245,  1682,  1535,
    1884,  1273,   177,   905,   786,  1399,   951,   314,  1936,   589,
     776,   776,  1923,  1923,   113,   114,   115,   964,  1623,  1341,
    1809,  1345,   143,  1348,  1760,  1399,   949,  1821,   878,  2003,
     353,   976,   793,  1399,  1399,  1152,  1152,  1145,  1154,    95,
     155,  1150,  1149,  1151,  1153,  1152,   155,  1153,  1150,   786,
     786,   786,   786,  1439,  1399,  1399,   786,   206,  1457,  1457,
    1399,   788,   788,   786,   788,   786,   786,   786,   151,  1431,
    1432,  1813,   786,   786,   786,   786,   786,   788,   127,   788,
    1399,  1399,  1399,  1399,   786,   786,   786,    53,  1409,   786,
      53,   786,   788,   786,   788,   786,   788,   786,   788,   786,
     786,   786,    28,    30,    30,   786,   788,  1399,   786,   786,
     788,   788,   786,  1813,  1821,   793,   786,   785,  1179,  1179,
      51,   104,   648,   774,  1181,  1182,  1183,   788,   788,  1399,
    1399,   786,  1468,  1401,   786,   788,  1401,  1548,  1540,   206,
    1450,   786,   785,  1394,  1436,  1018,  1019,  1020,  1821,   786,
    1586,   153,    65,   785,  1032,   769,   785,  1022,  1826,  1809,
     128,  1924,  1924,    53,  1395,  1815,  1821,   776,  1813,  1821,
    1821,  1869,  1881,  1880,    31,    31,  1859,  1858,   388,   732,
     232,  1881,  1644,  1644,  1881,    24,    25,    28,    30,    32,
    1570,  1701,  1710,   788,  1664,  1644,  1532,  1657,   786,   788,
     177,  1363,    11,    12,   258,  1002,  1363,  1635,  1637,  1640,
    1503,   311,  2022,  2023,   785,   225,  1524,  1525,  1526,  1821,
     785,  1727,   232,   250,   363,   371,   386,   396,   397,   398,
     406,   547,   559,   645,   660,   698,   712,   932,   931,  1898,
    1570,   558,   517,   822,  1288,   695,   695,  1809,   203,  1825,
    1239,   409,  1809,  1809,    11,    13,    18,   145,   167,   215,
     272,   273,   274,   292,   347,   349,   369,   387,   394,   409,
     419,   434,   491,   501,   539,   552,   592,   598,   656,   663,
     695,   710,   711,   723,   998,  1000,  1071,  1073,  1074,  1076,
    1078,  1079,  1080,  1087,  1814,  1071,  2030,  1393,  1815,  2036,
     785,   888,  1986,  2025,  2027,   868,   854,  1959,   785,   890,
    2025,  2026,    96,   155,   234,   697,  1085,  2026,   841,  1491,
    1380,  1380,   203,  1498,  1505,  1505,   203,  1500,  1399,   785,
    1007,  1821,  1520,  1521,   379,  1767,  1805,    53,   788,  1805,
    1568,  1572,  1399,   786,   788,  1585,  1585,  1585,  1585,  1585,
    1585,  1628,   852,    31,    53,   299,  1926,  1930,   208,  1919,
    1583,  1583,  1583,  1788,   774,  1581,  1582,  1932,   173,   294,
    1237,   450,    46,    48,    49,    70,    72,    78,   110,   173,
     204,   206,   217,   240,   339,   376,   423,   424,   430,   442,
     463,   487,   554,   623,   634,   635,   636,   727,  1005,  1072,
    1074,  1244,  1249,  1251,  1254,  1260,  1261,  1262,  1264,  1265,
    1556,  1405,  1942,   343,   441,   855,   287,   423,   430,   857,
     786,   788,  1961,  1962,    53,    47,   785,  1306,  1993,   818,
     819,  1583,   820,   821,  1583,   816,   817,  1583,  2061,   212,
     896,    15,   793,   786,   908,  1821,  1535,  1821,   443,   251,
    1683,  1679,  1349,  1790,   131,  1931,  1931,   961,  1992,   961,
    1635,  1348,   506,   143,   328,  1766,  1991,   988,  2097,  1821,
    1176,  1151,  1176,  1176,   786,  1528,  1528,    65,   256,  1456,
     168,  1459,  1460,   786,  1399,  1399,  1468,   193,   358,   786,
     314,  1433,  1399,  1399,  1399,  1528,    96,   109,   125,   155,
     234,   295,   410,   412,   562,   563,   721,  1138,  1139,  1410,
    1411,  1412,  1413,  1464,  1399,  1399,  1399,  1399,  1591,  1528,
    1399,  1399,  1821,  1584,   786,  1189,  1184,  1182,  1184,  1185,
    1583,   786,  1468,   206,  1549,    65,   786,  1467,  1395,   786,
     788,   348,  1063,  1399,  1016,   217,  1033,  1034,  1035,  1584,
    1018,  1924,  1815,  1821,   793,  1644,  1644,  1881,   786,   786,
    1881,  1881,  1863,  1862,  1570,  1667,  1535,    99,  1656,  1522,
    1394,  1657,   786,  1638,  1639,  1802,  1803,  1807,  1821,  1790,
    1636,  1682,  1640,  2024,  2023,    47,  1250,  1258,  1259,  1821,
     786,   788,  1586,  1735,  1736,   451,   173,   785,   769,   788,
     832,  1809,   760,   836,   838,    75,   599,   793,  1088,  1089,
    1090,  1091,  1099,  1100,  1105,  1106,  1107,  1198,  1201,  1202,
    1808,  1821,   167,   747,   422,  1809,  1645,  1645,  1645,  1645,
    1645,  1645,  1645,  1645,  1645,  1645,   422,  1645,  1645,  1645,
    1645,  1645,  1645,  1645,  1645,  1645,  1645,   425,   545,  1821,
    1645,  1645,  1003,  1004,  1005,   788,  1073,   999,  1644,  1393,
    2073,   889,   870,    54,   336,   996,   203,    53,   881,   882,
     247,   681,   247,  1959,    22,    29,    31,  1475,  1497,   299,
    1499,   299,  1527,   143,   298,   463,  1515,  1516,  1519,   117,
     118,   205,   282,  1768,  1769,   170,  1770,  1563,  1545,  1544,
    1563,  1569,  1568,  1394,  1596,   598,  1815,  1928,    30,    30,
     598,    99,   153,   564,  1238,    75,   217,   385,   599,   707,
    1091,  1099,  1100,  1266,  1198,  1266,   217,  1266,   217,   217,
     281,   287,    75,   126,   217,   599,   707,  1104,  1198,  1266,
    1645,   217,    65,  1007,    53,   287,   385,   769,  1198,  1275,
    1645,   217,   159,   710,   159,   217,   710,  1266,   217,   597,
     217,   217,   217,  1072,   788,  1004,  1249,   785,  1090,   608,
    1399,  1399,   203,   861,   868,   203,   387,   862,  1821,  1628,
    1363,  1961,  1307,   489,   786,   788,   786,   788,   786,   788,
     252,  1821,  1681,   128,   443,  1390,  1628,   589,   314,  1935,
    1935,   203,  1658,   154,   878,   982,   431,   786,   786,  1458,
    1805,  1783,  1459,  1461,  1571,   786,   786,   788,   786,   502,
     553,   618,   786,   786,  1145,   155,  1153,    71,  1153,  1176,
     786,   786,   786,   786,   788,   786,   786,   786,  1180,   786,
     788,   786,    65,   229,   251,  1550,  1551,  1805,   786,  1020,
    1528,   160,   476,   786,   788,  1036,   786,   776,  1871,  1870,
    1881,  1881,   825,  1559,   407,  1795,   786,   788,   793,  1364,
    1642,  1643,  1807,  1628,   907,   786,   788,  1525,   786,   788,
      50,  1737,  1654,  1815,   822,   785,   834,  1823,   785,   785,
    1221,  1808,    10,   127,  1101,  1821,   786,   788,    72,   126,
     225,   293,  1103,  1197,  1105,  1069,  1198,  1199,  1199,  1108,
     793,  1809,  1645,    99,  1583,  1590,    99,  1583,    99,  1583,
      99,  1583,  1075,  1586,  1583,  1583,  1815,  1815,  1645,  1583,
    1823,   458,   503,   573,  1084,  1583,  1586,  1586,    99,  1583,
    1815,    99,   390,   392,   429,   459,   593,   627,  1083,  1590,
    1583,  1590,  1001,  1766,  1073,  1071,    26,    28,    30,    32,
      99,  1587,  1588,  1815,  1821,  2074,   226,   467,  1986,  2056,
    2057,  2058,   885,   886,  2061,   871,   872,  1942,  2067,   101,
     150,   296,   997,   659,  1961,   786,   883,  1972,  1973,  1815,
    1972,    53,    31,   379,  1478,  1399,   785,  1399,   785,   786,
    1198,  1198,  1516,    65,    65,   117,    65,  1769,   271,   282,
    1771,  1772,  1569,   785,   450,    30,   331,   141,  1069,   141,
    1068,   747,  1068,  1618,  1618,  1324,  1618,  1250,  1259,  1809,
    1166,  1618,   160,  1619,    10,  1618,   747,   225,  1618,  1618,
      99,  1821,  1324,  1557,  1558,  1807,  1006,  1618,  1618,  1809,
      99,  1821,  1324,  1259,  1618,  1324,  1324,  1324,  1250,    46,
      78,   110,  1262,  1086,  1088,   336,   458,  1274,  1528,   674,
    1815,   426,  1242,   314,  1963,  1628,  1310,  1821,    47,   785,
    1308,   819,   821,   817,    15,   793,  1628,  1402,   131,  1932,
    1937,  1938,   428,  1682,   281,   976,   788,  1563,   786,  1399,
     553,   449,  1586,   786,  1583,  1562,   786,    55,   404,   412,
     718,   721,   731,  1552,  1553,  1787,  1563,   690,  1062,  1017,
     785,  1023,  1035,  1037,  1821,  1881,  1881,  1574,  1796,  1802,
     776,  1821,   786,   788,  1644,   283,  1259,  1736,   423,   786,
    1218,  1220,  1821,   785,   588,  1218,  1218,   785,  1821,  1089,
     785,   160,   160,  1199,  1069,   236,  1191,  1221,  1821,  1069,
    1069,   665,   933,  1109,  1130,  1131,  1821,   786,  1815,   785,
    1815,    53,  1064,  1003,   226,   467,   898,  1814,  1832,  1835,
    1836,  1839,  2042,  2043,  2044,  2050,  2055,  2058,  2011,  2048,
    2011,  2046,   431,  2058,   786,   788,   105,  2030,   203,   855,
     870,  2063,  1129,  2063,  1961,   785,   786,  1527,  1527,   127,
    1514,  1514,  1783,  1783,    65,  1783,    65,    65,  1772,    31,
    1238,   413,  1237,  1405,  1324,  1405,  1101,  1821,  1808,  1250,
    1808,  1246,   287,  1248,  1168,  1808,  1618,  1258,   127,   160,
    1808,  1808,  1250,   788,  1563,  1010,  1821,  1808,  1584,   314,
    1107,  1250,  1255,  1250,   786,  1821,   856,   863,   864,    72,
     362,   510,   786,   788,  1309,   252,   729,  1821,   287,   589,
    1938,  1659,  1628,  1809,  1805,   786,   786,   786,   731,  1553,
    1554,  1787,   654,   606,   444,  1555,   606,  1787,  1063,   785,
    1030,  1026,    99,   303,   304,   404,   479,  1038,  1665,  1800,
     793,  1643,  1657,  2009,   368,   786,   788,  1563,   785,  1218,
     785,   786,   786,  1821,   785,  1399,  1069,  1221,  1821,  1809,
     299,  1209,   729,  1221,  1221,  1111,   793,  1102,  1103,  1110,
     793,  1730,  1002,  1001,  2048,  2046,   792,  2075,  2044,  2055,
    2050,  2045,   792,  2045,   792,  2006,  2061,  2032,  2033,  1393,
     860,   861,  2064,   868,  1986,  2028,  2028,   195,  1479,  1480,
    1821,  1532,   786,   786,   136,   158,   206,  1518,  1517,  1783,
    1783,  1783,   786,   120,  1252,   120,   144,   196,  1217,   110,
     258,  1107,  1318,   281,   287,    73,  1808,  1821,  1273,  1245,
    1558,   287,   287,   281,  1274,  1256,  1258,  1247,   690,   858,
    2085,   589,    72,    72,  1821,   225,  1311,  1312,  1821,    15,
    1402,   160,  1503,  1563,   462,    50,   462,   136,   404,   573,
     717,  1028,  1029,  1821,   786,   701,  1031,  1040,   716,   145,
     387,   394,   409,   539,   552,   570,   710,  1054,  1055,  1056,
    1059,  1076,  1704,  1628,   244,   776,  1884,  1220,    30,   788,
    1219,   851,  1884,  1884,   788,  1821,   786,  1221,  1209,   729,
     785,  1192,  1216,  1092,  1216,  1094,  1095,    18,   225,   293,
     387,   499,   758,  1076,  1112,  1113,  1122,  1163,  1164,  1165,
    1190,  1405,  1131,    73,    99,   201,   203,   347,   469,   665,
    1116,  1118,  1155,  1156,  1164,  1821,   786,  1077,  1078,  2030,
    2053,  2030,  2051,   353,   431,  2041,  1821,  1821,  2028,  2028,
    2077,  1968,   857,  2030,   218,   786,   788,  1481,    65,    65,
     785,   785,  1808,   596,   785,  1253,   144,    99,    99,  1274,
    1809,   217,  1173,  1324,  1821,  1808,  1809,  1257,  1296,  1399,
     432,   859,     6,   848,   589,   589,   786,   788,   729,   296,
    1761,  1554,   654,   209,   323,   786,   788,  1584,   785,  1042,
    1044,  1039,   422,  1645,  1645,   422,  1645,  1645,  1645,  1645,
     785,  1049,  1056,   434,   299,   387,   501,   729,   750,  1076,
    1203,  1206,  1211,  1212,  1213,  1217,  1563,   786,  1821,   786,
     786,   314,  1204,  1208,  1212,  1215,  1205,  1207,  1212,  1214,
    1821,   788,  1098,  1096,  1216,  1193,  1821,   180,  1194,   785,
    1093,   785,   785,   160,  1815,   707,  1164,   747,   160,   201,
    1172,   774,   775,   785,  1126,  1127,  1128,  1374,  1419,  1786,
    1814,   296,   340,    99,    53,   392,  1156,  1162,  2011,   792,
    2011,   792,  2097,  2076,  2049,  2047,  2034,  1809,   862,  2032,
    1475,  1480,   127,  1132,  1134,  1135,  1136,  1483,  1484,  1524,
    1526,  1103,  1584,  1033,  1128,  1007,  1035,  1007,   154,  1399,
    1312,  1660,  1169,  1027,  1029,   785,  1043,  1044,  1045,   182,
    1041,  1044,  1645,  1815,  1815,  1645,  1587,  1587,  1584,  1823,
     702,  1050,  1051,  1645,  1216,  1815,  1645,  1216,  1263,  1264,
    1265,  1213,   758,  1884,   594,  1263,  1215,  1263,  1214,   786,
    1821,   785,   785,  1097,   786,   788,   466,   595,   672,   203,
    1195,  1218,   785,  1218,  1218,   430,  1159,  1788,  1788,  1125,
     198,   743,   654,  1126,  1157,  1155,  2054,  2052,   431,  2006,
    2027,  2026,   353,   127,   426,   848,  1482,   207,   120,   218,
     786,   786,   786,   785,  1668,  1669,  1807,  1762,  1031,   786,
     788,   182,  1047,  1048,  1402,  1815,  1815,  1052,   786,   788,
    1081,  1823,  1583,  1265,  1264,   590,  1203,  1814,   786,  1218,
    1218,   785,  1821,   101,   296,   786,  1218,   786,   786,   786,
     785,  1396,   431,   691,  1117,  2032,  2032,  2028,   870,   247,
    2097,  1393,   863,  1478,   218,  1475,  1033,   788,  1644,   251,
    1773,  1044,   788,  1046,  1053,  1823,  1051,  1263,   786,  1219,
    1218,    67,   244,   258,   573,  1196,  1196,  1203,   786,  1204,
    1205,   786,  1584,  1114,  1115,  1163,  1114,   600,   696,   751,
    1119,  1821,  1986,  2029,  2029,  1972,  2035,  1969,  1475,    99,
     201,   436,  1485,  1486,  1487,  1488,   786,  1669,  1657,   484,
    1767,  1048,   786,  1057,  1058,  1059,  1191,   786,  1219,    99,
     201,   332,   203,   203,  1203,   786,  1163,  1120,  1121,  1122,
     870,   431,   112,    24,    25,    28,    30,  1475,  1476,   203,
    1486,  1488,  1486,  1487,    65,  1770,  1059,  1203,   786,   296,
     101,  1122,   654,   116,   436,   203,   203,  1783,   143,  1774,
    1203,  1196,  1196,  1970,    30,   785,  1776,   461,   605,  1964,
    1965,   170,   251,  1775,     3,   786,  1777,  1778,  1807,   258,
    1779,  1823,  1971,  1823,   786,   788,  1780,  1781,  1807,  1628,
    2085,  1778,   788,  1644,   848,  1781,  1393,  1657,  1394
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   794,   795,   796,   795,   795,   797,   797,   798,   798,
     798,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   800,   801,   801,   803,   802,   804,   805,   806,   804,
     807,   808,   807,   809,   809,   811,   810,   813,   812,   814,
     814,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   816,   816,   816,   817,   818,   818,   818,   819,   820,
     820,   820,   821,   822,   822,   822,   822,   822,   822,   822,
     822,   823,   823,   824,   825,   825,   826,   828,   829,   827,
     830,   827,   831,   832,   827,   833,   834,   827,   835,   836,
     827,   837,   838,   827,   839,   827,   840,   827,   841,   827,
     842,   827,   843,   827,   827,   827,   844,   827,   827,   845,
     845,   846,   846,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   848,   848,   850,
     849,   851,   851,   852,   852,   852,   852,   852,   852,   852,
     854,   853,   856,   855,   855,   857,   857,   857,   857,   858,
     858,   859,   859,   860,   860,   861,   862,   862,   864,   863,
     865,   866,   866,   867,   867,   867,   867,   868,   868,   869,
     869,   870,   870,   871,   871,   871,   871,   871,   871,   871,
     872,   872,   873,   873,   875,   874,   876,   874,   877,   874,
     878,   878,   879,   879,   880,   880,   881,   882,   881,   883,
     883,   884,   885,   885,   886,   886,   887,   887,   887,   889,
     888,   890,   891,   891,   892,   892,   893,   893,   893,   894,
     895,   895,   896,   897,   899,   898,   898,   898,   901,   900,
     902,   902,   903,   905,   904,   906,   906,   906,   906,   907,
     907,   908,   909,   909,   910,   911,   911,   912,   912,   912,
     912,   912,   912,   913,   913,   914,   915,   915,   916,   916,
     917,   917,   918,   918,   919,   919,   919,   920,   920,   920,
     920,   920,   920,   920,   920,   920,   920,   920,   920,   920,
     921,   922,   923,   923,   924,   924,   925,   925,   926,   927,
     927,   928,   928,   928,   929,   930,   930,   931,   932,   932,
     932,   932,   932,   932,   932,   932,   932,   932,   932,   932,
     932,   932,   933,   933,   934,   934,   936,   935,   938,   937,
     939,   939,   940,   940,   941,   941,   941,   941,   942,   942,
     942,   942,   943,   944,   945,   947,   946,   948,   950,   949,
     952,   951,   953,   953,   954,   954,   955,   955,   955,   956,
     957,   957,   957,   958,   958,   959,   960,   960,   962,   963,
     961,   964,   964,   964,   964,   966,   965,   968,   967,   967,
     969,   969,   970,   970,   972,   971,   974,   973,   975,   975,
     976,   976,   977,   977,   978,   979,   979,   979,   980,   981,
     982,   984,   983,   985,   983,   986,   987,   988,   983,   989,
     983,   991,   990,   992,   990,   993,   994,   990,   995,   990,
     996,   996,   997,   997,   997,   999,   998,   998,   998,  1000,
    1000,  1001,  1001,  1002,  1002,  1003,  1004,  1004,  1006,  1005,
    1007,  1009,  1008,  1011,  1010,  1012,  1013,  1012,  1012,  1012,
    1014,  1012,  1012,  1015,  1012,  1016,  1016,  1017,  1017,  1018,
    1018,  1019,  1019,  1020,  1021,  1022,  1023,  1024,  1024,  1025,
    1026,  1025,  1027,  1025,  1028,  1028,  1029,  1030,  1031,  1031,
    1032,  1032,  1033,  1033,  1034,  1034,  1036,  1035,  1037,  1038,
    1039,  1038,  1040,  1038,  1038,  1038,  1038,  1041,  1041,  1042,
    1042,  1043,  1043,  1045,  1046,  1044,  1047,  1047,  1048,  1048,
    1049,  1049,  1050,  1050,  1052,  1051,  1053,  1054,  1054,  1055,
    1055,  1056,  1056,  1057,  1057,  1058,  1058,  1059,  1059,  1059,
    1059,  1059,  1059,  1059,  1059,  1059,  1060,  1061,  1060,  1060,
    1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,  1066,
    1067,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1071,
    1071,  1072,  1072,  1073,  1073,  1073,  1074,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,  1074,  1075,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1076,  1076,  1076,  1076,  1077,  1077,  1078,  1079,
    1080,  1081,  1082,  1083,  1083,  1083,  1083,  1083,  1083,  1083,
    1084,  1084,  1084,  1085,  1085,  1085,  1085,  1086,  1087,  1088,
    1088,  1089,  1089,  1089,  1089,  1089,  1090,  1090,  1092,  1091,
    1093,  1091,  1094,  1091,  1095,  1091,  1096,  1091,  1097,  1091,
    1098,  1091,  1099,  1100,  1101,  1102,  1102,  1103,  1104,  1104,
    1105,  1105,  1106,  1108,  1107,  1110,  1109,  1111,  1109,  1112,
    1112,  1113,  1113,  1114,  1114,  1115,  1115,  1116,  1116,  1116,
    1116,  1117,  1116,  1116,  1116,  1118,  1118,  1119,  1119,  1119,
    1119,  1120,  1120,  1121,  1121,  1122,  1122,  1122,  1122,  1124,
    1123,  1125,  1125,  1126,  1126,  1127,  1127,  1128,  1128,  1129,
    1130,  1130,  1131,  1131,  1131,  1131,  1131,  1131,  1131,  1131,
    1132,  1132,  1132,  1132,  1132,  1132,  1132,  1132,  1132,  1132,
    1133,  1133,  1133,  1133,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1135,  1135,  1135,  1135,  1135,  1136,  1136,  1136,
    1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,
    1136,  1136,  1137,  1137,  1138,  1139,  1139,  1140,  1140,  1141,
    1141,  1141,  1141,  1141,  1142,  1142,  1142,  1142,  1142,  1143,
    1143,  1143,  1144,  1144,  1145,  1145,  1145,  1146,  1147,  1147,
    1147,  1147,  1147,  1147,  1148,  1149,  1149,  1149,  1149,  1150,
    1151,  1152,  1152,  1153,  1153,  1154,  1154,  1155,  1155,  1156,
    1156,  1156,  1156,  1156,  1156,  1156,  1157,  1157,  1158,  1158,
    1159,  1159,  1160,  1161,  1162,  1163,  1163,  1163,  1164,  1164,
    1164,  1165,  1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,
    1169,  1170,  1170,  1171,  1171,  1172,  1173,  1173,  1174,  1174,
    1175,  1175,  1175,  1176,  1176,  1177,  1177,  1177,  1177,  1177,
    1177,  1177,  1177,  1177,  1178,  1178,  1180,  1179,  1181,  1181,
    1182,  1183,  1183,  1183,  1183,  1184,  1185,  1186,  1186,  1187,
    1188,  1188,  1189,  1189,  1190,  1190,  1191,  1192,  1192,  1193,
    1193,  1194,  1194,  1194,  1194,  1195,  1195,  1195,  1195,  1195,
    1196,  1196,  1196,  1196,  1196,  1197,  1197,  1198,  1198,  1199,
    1199,  1200,  1200,  1200,  1201,  1202,  1203,  1203,  1204,  1204,
    1205,  1205,  1206,  1206,  1207,  1207,  1208,  1208,  1209,  1209,
    1210,  1210,  1210,  1211,  1211,  1212,  1212,  1212,  1212,  1212,
    1213,  1213,  1214,  1215,  1215,  1216,  1216,  1216,  1217,  1217,
    1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1222,  1222,
    1224,  1225,  1223,  1226,  1223,  1227,  1223,  1223,  1228,  1223,
    1229,  1223,  1230,  1223,  1231,  1223,  1232,  1223,  1233,  1223,
    1223,  1234,  1235,  1236,  1223,  1237,  1237,  1238,  1238,  1238,
    1238,  1239,  1239,  1239,  1239,  1239,  1240,  1240,  1240,  1240,
    1241,  1241,  1242,  1242,  1243,  1243,  1244,  1244,  1244,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1245,  1244,  1244,  1246,
    1244,  1247,  1244,  1244,  1244,  1244,  1244,  1244,  1248,  1244,
    1249,  1250,  1250,  1252,  1251,  1253,  1253,  1253,  1255,  1254,
    1256,  1257,  1256,  1258,  1258,  1259,  1260,  1260,  1261,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1263,  1263,  1263,  1263,  1263,  1264,  1264,  1265,
    1265,  1266,  1266,  1267,  1267,  1269,  1268,  1270,  1270,  1271,
    1271,  1272,  1272,  1273,  1273,  1273,  1274,  1274,  1274,  1275,
    1275,  1275,  1275,  1277,  1276,  1278,  1276,  1276,  1276,  1279,
    1280,  1280,  1281,  1281,  1282,  1282,  1282,  1284,  1283,  1285,
    1285,  1286,  1286,  1286,  1287,  1287,  1287,  1288,  1288,  1290,
    1289,  1291,  1291,  1291,  1292,  1293,  1292,  1295,  1294,  1296,
    1296,  1297,  1297,  1298,  1298,  1298,  1299,  1299,  1301,  1300,
    1302,  1302,  1303,  1304,  1304,  1305,  1305,  1306,  1307,  1306,
    1308,  1309,  1308,  1310,  1310,  1310,  1311,  1311,  1311,  1312,
    1312,  1313,  1313,  1314,  1315,  1314,  1317,  1316,  1318,  1318,
    1319,  1319,  1320,  1320,  1320,  1320,  1320,  1320,  1321,  1321,
    1323,  1322,  1324,  1324,  1324,  1326,  1325,  1325,  1327,  1327,
    1328,  1328,  1329,  1331,  1330,  1332,  1332,  1333,  1333,  1334,
    1335,  1336,  1336,  1338,  1337,  1339,  1339,  1340,  1340,  1341,
    1342,  1344,  1343,  1346,  1345,  1347,  1347,  1348,  1348,  1350,
    1349,  1351,  1349,  1353,  1352,  1354,  1352,  1355,  1355,  1357,
    1356,  1359,  1360,  1358,  1361,  1362,  1363,  1363,  1364,  1364,
    1366,  1365,  1367,  1365,  1368,  1368,  1369,  1370,  1369,  1369,
    1371,  1371,  1372,  1373,  1374,  1374,  1375,  1375,  1376,  1377,
    1377,  1378,  1378,  1379,  1379,  1379,  1380,  1380,  1380,  1381,
    1382,  1382,  1383,  1383,  1384,  1384,  1384,  1384,  1385,  1385,
    1386,  1386,  1386,  1387,  1387,  1388,  1388,  1389,  1389,  1389,
    1389,  1390,  1390,  1390,  1391,  1391,  1392,  1393,  1394,  1395,
    1395,  1395,  1395,  1395,  1396,  1396,  1396,  1397,  1397,  1397,
    1398,  1398,  1399,  1399,  1399,  1399,  1399,  1400,  1400,  1400,
    1400,  1400,  1400,  1400,  1400,  1400,  1400,  1400,  1400,  1401,
    1401,  1401,  1401,  1401,  1401,  1401,  1401,  1401,  1401,  1401,
    1401,  1401,  1401,  1401,  1401,  1402,  1402,  1402,  1402,  1402,
    1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,
    1402,  1402,  1402,  1402,  1403,  1403,  1404,  1404,  1405,  1405,
    1406,  1406,  1407,  1407,  1407,  1407,  1407,  1407,  1408,  1408,
    1409,  1409,  1410,  1410,  1410,  1411,  1411,  1411,  1411,  1411,
    1411,  1412,  1412,  1412,  1413,  1413,  1414,  1415,  1415,  1416,
    1416,  1416,  1416,  1417,  1418,  1418,  1418,  1418,  1418,  1418,
    1418,  1418,  1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,
    1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,
    1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,  1419,
    1419,  1420,  1420,  1420,  1420,  1421,  1421,  1422,  1422,  1422,
    1422,  1422,  1422,  1423,  1423,  1424,  1424,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1426,  1426,
    1426,  1426,  1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,
    1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,
    1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,  1427,
    1427,  1427,  1427,  1427,  1427,  1428,  1428,  1428,  1428,  1428,
    1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,
    1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,
    1428,  1430,  1429,  1429,  1429,  1429,  1429,  1429,  1431,  1431,
    1432,  1432,  1433,  1433,  1434,  1434,  1435,  1435,  1436,  1437,
    1437,  1437,  1437,  1437,  1437,  1437,  1438,  1439,  1437,  1437,
    1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1440,
    1437,  1441,  1437,  1442,  1437,  1443,  1443,  1444,  1444,  1444,
    1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,
    1445,  1445,  1445,  1446,  1448,  1447,  1447,  1449,  1449,  1450,
    1451,  1453,  1452,  1454,  1454,  1454,  1454,  1455,  1455,  1456,
    1456,  1457,  1457,  1458,  1458,  1459,  1459,  1460,  1461,  1463,
    1462,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,
    1464,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1466,
    1466,  1466,  1466,  1467,  1467,  1468,  1468,  1469,  1469,  1470,
    1470,  1471,  1471,  1472,  1472,  1473,  1473,  1474,  1474,  1475,
    1475,  1475,  1476,  1476,  1476,  1476,  1476,  1477,  1478,  1479,
    1479,  1481,  1480,  1482,  1480,  1483,  1483,  1483,  1484,  1484,
    1484,  1484,  1485,  1485,  1485,  1485,  1485,  1486,  1486,  1486,
    1487,  1488,  1490,  1491,  1489,  1492,  1492,  1493,  1493,  1494,
    1495,  1494,  1496,  1494,  1494,  1497,  1494,  1498,  1494,  1494,
    1499,  1494,  1500,  1494,  1494,  1501,  1501,  1501,  1502,  1502,
    1503,  1503,  1504,  1505,  1505,  1505,  1505,  1505,  1506,  1506,
    1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,  1512,
    1512,  1513,  1513,  1514,  1514,  1514,  1514,  1515,  1515,  1517,
    1516,  1518,  1516,  1519,  1519,  1520,  1521,  1520,  1523,  1522,
    1524,  1524,  1525,  1525,  1526,  1526,  1527,  1527,  1528,  1528,
    1528,  1528,  1528,  1528,  1528,  1528,  1528,  1528,  1528,  1528,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1530,
    1530,  1530,  1530,  1531,  1531,  1531,  1532,  1532,  1533,  1534,
    1534,  1535,  1536,  1535,  1537,  1538,  1537,  1539,  1539,  1540,
    1540,  1541,  1541,  1541,  1542,  1542,  1543,  1543,  1544,  1546,
    1545,  1547,  1547,  1548,  1548,  1549,  1549,  1550,  1550,  1551,
    1551,  1552,  1552,  1553,  1553,  1553,  1554,  1554,  1554,  1555,
    1555,  1555,  1555,  1555,  1555,  1556,  1557,  1557,  1558,  1559,
    1559,  1561,  1560,  1562,  1562,  1563,  1563,  1563,  1564,  1564,
    1565,  1565,  1565,  1565,  1566,  1566,  1566,  1566,  1566,  1567,
    1567,  1568,  1568,  1569,  1569,  1570,  1571,  1571,  1571,  1572,
    1572,  1572,  1572,  1572,  1572,  1573,  1574,  1574,  1574,  1574,
    1575,  1575,  1575,  1576,  1576,  1577,  1578,  1579,  1579,  1579,
    1580,  1580,  1581,  1581,  1582,  1582,  1583,  1583,  1583,  1583,
    1583,  1583,  1584,  1584,  1584,  1584,  1584,  1585,  1585,  1585,
    1585,  1586,  1586,  1586,  1586,  1586,  1587,  1587,  1587,  1587,
    1587,  1588,  1589,  1589,  1590,  1590,  1591,  1591,  1591,  1593,
    1592,  1594,  1594,  1595,  1595,  1596,  1598,  1597,  1599,  1599,
    1600,  1601,  1601,  1601,  1602,  1604,  1605,  1603,  1603,  1603,
    1607,  1606,  1609,  1608,  1610,  1608,  1608,  1608,  1608,  1611,
    1608,  1608,  1608,  1608,  1612,  1608,  1608,  1613,  1613,  1614,
    1615,  1616,  1616,  1617,  1618,  1618,  1619,  1619,  1620,  1620,
    1622,  1623,  1621,  1625,  1626,  1624,  1627,  1628,  1629,  1629,
    1629,  1630,  1630,  1631,  1631,  1632,  1632,  1634,  1633,  1635,
    1635,  1636,  1635,  1637,  1638,  1638,  1639,  1639,  1640,  1641,
    1641,  1642,  1642,  1643,  1644,  1644,  1645,  1645,  1646,  1646,
    1647,  1647,  1649,  1648,  1651,  1650,  1652,  1652,  1653,  1653,
    1654,  1654,  1655,  1655,  1656,  1656,  1657,  1657,  1658,  1659,
    1660,  1658,  1661,  1661,  1663,  1664,  1665,  1662,  1666,  1666,
    1667,  1667,  1668,  1668,  1669,  1670,  1670,  1672,  1671,  1673,
    1673,  1674,  1674,  1675,  1676,  1677,  1678,  1679,  1677,  1680,
    1681,  1677,  1682,  1683,  1682,  1684,  1684,  1685,  1685,  1686,
    1686,  1687,  1687,  1688,  1688,  1688,  1690,  1691,  1689,  1692,
    1692,  1693,  1693,  1694,  1694,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1696,  1696,  1698,  1697,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1700,  1699,  1701,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1702,  1702,  1702,  1703,  1703,
    1704,  1704,  1705,  1705,  1706,  1706,  1707,  1707,  1708,  1708,
    1709,  1709,  1710,  1710,  1710,  1712,  1711,  1713,  1711,  1714,
    1714,  1714,  1714,  1714,  1714,  1715,  1715,  1716,  1717,  1717,
    1717,  1717,  1718,  1718,  1719,  1719,  1719,  1720,  1722,  1721,
    1724,  1723,  1723,  1725,  1725,  1726,  1727,  1726,  1728,  1728,
    1729,  1729,  1729,  1729,  1729,  1729,  1729,  1729,  1729,  1729,
    1729,  1729,  1729,  1729,  1729,  1729,  1729,  1729,  1730,  1730,
    1731,  1732,  1733,  1732,  1732,  1734,  1734,  1735,  1735,  1735,
    1736,  1737,  1737,  1739,  1738,  1740,  1740,  1742,  1741,  1743,
    1741,  1741,  1744,  1744,  1745,  1745,  1746,  1747,  1746,  1749,
    1748,  1750,  1750,  1750,  1751,  1751,  1751,  1752,  1752,  1753,
    1753,  1755,  1754,  1756,  1756,  1757,  1759,  1760,  1761,  1762,
    1758,  1763,  1763,  1764,  1764,  1765,  1765,  1765,  1766,  1766,
    1766,  1767,  1767,  1768,  1768,  1769,  1769,  1769,  1769,  1770,
    1770,  1771,  1771,  1772,  1772,  1773,  1773,  1774,  1774,  1775,
    1775,  1776,  1776,  1776,  1777,  1777,  1778,  1778,  1779,  1779,
    1780,  1780,  1781,  1782,  1782,  1782,  1782,  1783,  1783,  1784,
    1784,  1784,  1785,  1785,  1785,  1786,  1786,  1787,  1787,  1787,
    1787,  1787,  1787,  1787,  1787,  1787,  1787,  1788,  1788,  1788,
    1788,  1788,  1789,  1789,  1789,  1791,  1790,  1792,  1792,  1793,
    1793,  1794,  1795,  1796,  1795,  1797,  1797,  1798,  1799,  1800,
    1800,  1801,  1802,  1802,  1803,  1803,  1804,  1804,  1805,  1806,
    1806,  1806,  1806,  1806,  1807,  1807,  1807,  1807,  1807,  1808,
    1808,  1808,  1808,  1809,  1809,  1809,  1810,  1810,  1811,  1812,
    1812,  1813,  1813,  1813,  1814,  1815,  1816,  1817,  1818,  1818,
    1819,  1819,  1820,  1820,  1820,  1821,  1821,  1822,  1822,  1823,
    1823,  1823,  1824,  1824,  1824,  1825,  1825,  1826,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1828,  1828,  1828,  1828,  1828,  1828,  1828,  1828,  1828,  1828,
    1828,  1828,  1828,  1829,  1829,  1829,  1829,  1829,  1829,  1829,
    1829,  1829,  1829,  1829,  1829,  1829,  1830,  1830,  1830,  1830,
    1830,  1830,  1830,  1830,  1830,  1830,  1830,  1830,  1830,  1831,
    1831,  1831,  1831,  1831,  1831,  1831,  1831,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1833,  1833,  1833,  1833,  1833,  1833,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1835,  1835,  1835,
    1836,  1836,  1836,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1838,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1842,  1841,  1843,
    1843,  1844,  1843,  1845,  1843,  1846,  1843,  1847,  1847,  1848,
    1848,  1849,  1848,  1850,  1850,  1852,  1851,  1851,  1853,  1853,
    1853,  1854,  1854,  1854,  1854,  1855,  1855,  1855,  1855,  1857,
    1856,  1858,  1856,  1859,  1856,  1861,  1860,  1862,  1860,  1863,
    1860,  1865,  1864,  1866,  1864,  1867,  1864,  1868,  1864,  1869,
    1864,  1870,  1864,  1871,  1864,  1864,  1864,  1864,  1864,  1864,
    1864,  1864,  1872,  1864,  1873,  1864,  1874,  1864,  1875,  1875,
    1875,  1875,  1876,  1877,  1878,  1878,  1879,  1879,  1879,  1879,
    1880,  1880,  1880,  1881,  1881,  1881,  1881,  1881,  1883,  1882,
    1884,  1884,  1884,  1885,  1885,  1886,  1886,  1887,  1888,  1888,
    1888,  1888,  1888,  1890,  1889,  1892,  1891,  1893,  1893,  1894,
    1893,  1895,  1895,  1896,  1896,  1897,  1897,  1897,  1897,  1898,
    1897,  1899,  1899,  1899,  1899,  1899,  1900,  1901,  1901,  1901,
    1901,  1901,  1902,  1902,  1903,  1904,  1904,  1904,  1904,  1905,
    1905,  1906,  1906,  1907,  1907,  1908,  1909,  1910,  1910,  1911,
    1911,  1912,  1912,  1913,  1913,  1914,  1914,  1914,  1914,  1915,
    1916,  1916,  1916,  1916,  1917,  1917,  1917,  1917,  1917,  1917,
    1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,
    1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,
    1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,  1917,
    1917,  1917,  1917,  1917,  1917,  1917,  1918,  1918,  1919,  1919,
    1920,  1920,  1920,  1921,  1921,  1921,  1921,  1922,  1922,  1923,
    1923,  1924,  1924,  1925,  1925,  1926,  1926,  1927,  1927,  1927,
    1927,  1928,  1928,  1929,  1930,  1930,  1930,  1931,  1931,  1931,
    1931,  1931,  1932,  1932,  1932,  1932,  1932,  1933,  1933,  1934,
    1934,  1935,  1935,  1936,  1936,  1937,  1937,  1938,  1938,  1940,
    1939,  1941,  1942,  1942,  1943,  1943,  1944,  1944,  1944,  1945,
    1945,  1945,  1946,  1947,  1947,  1947,  1948,  1949,  1950,  1950,
    1950,  1951,  1951,  1951,  1952,  1952,  1952,  1952,  1952,  1952,
    1952,  1952,  1952,  1953,  1953,  1954,  1955,  1956,  1956,  1956,
    1957,  1957,  1958,  1958,  1959,  1959,  1960,  1960,  1962,  1961,
    1963,  1963,  1963,  1963,  1964,  1964,  1965,  1965,  1967,  1968,
    1969,  1970,  1971,  1966,  1973,  1972,  1974,  1974,  1974,  1974,
    1974,  1974,  1975,  1975,  1976,  1976,  1976,  1977,  1977,  1977,
    1978,  1978,  1978,  1979,  1979,  1980,  1981,  1980,  1982,  1982,
    1983,  1983,  1984,  1984,  1985,  1986,  1987,  1987,  1988,  1989,
    1988,  1990,  1988,  1991,  1988,  1992,  1993,  1994,  1995,  1995,
    1996,  1996,  1996,  1996,  1996,  1996,  1996,  1996,  1997,  1997,
    1997,  1997,  1997,  1997,  1997,  1997,  1998,  1998,  1998,  1999,
    2000,  2002,  2001,  2003,  2004,  2005,  2006,  2007,  2007,  2007,
    2008,  2008,  2008,  2010,  2009,  2011,  2012,  2012,  2012,  2012,
    2012,  2012,  2012,  2012,  2013,  2013,  2014,  2014,  2016,  2015,
    2017,  2015,  2018,  2015,  2019,  2019,  2020,  2021,  2021,  2022,
    2022,  2024,  2023,  2025,  2026,  2026,  2027,  2027,  2028,  2028,
    2029,  2029,  2030,  2030,  2031,  2033,  2034,  2035,  2032,  2036,
    2036,  2037,  2037,  2038,  2038,  2040,  2039,  2041,  2041,  2042,
    2042,  2042,  2043,  2043,  2044,  2044,  2045,  2047,  2046,  2049,
    2048,  2050,  2050,  2050,  2052,  2051,  2054,  2053,  2055,  2056,
    2056,  2057,  2057,  2058,  2058,  2059,  2059,  2060,  2061,  2061,
    2061,  2062,  2062,  2062,  2062,  2064,  2063,  2066,  2067,  2065,
    2068,  2068,  2068,  2068,  2068,  2070,  2069,  2071,  2069,  2072,
    2069,  2069,  2073,  2069,  2074,  2075,  2076,  2069,  2077,  2077,
    2079,  2078,  2078,  2080,  2080,  2081,  2081,  2082,  2082,  2083,
    2083,  2083,  2084,  2083,  2085,  2085,  2085,  2085,  2085,  2085,
    2086,  2086,  2086,  2086,  2086,  2086,  2086,  2086,  2086,  2086,
    2086,  2087,  2087,  2087,  2087,  2089,  2088,  2090,  2091,  2088,
    2092,  2092,  2094,  2093,  2095,  2096,  2093,  2098,  2097
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     7,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     1,     0,     1,     3,     0,     0,     8,
       0,     8,     0,     0,    15,     0,     0,    17,     0,     0,
      15,     0,     0,    15,     0,     6,     0,    10,     0,    11,
       0,     5,     0,     5,     8,     6,     0,     3,     1,     0,
       1,     1,     2,     3,     2,     1,     3,     2,     1,     3,
       3,     3,     1,     1,     1,     1,     3,     0,     1,     0,
      12,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       0,    12,     0,     6,     2,     0,     1,     3,     1,     0,
       2,     0,     2,     0,     1,     4,     0,     2,     0,     3,
       0,     0,     1,     1,     1,     1,     2,     3,     1,     0,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     1,
       1,     2,     3,     3,     0,     4,     0,     6,     0,     8,
       0,     3,     0,     1,     3,     1,     0,     0,     2,     3,
       1,     1,     0,     1,     3,     1,     1,     1,     1,     0,
       4,     3,     0,     3,     2,     3,     1,     3,     5,     2,
       1,     3,     3,     1,     0,     4,     4,     1,     0,     6,
       0,     3,     0,     0,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     3,     0,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     1,     1,     0,     1,
       0,     2,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     4,     0,     1,     1,     3,     1,     3,     3,     1,
       2,     1,     1,     1,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     5,     0,     2,
       1,     1,     2,     1,     1,     2,     3,     4,     1,     2,
       3,     4,     2,     2,     2,     0,     2,     0,     0,     3,
       0,     3,     1,     3,     0,     3,     1,     1,     1,     3,
       3,     4,     5,     2,     4,     2,     1,     3,     0,     0,
       6,     0,     2,     2,     2,     0,     6,     0,     3,     1,
       1,     2,     1,     2,     0,     5,     0,     5,     0,     2,
       0,     1,     0,     1,     2,     5,     3,     5,     3,     5,
       1,     0,     5,     0,     5,     0,     0,     0,     8,     0,
       5,     0,     3,     0,     3,     0,     0,     5,     0,     3,
       1,     1,     1,     1,     1,     0,     5,     3,     1,     2,
       4,     0,     4,     1,     4,     1,     0,     1,     0,     4,
       0,     0,     3,     0,     6,     6,     0,     4,     2,     2,
       0,     3,     2,     0,     3,     0,     1,     0,     3,     0,
       1,     1,     3,     1,     4,     3,     3,     0,     2,     0,
       0,     7,     0,    10,     1,     3,     1,     1,     0,     2,
       0,     3,     1,     3,     0,     1,     0,     6,     1,     0,
       0,     4,     0,     3,     1,     1,     1,     1,     1,     1,
       3,     1,     3,     0,     0,     5,     1,     3,     1,     1,
       0,     3,     1,     3,     0,     4,     1,     0,     1,     2,
       1,     1,     1,     0,     1,     2,     1,     3,     4,     3,
       3,     3,     3,     4,     4,     3,     0,     0,     6,     3,
       0,     2,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     1,     3,     0,     3,     0,     3,     1,     3,     0,
       1,     1,     2,     1,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     3,     1,
       3,     1,     3,     3,     3,     3,     0,     1,     2,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       3,     1,     1,     1,     1,     2,     1,     3,     0,     9,
       0,    10,     0,     9,     0,     9,     0,    11,     0,    12,
       0,    10,     2,     7,     7,     0,     1,     4,     0,     1,
       0,     1,     2,     0,     4,     0,     3,     0,     3,     0,
       1,     2,     1,     0,     1,     2,     1,     0,     1,     2,
       3,     0,     6,     5,     5,     0,     2,     0,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     2,     1,     0,
       3,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     2,     1,     1,     3,     3,     3,     3,
       0,     1,     2,     2,     3,     3,     2,     3,     3,     4,
       3,     3,     3,     1,     2,     2,     2,     2,     3,     3,
       2,     2,     2,     3,     3,     2,     3,     2,     2,     2,
       2,     2,     5,     5,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     0,     3,     0,     1,     1,     5,     0,     1,
       1,     1,     2,     2,     1,     3,     3,     3,     3,     1,
       1,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     4,     1,     3,     2,     1,     0,     2,     0,     1,
       0,     1,     2,     2,     2,     3,     2,     1,     1,     1,
       2,     1,     2,     2,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       2,     1,     1,     0,     1,     1,     1,     2,     1,     2,
       3,     3,     2,     2,     0,     1,     0,     4,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     1,     3,     3,
       1,     1,     0,     2,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     2,     1,     2,     0,     2,
       0,     2,     2,     2,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     2,
       4,     2,     0,     4,     1,     4,     0,     1,     1,     3,
       0,     0,     9,     0,     5,     0,     7,     7,     0,     6,
       0,     6,     0,    11,     0,    10,     0,    11,     0,     8,
       8,     0,     0,     0,     9,     1,     1,     0,     1,     1,
       3,     0,     2,     3,     5,     5,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     0,     2,     2,     2,
       2,     1,     1,     1,     4,     4,     0,     6,     4,     0,
       5,     0,     6,     4,     3,     1,     7,     7,     0,     7,
       2,     1,     1,     0,     6,     0,     3,     2,     0,     5,
       0,     0,     6,     1,     3,     1,     1,     3,     3,     3,
       2,     2,     4,     4,     2,     7,     6,     5,     5,     4,
       5,     4,     4,     2,     2,     7,     5,     6,     3,     6,
       6,     4,     6,     1,     1,     1,     1,     1,     3,     3,
       3,     5,     0,     1,     1,     2,     2,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     2,     0,     1,     2,
       1,     1,     1,     0,     1,     1,     0,     2,     1,     0,
       1,     1,     1,     0,     7,     0,     5,     5,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     0,     2,     1,
       3,     0,     1,     1,     0,     2,     4,     1,     3,     0,
       5,     0,     1,     1,     3,     0,     4,     0,     4,     0,
       1,     1,     2,     1,     1,     1,     0,     2,     0,     5,
       1,     3,     2,     0,     3,     1,     4,     1,     0,     4,
       1,     0,     4,     0,     1,     3,     0,     1,     3,     1,
       1,     2,     6,     3,     0,     4,     0,     3,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     0,     2,
       0,     6,     0,     1,     1,     0,     5,     4,     3,     5,
       1,     3,     4,     0,     6,     1,     1,     1,     3,     2,
       3,     1,     1,     0,     6,     1,     1,     1,     3,     3,
       4,     0,     6,     0,     2,     0,     4,     0,     2,     0,
       3,     0,     4,     0,     3,     0,     4,     1,     1,     0,
       3,     0,     0,     5,     6,     7,     1,     2,     1,     1,
       0,     3,     0,     3,     3,     3,     1,     0,     4,     3,
       1,     1,     1,     1,     1,     4,     0,     1,     2,     1,
       1,     0,     1,     0,     1,     1,     2,     1,     2,     9,
       0,     1,     0,     2,     3,     1,     4,     4,     2,     1,
       1,     1,     1,     3,     5,     0,     1,     0,     2,     1,
       2,     3,     1,     1,     3,     4,     0,     0,     0,     0,
       2,     2,     1,     1,     0,     2,     3,     0,     2,     3,
       0,     2,     3,     3,     3,     2,     1,     3,     4,     3,
       4,     3,     4,     3,     4,     3,     3,     6,     1,     3,
       4,     5,     7,     6,     8,     5,     6,     4,     3,     5,
       4,     6,     3,     4,     1,     3,     3,     3,     3,     3,
       3,     3,     5,     5,     5,     6,     6,     3,     3,     3,
       3,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     2,     1,     1,     1,
       2,     1,     2,     2,     2,     1,     4,     1,     3,     1,
       1,     1,     1,     3,     1,     4,     4,     4,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     6,     4,     4,     7,     6,     3,     4,
       6,     6,     4,     4,     4,     4,     4,     4,     6,     8,
      10,     1,     1,     3,     1,     1,     3,     1,     2,     2,
       2,     2,     2,     1,     3,     4,     6,     4,     6,     2,
       2,     4,     4,     4,    10,     6,     8,     6,     4,     4,
       6,     4,     3,     4,     1,     4,     3,     4,     5,     3,
       5,     3,     6,     6,     8,     2,     2,     8,     8,     6,
       8,     6,     6,     6,     6,     2,     6,     2,     6,     8,
       4,     1,     3,     4,     8,     8,     4,     2,     2,     2,
       6,     6,     4,     4,     8,     4,     4,     4,     4,     3,
       8,     6,     8,     4,     6,     4,     6,     4,     4,     4,
       6,     8,     4,     3,     6,     4,     6,     5,     8,     7,
      10,     0,     5,     4,     4,     4,     6,     8,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     4,     4,
       5,     4,     4,     4,     5,     4,     0,     0,     7,     4,
       5,     4,     5,     4,     4,     4,     4,     4,     5,     0,
       9,     0,     8,     0,     7,     3,     3,     1,     1,     1,
       3,     3,     3,     3,     3,     4,     4,     4,     6,     4,
       6,     4,     6,     5,     0,     7,     4,     4,     4,     4,
       1,     0,     3,     3,     1,     3,     5,     0,     1,     0,
       2,     0,     3,     4,     2,     0,     1,     2,     1,     0,
       3,     2,     3,     3,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     2,     1,     2,     2,     1,     2,     1,
       2,     2,     3,     0,     1,     1,     3,     1,     3,     1,
       3,     4,     5,     1,     3,     3,     3,     1,     1,     1,
       1,     2,     1,     1,     1,     1,     1,     1,     4,     1,
       3,     0,     3,     0,     5,     2,     4,     4,     1,     1,
       1,     1,     0,     1,     2,     1,     2,     1,     1,     2,
       3,     3,     0,     0,    10,     1,     4,     1,     3,     3,
       0,     6,     0,     8,     4,     0,     8,     0,    10,     6,
       0,     8,     0,    10,     6,     1,     2,     1,     1,     2,
       0,     1,     5,     1,     1,     1,     1,     1,     1,     3,
       1,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       2,     0,     1,     0,     2,     3,     3,     1,     1,     0,
       7,     0,     7,     1,     2,     0,     0,     2,     0,     2,
       0,     1,     1,     1,     1,     3,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     0,     1,     2,     0,
       1,     0,     0,     3,     0,     0,     3,     0,     4,     4,
       2,     0,     1,     1,     0,     2,     3,     1,     3,     0,
       7,     0,     1,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     4,     2,     2,     2,     1,     2,     2,     0,
       3,     2,     2,     3,     3,     3,     3,     1,     2,     0,
       1,     0,     4,     4,     2,     0,     1,     1,     0,     1,
       2,     5,     4,     1,     4,     7,     5,     8,     3,     1,
       1,     1,     1,     1,     2,     1,     1,     3,     3,     1,
       3,     1,     1,     1,     1,     1,     0,     2,     3,     4,
       1,     2,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     1,     0,     1,     2,     2,     2,     1,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       6,     0,     1,     3,     1,     3,     0,     2,     3,     1,
       1,     2,     1,     3,     2,     0,     0,     7,     2,     1,
       0,     3,     0,     8,     0,     8,     4,     5,     5,     0,
       6,     4,     4,     4,     0,     6,     1,     1,     3,     1,
       2,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       0,     0,    12,     0,     0,    10,     0,     0,     0,     1,
       1,     0,     1,     1,     1,     0,     1,     0,     2,     1,
       2,     0,     3,     3,     0,     1,     3,     1,     1,     3,
       1,     3,     1,     3,     1,     1,     0,     1,     1,     1,
       1,     1,     0,     4,     0,     4,     0,     1,     0,     1,
       3,     1,     5,     3,     1,     1,     1,     1,     0,     0,
       0,     7,     5,     1,     0,     0,     0,    13,     3,     1,
       3,     3,     3,     1,     3,     0,     1,     0,     3,     0,
       3,     2,     3,     3,     2,     5,     0,     0,     7,     0,
       0,     8,     0,     0,     3,     1,     3,     2,     4,     0,
       2,     0,     2,     1,     1,     1,     0,     0,     7,     0,
       1,     0,     1,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     0,     3,     0,     3,     2,     4,
       4,     3,     4,     4,     1,     3,     3,     3,     3,     6,
       2,     2,     0,     6,     0,     8,     5,     2,     1,     1,
       1,     5,     5,     2,     2,     1,     4,     3,     2,     3,
       2,     2,     1,     4,     4,     3,     3,     3,     2,     2,
       3,     4,     3,     3,     3,     3,     4,     4,     3,     2,
       3,     3,     3,     3,     3,     4,     4,     3,     3,     4,
       4,     3,     4,     4,     3,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     3,     3,     0,     4,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     1,     0,     3,     0,     1,     1,     5,     0,     4,
       0,     4,     1,     0,     1,     4,     0,     3,     3,     1,
       2,     2,     2,     2,     3,     4,     2,     1,     1,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     0,     1,
       2,     2,     0,     3,     1,     0,     5,     0,     1,     3,
       1,     0,     3,     0,     3,     3,     1,     0,     5,     0,
       3,     2,     0,     1,     0,     2,     5,     0,     6,     0,
       4,     0,     1,     1,     2,     2,     3,     0,     1,     1,
       2,     0,     3,     0,     4,     2,     0,     0,     0,     0,
      23,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     5,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     0,     4,     0,     1,     1,
       3,     7,     0,     0,     4,     0,     3,     1,     1,     1,
       3,     1,     1,     1,     3,     5,     3,     5,     1,     1,
       3,     4,     5,     4,     1,     3,     4,     4,     5,     1,
       5,     3,     2,     1,     3,     2,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     1,
       3,     0,     3,     0,     3,     0,     5,     1,     3,     1,
       3,     0,     3,     1,     3,     0,     3,     1,     1,     1,
       1,     0,     1,     1,     1,     0,     2,     2,     2,     0,
       4,     0,     6,     0,     6,     0,     4,     0,     6,     0,
       6,     0,     4,     0,     6,     0,     6,     0,     5,     0,
       7,     0,     9,     0,     9,     2,     3,     2,     4,     3,
       5,     2,     0,     4,     0,     4,     0,     6,     1,     1,
       3,     3,     1,     3,     2,     2,     2,     2,     2,     1,
       1,     4,     4,     1,     1,     1,     1,     1,     0,     5,
       0,     2,     1,     1,     1,     1,     3,     3,     1,     1,
       2,     2,     2,     0,     3,     0,     3,     3,     2,     0,
       6,     1,     2,     1,     1,     1,     1,     1,     1,     0,
       5,     1,     1,     1,     1,     1,     3,     6,     6,     7,
       5,     3,     4,     1,     3,     8,     8,     6,     4,     0,
       3,     0,     3,     1,     3,     2,     1,     1,     1,     0,
       1,     1,     2,     0,     1,     1,     1,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     2,     2,     2,     2,     3,     2,
       2,     2,     2,     3,     3,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       1,     3,     1,     2,     0,     2,     5,     0,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     0,
       2,     0,     2,     0,     3,     2,     1,     2,     1,     0,
       3,     1,     0,     1,     0,     1,     0,     3,     2,     0,
       1,     2,     4,     4,     5,     4,     2,     3,     2,     2,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     3,     3,
       0,     1,     3,     3,     0,     3,     1,     3,     0,     3,
       0,     3,     4,     4,     1,     1,     0,     2,     0,     0,
       0,     0,     0,    20,     0,     2,     4,     4,     3,     4,
       3,     3,     0,     3,     1,     3,     5,     1,     1,     1,
       0,     1,     1,     0,     2,     0,     0,     3,     0,     2,
       6,     3,     4,     4,     1,     0,     1,     1,     1,     0,
       3,     0,     5,     0,     7,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     0,     6,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     2,     0,     2,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       0,     6,     0,     7,     1,     2,     3,     1,     2,     1,
       2,     0,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     0,     0,     0,     7,     2,
       1,     1,     2,     1,     1,     0,     2,     1,     3,     1,
       1,     2,     1,     2,     1,     2,     0,     0,     8,     0,
       6,     4,     4,     1,     0,     5,     0,     5,     2,     1,
       1,     1,     2,     3,     3,     5,     5,     2,     2,     3,
       1,     6,     8,     4,     6,     0,     5,     0,     0,     8,
       6,     4,     4,     4,     5,     0,     6,     0,    12,     0,
      12,    10,     0,    13,     0,     0,     0,    16,     1,     1,
       0,     3,     1,     2,     3,     2,     3,     1,     1,     1,
       4,     2,     0,     6,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     6,     0,     0,     9,
       1,     2,     0,     5,     0,     0,     7,     0,     4
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 1909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 28856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3: /* $@1: %empty  */
#line 1918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 28883 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 5: /* query: directly_executable_statement END_OF_INPUT  */
#line 1943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 28892 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 71: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 28900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 74: /* $@2: %empty  */
#line 2038 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 28906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 75: /* prepare: PREPARE_SYM ident FROM $@2 expr  */
#line 2040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 76: /* execute: EXECUTE_SYM ident execute_using  */
#line 2049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 28925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 77: /* $@3: %empty  */
#line 2054 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 28931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 78: /* $@4: %empty  */
#line 2056 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= NULL; }
#line 28937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 79: /* execute: EXECUTE_SYM IMMEDIATE_SYM $@3 expr $@4 execute_using  */
#line 2058 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 28946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 80: /* execute_using: %empty  */
#line 2065 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item_list)= NULL; }
#line 28952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 81: /* $@5: %empty  */
#line 2067 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 28958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 82: /* execute_using: USING $@5 execute_params  */
#line 2069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 28967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 83: /* execute_params: expr_or_ignore_or_default  */
#line 2077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 28976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 84: /* execute_params: execute_params ',' expr_or_ignore_or_default  */
#line 2082 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 28985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 85: /* $@6: %empty  */
#line 2093 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 28994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 86: /* help: HELP_SYM $@6 ident_or_text  */
#line 2098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 29004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 87: /* $@7: %empty  */
#line 2109 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 29012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 88: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs optional_for_channel  */
#line 2114 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 29018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 91: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 2124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 29026 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 92: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 2128 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 29034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 93: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 2132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 29042 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 94: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 2136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 29050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 95: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 2140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 29058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 96: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 2144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 29072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 97: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 2154 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 2159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 29089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 2163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 29097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 2167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 29105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 101: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 2171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 29113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 102: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 2175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 29121 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 103: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 2179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 2184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 29138 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 105: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 2188 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 29146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 106: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 2193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 107: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 29186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 108: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2225 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 109: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 114: /* ignore_server_id: ulong_num  */
#line 2244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 118: /* do_domain_id: ulong_num  */
#line 2257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 122: /* ignore_domain_id: ulong_num  */
#line 2270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 29234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 124: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 29253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 29261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 126: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2300 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 29271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 29281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 29291 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 129: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 29301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 130: /* master_file_def: MASTER_DEMOTE_TO_SLAVE_SYM '=' bool  */
#line 2324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.is_demotion_opt= (bool) (yyvsp[0].ulong_num);
          }
#line 29309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 131: /* optional_connection_name: %empty  */
#line 2331 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 29318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 133: /* connection_name: TEXT_STRING_sys  */
#line 2340 "/home/buildbot/git/sql/sql_yacc.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 29330 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 134: /* optional_for_channel: %empty  */
#line 2351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*do nothing */
          }
#line 29338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 136: /* for_channel: FOR_SYM CHANNEL_SYM TEXT_STRING_sys  */
#line 2360 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (Lex->mi.connection_name.str != NULL)
          {
            my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "CONNECTION_NAME AND FOR CHANNEL CAN NOT BE SPECIFIED AT THE SAME TIME)"));
          }
          else
          {
            Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
          }

          }
#line 29358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 137: /* $@8: %empty  */
#line 2381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 29374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 138: /* $@9: %empty  */
#line 2393 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
            lex->inc_select_stack_outer_barrier();
          }
#line 29395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 139: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists $@8 table_ident $@9 create_body  */
#line 2410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 29405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 140: /* $@10: %empty  */
#line 2416 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 29439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 141: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@10 opt_sequence opt_create_table_options  */
#line 2446 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 29468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 142: /* $@11: %empty  */
#line 2471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 143: /* $@12: %empty  */
#line 2478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::MULTIPLE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 144: /* create: create_or_replace INDEX_SYM opt_if_not_exists $@11 ident opt_key_algorithm_clause ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29496 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 145: /* $@13: %empty  */
#line 2490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 146: /* $@14: %empty  */
#line 2497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::UNIQUE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 147: /* create: create_or_replace UNIQUE_SYM INDEX_SYM opt_if_not_exists $@13 ident opt_key_algorithm_clause ON table_ident $@14 '(' key_list opt_without_overlaps ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 148: /* $@15: %empty  */
#line 2510 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 149: /* $@16: %empty  */
#line 2516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 150: /* create: create_or_replace fulltext INDEX_SYM $@15 opt_if_not_exists ident ON table_ident $@16 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 151: /* $@17: %empty  */
#line 2528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 152: /* $@18: %empty  */
#line 2534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 153: /* create: create_or_replace spatial INDEX_SYM $@17 opt_if_not_exists ident ON table_ident $@18 '(' key_list ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 154: /* $@19: %empty  */
#line 2546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
          }
#line 29588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 155: /* create: create_or_replace DATABASE opt_if_not_exists ident $@19 opt_create_database_options  */
#line 2550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 29600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 156: /* $@20: %empty  */
#line 2559 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 29613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 157: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@20 view_list_opt AS view_select  */
#line 2568 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29621 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 158: /* $@21: %empty  */
#line 2573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
          }
#line 29633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 159: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@21 view_list_opt AS view_select  */
#line 2581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 160: /* $@22: %empty  */
#line 2585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 29651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 161: /* create: create_or_replace definer_opt TRIGGER_SYM $@22 trigger_tail  */
#line 2591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29659 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 162: /* $@23: %empty  */
#line 2595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 29669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 163: /* create: create_or_replace definer_opt EVENT_SYM $@23 event_tail  */
#line 2601 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 164: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 2606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 29687 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 165: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 29697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 166: /* $@24: %empty  */
#line 2618 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 29703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 167: /* create: create_or_replace $@24 server_def  */
#line 2620 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 29709 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 169: /* opt_sequence: %empty  */
#line 2625 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 29715 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 173: /* sequence_def: MINVALUE_SYM opt_equal longlong_num  */
#line 2636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29724 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 174: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 175: /* sequence_def: NOMINVALUE_SYM  */
#line 2647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 176: /* sequence_def: MAXVALUE_SYM opt_equal longlong_num  */
#line 2653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 177: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2661 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 178: /* sequence_def: NOMAXVALUE_SYM  */
#line 2667 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 179: /* sequence_def: START_SYM opt_with longlong_num  */
#line 2673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 29788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 180: /* sequence_def: INCREMENT_SYM opt_by longlong_num  */
#line 2681 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 29800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 181: /* sequence_def: CACHE_SYM opt_equal longlong_num  */
#line 2689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 29812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 182: /* sequence_def: NOCACHE_SYM  */
#line 2697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 29824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 183: /* sequence_def: CYCLE_SYM  */
#line 2705 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 29836 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 184: /* sequence_def: NOCYCLE_SYM  */
#line 2713 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 29848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 185: /* sequence_def: RESTART_SYM  */
#line 2721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 29864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 186: /* sequence_def: RESTART_SYM opt_with longlong_num  */
#line 2733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 29881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 187: /* force_lookahead: %empty  */
#line 2748 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 29887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 188: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 2748 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 29893 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 189: /* $@25: %empty  */
#line 2752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 29903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 190: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@25 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 2759 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 29909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 193: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 2769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 29918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 194: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 2774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 29927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 195: /* server_option: DATABASE TEXT_STRING_sys  */
#line 2779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 29936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 196: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 2784 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 29945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 197: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 2789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 29954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 198: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 2794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 29963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 199: /* server_option: PORT_SYM ulong_num  */
#line 2799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 29971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 200: /* $@26: %empty  */
#line 2806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 29992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 201: /* event_tail: remember_name opt_if_not_exists sp_name $@26 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 2827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 30004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 202: /* $@27: %empty  */
#line 2838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 30013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 204: /* ev_schedule_time: AT_SYM expr  */
#line 2845 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 30021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 205: /* opt_ev_status: %empty  */
#line 2851 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 206: /* opt_ev_status: ENABLE_SYM  */
#line 2853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 207: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 2859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 30047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 208: /* opt_ev_status: DISABLE_SYM  */
#line 2865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 209: /* ev_starts: %empty  */
#line 2874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 30068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 210: /* ev_starts: STARTS_SYM expr  */
#line 2881 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 30076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 212: /* ev_ends: ENDS_SYM expr  */
#line 2889 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 30084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 213: /* opt_ev_on_completion: %empty  */
#line 2895 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 215: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 2901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 30101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 216: /* opt_ev_comment: %empty  */
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 217: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 2912 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 30116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 218: /* $@28: %empty  */
#line 2919 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 30153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 219: /* ev_sql_stmt: $@28 sp_proc_stmt force_lookahead  */
#line 2952 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 30163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 220: /* clear_privileges: %empty  */
#line 2961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 30174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 221: /* opt_aggregate: %empty  */
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 30180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 222: /* opt_aggregate: AGGREGATE_SYM  */
#line 2971 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 30186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 223: /* sp_handler: FUNCTION_SYM  */
#line 2976 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_function; }
#line 30192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 224: /* sp_handler: PROCEDURE_SYM  */
#line 2977 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_procedure; }
#line 30198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 225: /* sp_handler: PACKAGE_ORACLE_SYM  */
#line 2978 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 30204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 226: /* sp_handler: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM  */
#line 2979 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_package_body; }
#line 30210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 227: /* sp_name: ident '.' ident  */
#line 2985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 228: /* sp_name: ident  */
#line 2990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30228 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 229: /* sp_a_chistics: %empty  */
#line 2997 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 230: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 2998 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 30240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 231: /* sp_c_chistics: %empty  */
#line 3002 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 232: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3003 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 30252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 233: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3009 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 30258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 234: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3011 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 30264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 235: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3013 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 30270 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 236: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3015 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 30276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 237: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3017 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 30282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 238: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3019 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 30288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 239: /* sp_chistic: sp_suid  */
#line 3021 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 30294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 240: /* sp_c_chistic: sp_chistic  */
#line 3026 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 30300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 241: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3027 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 30306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 242: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3031 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_SUID; }
#line 30312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 243: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3032 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 30318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 244: /* $@29: %empty  */
#line 3037 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30327 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 245: /* call: CALL_SYM ident $@29 opt_sp_cparam_list  */
#line 3042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 246: /* $@30: %empty  */
#line 3047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30345 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 247: /* call: CALL_SYM ident '.' ident $@30 opt_sp_cparam_list  */
#line 3052 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 248: /* $@31: %empty  */
#line 3057 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 249: /* call: CALL_SYM ident '.' ident '.' ident $@31 opt_sp_cparam_list  */
#line 3062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 254: /* sp_cparams: sp_cparams ',' expr  */
#line 3081 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 30380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 255: /* sp_cparams: expr  */
#line 3085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 30388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 256: /* sp_fdparam_list: %empty  */
#line 3093 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 30397 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 257: /* $@32: %empty  */
#line 3098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 30405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 258: /* sp_fdparam_list: $@32 sp_fdparams  */
#line 3102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 30413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 261: /* sp_param_name: ident  */
#line 3114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 266: /* sp_parameter_type: IN_SYM  */
#line 3132 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 30428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 267: /* sp_parameter_type: OUT_SYM  */
#line 3133 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 30434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 268: /* sp_parameter_type: INOUT_SYM  */
#line 3134 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 30440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 269: /* $@33: %empty  */
#line 3139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 30448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 270: /* sp_parenthesized_pdparam_list: '(' $@33 sp_pdparam_list ')'  */
#line 3144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 30456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 272: /* sp_proc_stmts: %empty  */
#line 3154 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 274: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3159 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 30468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 276: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30478 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 277: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3172 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 278: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3178 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 279: /* row_field_definition: row_field_name field_type  */
#line 3188 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 30507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 280: /* row_field_definition_list: row_field_definition  */
#line 3196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 30516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 281: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3201 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 30525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 282: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3208 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 30531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 283: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 30539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 284: /* $@34: %empty  */
#line 3221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 30548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 285: /* sp_decl_variable_list: sp_decl_idents_init_vars field_type $@34 sp_opt_default  */
#line 3226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-3].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 30560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 286: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 30570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 288: /* $@35: %empty  */
#line 3246 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 30579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 289: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@35 sp_hcond_list sp_proc_stmt  */
#line 3251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 30590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 292: /* sp_cursor_stmt_lex: %empty  */
#line 3266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 30601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 293: /* $@36: %empty  */
#line 3276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 30612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 294: /* sp_cursor_stmt: sp_cursor_stmt_lex $@36 select  */
#line 3283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 30625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 295: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3294 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 30631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 296: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3295 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 30637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 297: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3296 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 30643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 298: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3297 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 30649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 299: /* sp_hcond_list: sp_hcond_element  */
#line 3303 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 30655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 300: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3305 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 30661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 301: /* sp_hcond_element: sp_hcond  */
#line 3310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 30677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 302: /* sp_cond: ulong_num  */
#line 3325 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 304: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3337 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 305: /* opt_value: %empty  */
#line 3356 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 30716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 306: /* opt_value: VALUE_SYM  */
#line 3357 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 30722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 307: /* sp_hcond: sp_cond  */
#line 3362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 30730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 308: /* sp_hcond: ident  */
#line 3366 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 30740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 309: /* sp_hcond: SQLWARNING_SYM  */
#line 3372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 310: /* sp_hcond: not FOUND_SYM  */
#line 3378 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 311: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 312: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3390 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30780 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 313: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 30789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 314: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 30798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 315: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 30807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 316: /* signal_value: ident  */
#line 3421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spcondvalue)= Lex->stmt_signal_value((yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 317: /* signal_value: sqlstate  */
#line 3426 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 30822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 318: /* opt_signal_value: %empty  */
#line 3431 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= NULL; }
#line 30828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 319: /* opt_signal_value: signal_value  */
#line 3433 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 30834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 320: /* opt_set_signal_information: %empty  */
#line 3438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 30842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 322: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 30854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 323: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 30868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 324: /* signal_allowed_expr: literal  */
#line 3471 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 30874 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 325: /* signal_allowed_expr: variable  */
#line 3473 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 30896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 326: /* signal_allowed_expr: simple_ident  */
#line 3491 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 30902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 327: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3497 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 30908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 328: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3499 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 30914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 329: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3501 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 30920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 330: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3503 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 30926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 331: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3505 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 30932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 332: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3507 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 30938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 333: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3509 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 30944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 334: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3511 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 30950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 335: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3513 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 30956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 336: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3515 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 30962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 337: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3517 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 30968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 338: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3519 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 30974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 339: /* signal_condition_information_item_name: ROW_NUMBER_SYM  */
#line 3521 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_ROW_NUMBER; }
#line 30980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 340: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3526 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 30989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 341: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM diagnostics_information  */
#line 3534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 31005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 342: /* which_area: %empty  */
#line 3549 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 343: /* which_area: CURRENT_SYM  */
#line 3551 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 344: /* diagnostics_information: statement_information  */
#line 3556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 345: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 3562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 346: /* statement_information: statement_information_item  */
#line 3571 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 31048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 347: /* statement_information: statement_information ',' statement_information_item  */
#line 3578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 31058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 348: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 3587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 31068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 349: /* simple_target_specification: ident_cli  */
#line 3596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 31077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 350: /* simple_target_specification: '@' ident_or_text  */
#line 3601 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 351: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 3615 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 31098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 352: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 3617 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 31104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 353: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 3619 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 31110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 354: /* condition_number: signal_allowed_expr  */
#line 3628 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 355: /* condition_information: condition_information_item  */
#line 3633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 31127 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 356: /* condition_information: condition_information ',' condition_information_item  */
#line 3640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 31137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 357: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 3649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 31147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 358: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3658 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 31153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 359: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3660 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 31159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 360: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3662 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 31165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 361: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3664 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 31171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 362: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3666 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 31177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 363: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 3668 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 31183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 364: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 31189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 365: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 3672 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 31195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 366: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 3674 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 31201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 367: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 3676 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 31207 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 368: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3678 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 31213 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 369: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3680 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 31219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 370: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 3682 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 31225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 371: /* condition_information_item_name: ROW_NUMBER_SYM  */
#line 3684 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::ROW_NUMBER; }
#line 31231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 373: /* sp_decl_ident: keyword_sp_decl  */
#line 3690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 31240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 374: /* sp_decl_idents: sp_decl_ident  */
#line 3698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 31256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 375: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 3710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 31272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 376: /* $@37: %empty  */
#line 3725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 31282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 377: /* sp_proc_stmt_if: IF_SYM $@37 sp_if END IF_SYM  */
#line 3731 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 31288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 378: /* $@38: %empty  */
#line 3735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only a new LEX for the
              statement here as if it is start of parsing a new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 31305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 379: /* sp_proc_stmt_statement: $@38 sp_statement  */
#line 3748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 382: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM expr_lex  */
#line 3763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= (yyvsp[0].expr_lex)->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, (yyvsp[0].expr_lex)->spcont,
                                                          (yyvsp[0].expr_lex)->get_item(), (yyvsp[0].expr_lex))))
              MYSQL_YYABORT;
          }
#line 31326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 383: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 3770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 31338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 384: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 3781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 31347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 385: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 3786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 31356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 386: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM expr_lex  */
#line 3791 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, (yyvsp[0].expr_lex)->get_item())))
              MYSQL_YYABORT;
          }
#line 31365 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 387: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM expr_lex  */
#line 3796 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].expr_lex)->get_item())))
              MYSQL_YYABORT;
          }
#line 31374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 388: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 3804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd)))
              MYSQL_YYABORT;
          }
#line 31383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 389: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 3809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 390: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM expr_lex  */
#line 3814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd)))
              MYSQL_YYABORT;
          }
#line 31401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 391: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM expr_lex  */
#line 3819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd, &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 392: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 3828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 393: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 3836 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 394: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 3844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 395: /* @39: %empty  */
#line 3852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.expr_lex)= new (thd->mem_root)
                           sp_expr_lex(thd, thd->lex))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd, (yyval.expr_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 31451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 396: /* expr_lex: @39 expr  */
#line 3862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_lex)= (yyvsp[-1].expr_lex);
            (yyval.expr_lex)->sp_lex_in_use= true;
            (yyval.expr_lex)->set_item((yyvsp[0].item));
            Lex->pop_select(); //min select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if ((yyval.expr_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 397: /* assignment_source_lex: %empty  */
#line 3876 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 31477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 398: /* $@40: %empty  */
#line 3886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 31488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 399: /* assignment_source_expr: assignment_source_lex $@40 expr  */
#line 3893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            Lex->pop_select(); //min select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 400: /* $@41: %empty  */
#line 3907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 31514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 401: /* for_loop_bound_expr: assignment_source_lex $@41 expr  */
#line 3914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 31529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 402: /* cursor_actual_parameters: assignment_source_expr  */
#line 3928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 31539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 403: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 3934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 31548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 404: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 3941 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 31554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 405: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 3942 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 31560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 409: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 3953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 31569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 410: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 3961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 411: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 3966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 412: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 3971 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 413: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 3978 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 31602 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 414: /* sp_proc_stmt_fetch: FETCH_SYM GROUP_SYM NEXT_SYM ROW_SYM  */
#line 3980 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 31611 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 415: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 3988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 31630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 416: /* sp_fetch_list: ident  */
#line 4006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 31650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 417: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 31670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 418: /* $@42: %empty  */
#line 4041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_if_expr(thd)))
              MYSQL_YYABORT;
          }
#line 31679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 419: /* $@43: %empty  */
#line 4046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-3].expr_lex)->sp_if_after_statements(thd)))
              MYSQL_YYABORT;
          }
#line 31688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 420: /* sp_if: expr_lex THEN_SYM $@42 sp_if_then_statements $@43 sp_elseifs  */
#line 4051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 31698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 425: /* $@44: %empty  */
#line 4067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 31752 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 426: /* case_stmt_specification: CASE_SYM $@44 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 31770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 427: /* $@45: %empty  */
#line 4137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_expr()))
              MYSQL_YYABORT;
          }
#line 31779 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 428: /* case_stmt_body: expr_lex $@45 simple_when_clause_list  */
#line 4142 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 31785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 429: /* case_stmt_body: searched_when_clause_list  */
#line 4144 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 31791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 434: /* $@46: %empty  */
#line 4159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Simple case: <caseval> = <whenval> */
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(true)))
              MYSQL_YYABORT;
          }
#line 31801 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 435: /* simple_when_clause: WHEN_SYM expr_lex $@46 THEN_SYM sp_case_then_statements  */
#line 4166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 31810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 436: /* $@47: %empty  */
#line 4174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(false)))
              MYSQL_YYABORT;
          }
#line 31819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 437: /* searched_when_clause: WHEN_SYM expr_lex $@47 THEN_SYM sp_case_then_statements  */
#line 4180 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 31828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 438: /* else_clause_opt: %empty  */
#line 4188 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 31843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 440: /* sp_opt_label: %empty  */
#line 4202 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 31849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 441: /* sp_opt_label: label_ident  */
#line 4203 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 31855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 442: /* opt_sp_for_loop_direction: %empty  */
#line 4208 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 31861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 443: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4209 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= -1; }
#line 31867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 444: /* sp_for_loop_index_and_bounds: ident_for_loop_index sp_for_loop_bounds  */
#line 4214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 31876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 445: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 31884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 446: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4227 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 31895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 447: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 31905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 448: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 31920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 449: /* repeat_body: sp_proc_stmts1 UNTIL_SYM expr_lex END REPEAT_SYM  */
#line 4257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].expr_lex)->sp_repeat_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 31929 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 450: /* pop_sp_loop_label: sp_opt_label  */
#line 4265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 31938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 451: /* $@48: %empty  */
#line 4273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 31947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 452: /* sp_labeled_control: sp_control_label LOOP_SYM $@48 loop_body pop_sp_loop_label  */
#line 4278 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 31953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 453: /* $@49: %empty  */
#line 4280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 31962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 454: /* sp_labeled_control: sp_control_label WHILE_SYM $@49 while_body pop_sp_loop_label  */
#line 4285 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 31968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 455: /* $@50: %empty  */
#line 4287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 31977 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 456: /* $@51: %empty  */
#line 4292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 31988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 457: /* $@52: %empty  */
#line 4299 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 31997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 458: /* sp_labeled_control: sp_control_label FOR_SYM $@50 sp_for_loop_index_and_bounds $@51 for_loop_statements $@52 pop_sp_loop_label  */
#line 4304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-4].for_loop))))
              MYSQL_YYABORT;
          }
#line 32006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 459: /* $@53: %empty  */
#line 4309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32015 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 460: /* sp_labeled_control: sp_control_label REPEAT_SYM $@53 repeat_body pop_sp_loop_label  */
#line 4314 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 461: /* $@54: %empty  */
#line 4319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 462: /* sp_unlabeled_control: LOOP_SYM $@54 loop_body  */
#line 4324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 463: /* $@55: %empty  */
#line 4328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 464: /* sp_unlabeled_control: WHILE_SYM $@55 while_body  */
#line 4333 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 465: /* $@56: %empty  */
#line 4337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 32066 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 466: /* $@57: %empty  */
#line 4344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 32077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 467: /* sp_unlabeled_control: FOR_SYM $@56 sp_for_loop_index_and_bounds $@57 for_loop_statements  */
#line 4351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 32089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 468: /* $@58: %empty  */
#line 4359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 469: /* sp_unlabeled_control: REPEAT_SYM $@58 repeat_body  */
#line 4364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 470: /* trg_action_time: BEFORE_SYM  */
#line 4371 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 32112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 471: /* trg_action_time: AFTER_SYM  */
#line 4373 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 32118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 472: /* trg_event: INSERT  */
#line 4378 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 32124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 473: /* trg_event: UPDATE_SYM  */
#line 4380 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 32130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 474: /* trg_event: DELETE_SYM  */
#line 4382 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 32136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 475: /* $@59: %empty  */
#line 4387 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.option_list= NULL; }
#line 32142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 476: /* create_body: create_field_list_parens $@59 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4388 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 32148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 477: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4389 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 32154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 478: /* create_body: create_like  */
#line 4391 "/home/buildbot/git/sql/sql_yacc.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 32169 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 479: /* create_like: LIKE table_ident  */
#line 4404 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 32175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 480: /* create_like: LEFT_PAREN_LIKE LIKE table_ident ')'  */
#line 4405 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 32181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 481: /* opt_create_select: %empty  */
#line 4409 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 482: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 4412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.add(DDL_options_st::OPT_CREATE_SELECT);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 483: /* create_select_query_expression: query_expression  */
#line 4421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 32206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 484: /* create_select_query_expression: LEFT_PAREN_WITH with_clause query_expression_no_with_clause ')'  */
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 32218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 485: /* opt_create_partitioning: opt_partitioning  */
#line 4437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 32232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 486: /* opt_partitioning: %empty  */
#line 4473 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 488: /* $@60: %empty  */
#line 4479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 32253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 490: /* have_partitioning: %empty  */
#line 4494 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 32269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 491: /* $@61: %empty  */
#line 4509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 32287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 492: /* partition_entry: PARTITION_SYM $@61 partition  */
#line 4523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 32295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 493: /* $@62: %empty  */
#line 4530 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->safe_to_cache_query= 1; }
#line 32301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 495: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 4536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 32312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 496: /* $@63: %empty  */
#line 4543 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 32318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 497: /* part_type_def: opt_linear HASH_SYM $@63 part_func  */
#line 4544 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 32324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 498: /* part_type_def: RANGE_SYM part_func  */
#line 4546 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 32330 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 499: /* part_type_def: RANGE_SYM part_column_list  */
#line 4548 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 32336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 500: /* $@64: %empty  */
#line 4550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 32344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 501: /* part_type_def: LIST_SYM $@64 part_func  */
#line 4554 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 32353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 502: /* part_type_def: LIST_SYM part_column_list  */
#line 4559 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 32359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 503: /* $@65: %empty  */
#line 4561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 32368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 505: /* opt_linear: %empty  */
#line 4569 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 506: /* opt_linear: LINEAR_SYM  */
#line 4571 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 32380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 507: /* opt_key_algo: %empty  */
#line 4576 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 32386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 508: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 4578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 32404 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 509: /* part_field_list: %empty  */
#line 4594 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 510: /* part_field_list: part_field_item_list  */
#line 4595 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 32416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 511: /* part_field_item_list: part_field_item  */
#line 4599 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 512: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 4600 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 32428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 513: /* part_field_item: ident  */
#line 4605 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 32443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 514: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 4619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 32453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 515: /* part_func: '(' part_func_expr ')'  */
#line 4629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 32465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 516: /* sub_part_func: '(' part_func_expr ')'  */
#line 4640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 32474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 517: /* opt_num_parts: %empty  */
#line 4648 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 518: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 4650 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 32494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 519: /* opt_sub_part: %empty  */
#line 4662 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 520: /* $@66: %empty  */
#line 4664 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 32506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 521: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@66 opt_num_subparts  */
#line 4665 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 32512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 522: /* $@67: %empty  */
#line 4668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 32522 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 523: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@67 opt_num_subparts  */
#line 4673 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 32528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 524: /* sub_part_field_list: sub_part_field_item  */
#line 4677 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 32534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 525: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 4678 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 32540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 526: /* sub_part_field_item: ident  */
#line 4683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 32555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 527: /* part_func_expr: bit_expr  */
#line 4697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 32568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 528: /* opt_num_subparts: %empty  */
#line 4708 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 529: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 4710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 32587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 530: /* part_defs: %empty  */
#line 4722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 32601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 531: /* part_defs: '(' part_def_list ')'  */
#line 4732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 32624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 532: /* part_def_list: part_definition  */
#line 4753 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 533: /* part_def_list: part_def_list ',' part_definition  */
#line 4754 "/home/buildbot/git/sql/sql_yacc.yy"
                                            {}
#line 32636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 536: /* $@68: %empty  */
#line 4764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 32656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 537: /* part_definition: opt_partition $@68 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 4783 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 32662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 538: /* part_name: ident  */
#line 4788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 32674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 539: /* opt_part_values: %empty  */
#line 4799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 32694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 540: /* $@69: %empty  */
#line 4815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 32711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 541: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@69 part_func_max  */
#line 4827 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 32717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 542: /* $@70: %empty  */
#line 4829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 32734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 543: /* opt_part_values: VALUES_IN_SYM $@70 part_values_in  */
#line 4841 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 32740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 544: /* opt_part_values: CURRENT_SYM  */
#line 4843 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
#endif
          }
#line 32751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 545: /* opt_part_values: HISTORY_SYM  */
#line 4850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
#endif
          }
#line 32762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 546: /* opt_part_values: DEFAULT  */
#line 4857 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 32783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 547: /* part_func_max: MAXVALUE_SYM  */
#line 4877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 32805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 548: /* part_func_max: part_value_item  */
#line 4894 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 549: /* part_values_in: part_value_item  */
#line 4899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 32842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 550: /* part_values_in: '(' part_value_list ')'  */
#line 4926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 32855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 551: /* part_value_list: part_value_item  */
#line 4937 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 552: /* part_value_list: part_value_list ',' part_value_item  */
#line 4938 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 32867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 553: /* $@71: %empty  */
#line 4943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 32881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 554: /* $@72: %empty  */
#line 4952 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 32887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 555: /* part_value_item: '(' $@71 part_value_item_list $@72 ')'  */
#line 4954 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 32912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 556: /* part_value_item_list: part_value_expr_item  */
#line 4977 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 32918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 557: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 4978 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        {}
#line 32924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 558: /* part_value_expr_item: MAXVALUE_SYM  */
#line 4983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 32939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 559: /* part_value_expr_item: bit_expr  */
#line 4994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 32957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 560: /* opt_sub_partition: %empty  */
#line 5012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 32975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 561: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 5026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 33002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 562: /* sub_part_list: sub_part_definition  */
#line 5051 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 33008 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 563: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 5052 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 33014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 564: /* $@73: %empty  */
#line 5057 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 33051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 565: /* sub_part_definition: SUBPARTITION_SYM $@73 sub_name opt_subpart_options  */
#line 5089 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 33057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 566: /* sub_name: ident_or_text  */
#line 5094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 33067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 567: /* opt_part_options: %empty  */
#line 5102 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 568: /* opt_part_options: part_option_list  */
#line 5103 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 569: /* part_option_list: part_option_list part_option  */
#line 5107 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 33085 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 570: /* part_option_list: part_option  */
#line 5108 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 571: /* part_option: server_part_option  */
#line 5112 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 33097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 572: /* part_option: engine_defined_option  */
#line 5114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->part_info->curr_part_elem->option_list,
                     &Lex->option_list_last);
          }
#line 33106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 573: /* opt_subpart_options: %empty  */
#line 5121 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 574: /* opt_subpart_options: subpart_option_list  */
#line 5122 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 33118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 575: /* subpart_option_list: subpart_option_list server_part_option  */
#line 5126 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 33124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 576: /* subpart_option_list: server_part_option  */
#line 5127 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 577: /* server_part_option: TABLESPACE opt_equal ident_or_text  */
#line 5132 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatibility with MySQL */ }
#line 33136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 578: /* server_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 33146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 579: /* server_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 33156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 580: /* server_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5146 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 33162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 581: /* server_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 5148 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 33168 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 582: /* server_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 5150 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 33174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 583: /* server_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5152 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 33180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 584: /* server_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5154 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 33186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 585: /* server_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5156 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 33192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 586: /* opt_versioning_rotation: %empty  */
#line 5160 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 587: /* $@74: %empty  */
#line 5161 "/home/buildbot/git/sql/sql_yacc.yy"
         { Lex->clause_that_disallows_subselect= "INTERVAL"; }
#line 33204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 588: /* opt_versioning_rotation: $@74 INTERVAL_SYM expr interval opt_versioning_interval_start opt_vers_auto_part  */
#line 5163 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-3].item), (yyvsp[-2].interval), (yyvsp[-1].item), (yyvsp[0].num),
                                                     table_name)))
             MYSQL_YYABORT;
         }
#line 33216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 589: /* opt_versioning_rotation: LIMIT ulonglong_num opt_vers_auto_part  */
#line 5171 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_limit((yyvsp[-1].ulonglong_number), (yyvsp[0].num), table_name)))
             MYSQL_YYABORT;
         }
#line 33227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 590: /* opt_versioning_interval_start: %empty  */
#line 5182 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= NULL;
         }
#line 33235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 591: /* opt_versioning_interval_start: STARTS_SYM literal  */
#line 5186 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= (yyvsp[0].item);
         }
#line 33243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 592: /* opt_vers_auto_part: %empty  */
#line 5193 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 0;
         }
#line 33251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 593: /* opt_vers_auto_part: AUTO_SYM  */
#line 5197 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 1;
         }
#line 33259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 594: /* opt_as: %empty  */
#line 5206 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 595: /* opt_as: AS  */
#line 5207 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 33271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 596: /* opt_create_database_options: %empty  */
#line 5211 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 597: /* opt_create_database_options: create_database_options  */
#line 5212 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 33283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 598: /* create_database_options: create_database_option  */
#line 5216 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 33289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 599: /* create_database_options: create_database_options create_database_option  */
#line 5217 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 33295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 600: /* create_database_option: default_collation  */
#line 5221 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 601: /* create_database_option: default_charset  */
#line 5222 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 602: /* create_database_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5224 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 33316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 603: /* opt_if_not_exists_table_element: %empty  */
#line 5232 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 33324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 604: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 5236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 33332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 605: /* opt_if_not_exists: %empty  */
#line 5243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 33340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 606: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 5247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 33348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 607: /* create_or_replace: CREATE  */
#line 5254 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 33356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 608: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 5258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 33364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 616: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 5281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 33383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 617: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 5296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 33392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 618: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 5301 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 33401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 619: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 5306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 33410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 620: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 5311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 33419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 621: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 33428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 622: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 5321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 33437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 623: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 5326 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 33456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 624: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 5341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 33466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 625: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 5347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 33485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 626: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 5362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 33494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 627: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 5367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 33513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 628: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 5382 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 33523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 629: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 5388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 33545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 630: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 5406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 33554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 631: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 5411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 33563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 632: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 5416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 33572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 633: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 5421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 33581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 634: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 5426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 33590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 635: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 5431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 33599 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 636: /* $@75: %empty  */
#line 5436 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 33607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 637: /* create_table_option: UNION_SYM opt_equal $@75 '(' opt_table_list ')'  */
#line 5440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 33633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 640: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 5464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 33642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 641: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 33651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 642: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5474 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 33660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 643: /* create_table_option: TABLESPACE ident  */
#line 5479 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatiblity with MySQL */ }
#line 33666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 644: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 5481 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 33672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 645: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 5483 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 33678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 646: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 33688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 647: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 5491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 33697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 648: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 5496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 33706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 649: /* create_table_option: engine_defined_option  */
#line 5501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->create_info.option_list, &Lex->option_list_last);
          }
#line 33714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 650: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 5505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
          }
#line 33723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 652: /* engine_defined_option: IDENT_sys equal TEXT_STRING_sys  */
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 33734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 653: /* engine_defined_option: IDENT_sys equal ident  */
#line 5521 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 33745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 654: /* engine_defined_option: IDENT_sys equal real_ulonglong_num  */
#line 5528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), thd->mem_root);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 33754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 655: /* engine_defined_option: IDENT_sys equal DEFAULT  */
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys));
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 33763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 658: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 5546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (!DBUG_IF("sysvers_force"))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 33783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 659: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 5565 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 33792 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 660: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 5573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_specification_st *cinfo= &Lex->create_info;
            if (unlikely(cinfo->add_table_option_default_collation((yyvsp[0].Lex_extended_collation))))
              MYSQL_YYABORT;
          }
#line 33802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 661: /* storage_engines: ident_or_text  */
#line 5582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 33813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 662: /* known_storage_engines: ident_or_text  */
#line 5592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 663: /* row_types: DEFAULT  */
#line 5602 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 33831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 664: /* row_types: FIXED_SYM  */
#line 5603 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 33837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 665: /* row_types: DYNAMIC_SYM  */
#line 5604 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 33843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 666: /* row_types: COMPRESSED_SYM  */
#line 5605 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 33849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 667: /* row_types: REDUNDANT_SYM  */
#line 5606 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 33855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 668: /* row_types: COMPACT_SYM  */
#line 5607 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 33861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 669: /* row_types: PAGE_SYM  */
#line 5608 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 33867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 670: /* merge_insert_types: NO_SYM  */
#line 5612 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 33873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 671: /* merge_insert_types: FIRST_SYM  */
#line 5613 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 33879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 672: /* merge_insert_types: LAST_SYM  */
#line 5614 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 33885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 673: /* udf_type: STRING_SYM  */
#line 5618 "/home/buildbot/git/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 33891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 674: /* udf_type: REAL  */
#line 5619 "/home/buildbot/git/sql/sql_yacc.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 33897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 675: /* udf_type: DECIMAL_SYM  */
#line 5620 "/home/buildbot/git/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 33903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 676: /* udf_type: INT_SYM  */
#line 5621 "/home/buildbot/git/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 33909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 677: /* create_field_list: field_list  */
#line 5627 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 33917 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 678: /* create_field_list_parens: LEFT_PAREN_ALT field_list ')'  */
#line 5634 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 33925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 681: /* field_list_item: column_def  */
#line 5645 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 33931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 685: /* field_list_item: PERIOD_SYM period_for_application_time  */
#line 5649 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { }
#line 33937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 686: /* column_def: field_spec  */
#line 5654 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 33943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 687: /* column_def: field_spec opt_constraint references  */
#line 5656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_column_foreign_key(&((yyvsp[-2].create_field)->field_name), &(yyvsp[-1].lex_str),
                                                     (yyvsp[0].table), DDL_options())))
              MYSQL_YYABORT;
            (yyval.create_field)= (yyvsp[-2].create_field);
          }
#line 33954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 688: /* $@76: %empty  */
#line 5666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 33964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 689: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@76 '(' key_list ')' normal_key_options  */
#line 5671 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 33970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 690: /* $@77: %empty  */
#line 5673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 33980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 691: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@77 '(' key_list ')' normal_key_options  */
#line 5678 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 33986 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 692: /* $@78: %empty  */
#line 5680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 33996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 693: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@78 '(' key_list ')' fulltext_key_options  */
#line 5685 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { }
#line 34002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 694: /* $@79: %empty  */
#line 5687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 695: /* key_def: spatial opt_key_or_index opt_if_not_exists opt_ident $@79 '(' key_list ')' spatial_key_options  */
#line 5692 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 34018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 696: /* $@80: %empty  */
#line 5696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 697: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@80 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 5701 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 34034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 698: /* $@81: %empty  */
#line 5704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 699: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@81 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 5709 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 34050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 700: /* $@82: %empty  */
#line 5711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 34064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 701: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@82 '(' key_list ')' references  */
#line 5721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_table_foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                                    (yyvsp[-9].lex_str).str ? &(yyvsp[-9].lex_str) : &(yyvsp[-5].lex_str), (yyvsp[0].table), (yyvsp[-6].object_ddl_options))))
               MYSQL_YYABORT;
          }
#line 34074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 702: /* constraint_def: opt_constraint check_constraint  */
#line 5730 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 34082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 703: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 5738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 34091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 704: /* period_for_application_time: FOR_SYM ident '(' ident ',' ident ')'  */
#line 5746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 34100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 705: /* opt_check_constraint: %empty  */
#line 5753 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 34106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 706: /* opt_check_constraint: check_constraint  */
#line 5754 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 34112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 707: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 5759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 708: /* opt_constraint_no_id: %empty  */
#line 5768 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 709: /* opt_constraint_no_id: CONSTRAINT  */
#line 5769 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 710: /* opt_constraint: %empty  */
#line 5773 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 34141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 711: /* opt_constraint: constraint  */
#line 5774 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 712: /* constraint: CONSTRAINT opt_ident  */
#line 5778 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 713: /* @83: %empty  */
#line 5783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str));
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 34173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 714: /* field_spec: field_ident @83 field_type_or_serial opt_check_constraint  */
#line 5799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 34196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 715: /* $@84: %empty  */
#line 5821 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                             COLUMN_DEFINITION_TABLE_FIELD);
          }
#line 34205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 716: /* field_type_or_serial: qualified_field_type $@84 field_def  */
#line 5826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            auto tmp= (yyvsp[-2].Lex_field_type).charset_collation_attrs();
            if (tmp.merge_column_charset_clause_and_collate_clause((yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
            Lex->last_field->set_charset_collation_attrs(tmp);
          }
#line 34216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 717: /* $@85: %empty  */
#line 5833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_handler(&type_handler_ulonglong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 719: /* opt_serial_attribute: %empty  */
#line 5843 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 720: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 5844 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 34239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 721: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 5848 "/home/buildbot/git/sql/sql_yacc.yy"
                                                     {}
#line 34245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 723: /* opt_asrow_attribute: %empty  */
#line 5853 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 724: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 5854 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 34257 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 725: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 5858 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 34263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 727: /* field_def: %empty  */
#line 5863 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 34269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 729: /* field_def: attribute_list compressed_deprecated_column_attribute  */
#line 5865 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs); }
#line 34275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 730: /* field_def: attribute_list compressed_deprecated_column_attribute attribute_list  */
#line 5867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-2].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause((yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
          }
#line 34284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 731: /* $@86: %empty  */
#line 5872 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
         }
#line 34292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 732: /* field_def: opt_generated_always AS virtual_column_func $@86 vcol_opt_specifier vcol_opt_attribute  */
#line 5876 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 733: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 5880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 734: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 5886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 735: /* opt_generated_always: %empty  */
#line 5894 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 736: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 5895 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 34332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 737: /* vcol_opt_specifier: %empty  */
#line 5900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 34340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 738: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 5904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 34348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 739: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 5908 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 34356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 740: /* vcol_opt_specifier: STORED_SYM  */
#line 5912 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 34364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 741: /* vcol_opt_attribute: %empty  */
#line 5918 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 742: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 5919 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 34376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 743: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 5923 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 {}
#line 34382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 745: /* vcol_attribute: UNIQUE_SYM  */
#line 5929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 746: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 5935 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 747: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 5940 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 34408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 748: /* vcol_attribute: INVISIBLE_SYM  */
#line 5942 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 34416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 749: /* $@87: %empty  */
#line 5949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 34431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 750: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@87 expr  */
#line 5960 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 34443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 752: /* parenthesized_expr: expr ',' expr_list  */
#line 5972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 34454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 753: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 5982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 754: /* virtual_column_func: subquery  */
#line 5990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 758: /* column_default_expr: expr_or_literal  */
#line 6006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 34489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 759: /* field_type: field_type_all  */
#line 6013 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
        }
#line 34497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 760: /* qualified_field_type: field_type_all  */
#line 6020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 34505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 761: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 6024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 34514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 767: /* field_type_all: IDENT_sys float_options srid_option  */
#line 6037 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].ident_sys), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 34523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 768: /* field_type_all: reserved_keyword_udt float_options srid_option  */
#line 6042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].kwd), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 34532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 769: /* field_type_all: non_reserved_keyword_udt float_options srid_option  */
#line 6047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].kwd), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 34541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 770: /* field_type_numeric: int_type opt_field_length last_field_options  */
#line 6055 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length_flags((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec), (uint32) (yyvsp[0].ulong_num));
          }
#line 34549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 771: /* field_type_numeric: real_type opt_precision last_field_options  */
#line 6058 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 34555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 772: /* field_type_numeric: FLOAT_SYM float_options last_field_options  */
#line 6060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length() && !(yyvsp[-1].Lex_length_and_dec).has_explicit_dec())
            {
              if (unlikely((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if ((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 34573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 773: /* field_type_numeric: BIT_SYM opt_field_length  */
#line 6074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].Lex_length_and_dec));
          }
#line 34581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 774: /* field_type_numeric: BOOL_SYM  */
#line 6078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 34589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 775: /* field_type_numeric: BOOLEAN_SYM  */
#line 6082 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 34597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 776: /* field_type_numeric: DECIMAL_SYM float_options last_field_options  */
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 777: /* field_type_numeric: NUMBER_ORACLE_SYM float_options last_field_options  */
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 34614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 778: /* field_type_numeric: NUMERIC_SYM float_options last_field_options  */
#line 6095 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34620 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 779: /* field_type_numeric: FIXED_SYM float_options last_field_options  */
#line 6097 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 780: /* opt_binary_and_compression: %empty  */
#line 6102 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 34632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 781: /* opt_binary_and_compression: binary  */
#line 6103 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 34638 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 782: /* opt_binary_and_compression: binary compressed_deprecated_data_type_attribute  */
#line 6104 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs); }
#line 34644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 783: /* opt_binary_and_compression: compressed opt_binary  */
#line 6105 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 34650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 784: /* field_type_string: char opt_field_length opt_binary  */
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 785: /* field_type_string: nchar opt_field_length opt_bin_mod  */
#line 6114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 34667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 786: /* field_type_string: BINARY opt_field_length  */
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].Lex_length_and_dec), &my_charset_bin);
          }
#line 34675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 787: /* field_type_string: varchar opt_field_length opt_binary_and_compression  */
#line 6123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 788: /* field_type_string: VARCHAR2_ORACLE_SYM opt_field_length opt_binary_and_compression  */
#line 6127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34691 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 789: /* field_type_string: nvarchar opt_field_length opt_compressed opt_bin_mod  */
#line 6131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 34700 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 790: /* field_type_string: VARBINARY opt_field_length opt_compressed  */
#line 6136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 791: /* field_type_string: RAW_ORACLE_SYM opt_field_length opt_compressed  */
#line 6140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 792: /* field_type_temporal: YEAR_SYM opt_field_length last_field_options  */
#line 6147 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
            {
              if ((yyvsp[-1].Lex_length_and_dec).length() != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%u)", (uint) (yyvsp[-1].Lex_length_and_dec).length());
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].Lex_length_and_dec));
          }
#line 34736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 793: /* field_type_temporal: DATE_SYM  */
#line 6162 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 34742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 794: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 6164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 34753 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 795: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 6171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 34764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 796: /* field_type_temporal: DATETIME opt_field_length  */
#line 6178 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].Lex_length_and_dec));
          }
#line 34772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 797: /* field_type_lob: TINYBLOB opt_compressed  */
#line 6186 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny_blob, &my_charset_bin);
          }
#line 34780 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 798: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 6190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 799: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 6194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34796 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 800: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 6198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 34804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 801: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 6202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 34812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 802: /* field_type_lob: LONGBLOB opt_compressed  */
#line 6206 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 34820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 803: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 6210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 34828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 804: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 6214 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 805: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 6216 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 806: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 6218 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 807: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 6220 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 808: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 6222 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34858 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 809: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 6224 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 810: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 6226 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 811: /* field_type_lob: JSON_SYM opt_compressed  */
#line 6228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob_json, &my_charset_utf8mb4_bin);
          }
#line 34878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 812: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 6235 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 813: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 6237 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_set, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 34890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 814: /* char: CHAR_SYM  */
#line 6241 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 34896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 815: /* nchar: NCHAR_SYM  */
#line 6245 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 34902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 816: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 6246 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 34908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 817: /* varchar: char VARYING  */
#line 6250 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 818: /* varchar: VARCHAR  */
#line 6251 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 34920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 819: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 6255 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 34926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 820: /* nvarchar: NVARCHAR_SYM  */
#line 6256 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 821: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 6257 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 34938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 822: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 6258 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 34944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 823: /* nvarchar: NCHAR_SYM VARYING  */
#line 6259 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 34950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 824: /* int_type: INT_SYM  */
#line 6263 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slong; }
#line 34956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 825: /* int_type: TINYINT  */
#line 6264 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_stiny; }
#line 34962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 826: /* int_type: SMALLINT  */
#line 6265 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sshort; }
#line 34968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 827: /* int_type: MEDIUMINT  */
#line 6266 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sint24; }
#line 34974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 828: /* int_type: BIGINT  */
#line 6267 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slonglong; }
#line 34980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 829: /* real_type: REAL  */
#line 6272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 34990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 830: /* real_type: DOUBLE_SYM  */
#line 6277 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 34996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 831: /* real_type: DOUBLE_SYM PRECISION  */
#line 6278 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 35002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 832: /* srid_option: %empty  */
#line 6283 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->srid= 0; }
#line 35008 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 833: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 6286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 35016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 834: /* float_options: %empty  */
#line 6292 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset();  }
#line 35022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 837: /* precision: '(' NUM ',' NUM ')'  */
#line 6298 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 35028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 838: /* field_options: %empty  */
#line 6302 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 35034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 839: /* field_options: SIGNED_SYM  */
#line 6303 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 35040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 840: /* field_options: UNSIGNED  */
#line 6304 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG; }
#line 35046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 841: /* field_options: ZEROFILL  */
#line 6305 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 842: /* field_options: UNSIGNED ZEROFILL  */
#line 6306 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 843: /* field_options: ZEROFILL UNSIGNED  */
#line 6307 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 844: /* last_field_options: field_options  */
#line 6311 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->last_field->flags|= ((yyval.ulong_num)= (yyvsp[0].ulong_num)); }
#line 35070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 845: /* field_length_str: '(' LONG_NUM ')'  */
#line 6315 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 846: /* field_length_str: '(' ULONGLONG_NUM ')'  */
#line 6316 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 847: /* field_length_str: '(' DECIMAL_NUM ')'  */
#line 6317 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 848: /* field_length_str: '(' NUM ')'  */
#line 6318 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 849: /* field_length: field_length_str  */
#line 6321 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 35100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 850: /* field_scale: field_length_str  */
#line 6325 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set(NULL, (yyvsp[0].const_simple_string)); }
#line 35106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 851: /* opt_field_length: %empty  */
#line 6330 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset(); /* use default length */ }
#line 35112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 853: /* opt_field_scale: %empty  */
#line 6335 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.Lex_length_and_dec).reset(); }
#line 35118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 855: /* opt_precision: %empty  */
#line 6340 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec).reset(); }
#line 35124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 856: /* opt_precision: precision  */
#line 6341 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 35130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 857: /* attribute_list: attribute_list attribute  */
#line 6347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause((yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
               MYSQL_YYABORT;
          }
#line 35139 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 859: /* attribute: NULL_SYM  */
#line 6356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags&= ~NOT_NULL_FLAG;
            Lex->last_field->explicitly_nullable= true;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 860: /* attribute: DEFAULT column_default_expr  */
#line 6362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->default_value= (yyvsp[0].virtual_column);
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35158 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 861: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 6367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 862: /* attribute: AUTO_INC  */
#line 6374 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 863: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 6376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 864: /* attribute: COLLATE_SYM collation_name  */
#line 6383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 865: /* attribute: serial_attribute  */
#line 6386 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 866: /* opt_compression_method: %empty  */
#line 6390 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 35207 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 867: /* opt_compression_method: equal ident  */
#line 6391 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 35213 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 868: /* opt_compressed: %empty  */
#line 6395 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 869: /* opt_compressed: compressed  */
#line 6396 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 35225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 870: /* opt_enable: %empty  */
#line 6400 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 871: /* opt_enable: ENABLE_SYM  */
#line 6401 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 35237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 872: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 6406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 873: /* compressed_deprecated_data_type_attribute: COMPRESSED_SYM opt_compression_method  */
#line 6414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 874: /* compressed_deprecated_column_attribute: COMPRESSED_SYM opt_compression_method  */
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 875: /* asrow_attribute: not NULL_SYM opt_enable  */
#line 6431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 35273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 876: /* asrow_attribute: opt_primary KEY_SYM  */
#line 6435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 879: /* serial_attribute: engine_defined_option  */
#line 6446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->last_field->option_list, &Lex->option_list_last);
          }
#line 35291 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 880: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 6450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 35305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 881: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 6463 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 35315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 882: /* with_or_without_system: WITHOUT SYSTEM  */
#line 6469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 35325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 883: /* charset: CHAR_SYM SET  */
#line 6478 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.kwd)= (yyvsp[-1].kwd); }
#line 35331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 884: /* charset: CHARSET  */
#line 6479 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.kwd)= (yyvsp[0].kwd); }
#line 35337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 885: /* charset_name: ident_or_text  */
#line 6484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str, MY_CS_PRIMARY,
                                                    MYF(utf8_flag)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 35348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 886: /* charset_name: BINARY  */
#line 6490 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 35354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 887: /* charset_name_or_default: charset_name  */
#line 6494 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 35360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 888: /* charset_name_or_default: DEFAULT  */
#line 6495 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 35366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 889: /* opt_load_data_charset: %empty  */
#line 6499 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)= NULL; }
#line 35372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 890: /* opt_load_data_charset: charset charset_name_or_default  */
#line 6500 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 35378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 891: /* old_or_new_charset_name: ident_or_text  */
#line 6505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,
                                                    MYF(utf8_flag))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 35391 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 892: /* old_or_new_charset_name: BINARY  */
#line 6513 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 35397 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 893: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 6517 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 35403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 894: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 6518 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 35409 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 895: /* collation_name: ident_or_text  */
#line 6523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_extended_collation).set_by_name((yyvsp[0].lex_str).str, thd->get_utf8_flag()))
              MYSQL_YYABORT;
          }
#line 35418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 896: /* collation_name_or_default: collation_name  */
#line 6530 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation)=(yyvsp[0].Lex_extended_collation); }
#line 35424 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 897: /* collation_name_or_default: DEFAULT  */
#line 6531 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation).set_collate_default(); }
#line 35430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 898: /* opt_default: %empty  */
#line 6535 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 899: /* opt_default: DEFAULT  */
#line 6536 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 900: /* charset_or_alias: charset charset_name  */
#line 6540 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 35448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 901: /* charset_or_alias: ASCII_SYM  */
#line 6541 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 35454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 902: /* charset_or_alias: UNICODE_SYM  */
#line 6543 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 35463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 903: /* opt_binary: %empty  */
#line 6550 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 905: /* binary: BYTE_SYM  */
#line 6556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset(&my_charset_bin));
          }
#line 35477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 906: /* binary: charset_or_alias  */
#line 6560 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset((yyvsp[0].charset)));
          }
#line 35485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 907: /* binary: charset_or_alias BINARY  */
#line 6564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[-1].charset))))
              MYSQL_YYABORT;
          }
#line 35494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 908: /* binary: BINARY  */
#line 6568 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.Lex_exact_charset_extended_collation_attrs).set_contextually_typed_binary_style(); }
#line 35500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 909: /* binary: BINARY charset_or_alias  */
#line 6570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 35509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 910: /* binary: charset_or_alias COLLATE_SYM DEFAULT  */
#line 6575 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_default(Lex_exact_charset((yyvsp[-2].charset)));
          }
#line 35517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 911: /* binary: charset_or_alias COLLATE_SYM collation_name  */
#line 6579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].Lex_extended_collation).merge_exact_charset(Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 912: /* binary: COLLATE_SYM collation_name  */
#line 6585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 913: /* binary: COLLATE_SYM DEFAULT  */
#line 6589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_collate_default();
          }
#line 35543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 914: /* opt_bin_mod: %empty  */
#line 6595 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= false; }
#line 35549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 915: /* opt_bin_mod: BINARY  */
#line 6596 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= true; }
#line 35555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 916: /* $@88: %empty  */
#line 6601 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 35567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 917: /* ws_nweights: '(' real_ulong_num $@88 ')'  */
#line 6609 "/home/buildbot/git/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 35573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 918: /* ws_level_flag_desc: ASC  */
#line 6613 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.ulong_num)= 0; }
#line 35579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 919: /* ws_level_flag_desc: DESC  */
#line 6614 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 35585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 920: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 6618 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 35591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 921: /* ws_level_flags: %empty  */
#line 6621 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 35597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 922: /* ws_level_flags: ws_level_flag_desc  */
#line 6622 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 923: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 6623 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 35609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 924: /* ws_level_flags: ws_level_flag_reverse  */
#line 6624 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 35615 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 925: /* ws_level_number: real_ulong_num  */
#line 6629 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 35624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 926: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 6637 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 35632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 927: /* ws_level_list: ws_level_list_item  */
#line 6643 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35638 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 928: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 6644 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 35644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 929: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 6649 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 35655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 930: /* ws_level_list_or_range: ws_level_list  */
#line 6658 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 931: /* ws_level_list_or_range: ws_level_range  */
#line 6659 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 932: /* opt_ws_levels: %empty  */
#line 6663 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.ulong_num)= 0; }
#line 35673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 933: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 6664 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 936: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 6678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 35687 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 937: /* opt_ref_list: %empty  */
#line 6685 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->ref_list.empty(); }
#line 35693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 939: /* ref_list: ref_list ',' ident  */
#line 6691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 35704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 940: /* ref_list: ident  */
#line 6698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 35717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 941: /* opt_match_clause: %empty  */
#line 6710 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 35723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 942: /* opt_match_clause: MATCH FULL  */
#line 6712 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 35729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 943: /* opt_match_clause: MATCH PARTIAL  */
#line 6714 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 35735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 944: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 6716 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 35741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 945: /* opt_on_update_delete: %empty  */
#line 6721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 35751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 946: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 6727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 35761 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 947: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 6733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 35771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 948: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 6740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 35781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 949: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 6747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 35791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 950: /* delete_option: RESTRICT  */
#line 6755 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 35797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 951: /* delete_option: CASCADE  */
#line 6756 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 35803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 952: /* delete_option: SET NULL_SYM  */
#line 6757 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 35809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 953: /* delete_option: NO_SYM ACTION  */
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 35815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 954: /* delete_option: SET DEFAULT  */
#line 6759 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 35821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 955: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 6763 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 35827 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 956: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 6764 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 35833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 957: /* key_or_index: KEY_SYM  */
#line 6768 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 958: /* key_or_index: INDEX_SYM  */
#line 6769 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 35845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 959: /* opt_key_or_index: %empty  */
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 961: /* keys_or_index: KEYS  */
#line 6778 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 35857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 962: /* keys_or_index: INDEX_SYM  */
#line 6779 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 35863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 963: /* keys_or_index: INDEXES  */
#line 6780 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 964: /* fulltext: FULLTEXT_SYM  */
#line 6784 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 35875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 965: /* spatial: SPATIAL_SYM  */
#line 6789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 35888 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 966: /* normal_key_options: %empty  */
#line 6800 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 967: /* normal_key_options: normal_key_opts  */
#line 6801 "/home/buildbot/git/sql/sql_yacc.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 35900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 968: /* fulltext_key_options: %empty  */
#line 6805 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 969: /* fulltext_key_options: fulltext_key_opts  */
#line 6806 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 35912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 970: /* spatial_key_options: %empty  */
#line 6810 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 971: /* spatial_key_options: spatial_key_opts  */
#line 6811 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 35924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 978: /* opt_USING_key_algorithm: %empty  */
#line 6830 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 35930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 979: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 6831 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 35936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 980: /* opt_key_algorithm_clause: %empty  */
#line 6836 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 35942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 981: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 6837 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 35948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 982: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 6838 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 35954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 983: /* key_using_alg: USING btree_or_rtree  */
#line 6843 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 35960 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 984: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 6845 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 35966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 985: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 6850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 35975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 986: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 6855 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 35981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 987: /* all_key_opt: VISIBLE_SYM  */
#line 6857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* This is mainly for MySQL 8.0 compatibility */
          }
#line 35989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 988: /* all_key_opt: ignorability  */
#line 6861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.is_ignored= (yyvsp[0].num);
          }
#line 35997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 989: /* all_key_opt: engine_defined_option  */
#line 6865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->option_list, &Lex->option_list_last);
          }
#line 36005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 994: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 6882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 36016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 995: /* btree_or_rtree: BTREE_SYM  */
#line 6891 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 36022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 996: /* btree_or_rtree: RTREE_SYM  */
#line 6892 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 36028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 997: /* btree_or_rtree: HASH_SYM  */
#line 6893 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 36034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 998: /* ignorability: IGNORED_SYM  */
#line 6897 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= true; }
#line 36040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 999: /* ignorability: NOT_SYM IGNORED_SYM  */
#line 6898 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.num)= false; }
#line 36046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1000: /* key_list: key_list ',' key_part order_dir  */
#line 6903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 36055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1001: /* key_list: key_part order_dir  */
#line 6908 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 36064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1002: /* opt_without_overlaps: %empty  */
#line 6915 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1003: /* opt_without_overlaps: ',' ident WITHOUT OVERLAPS_SYM  */
#line 6917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->without_overlaps= true;
            Lex->last_key->period= (yyvsp[-2].ident_sys);
          }
#line 36079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1004: /* key_part: ident  */
#line 6925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 36089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1005: /* key_part: ident '(' NUM ')'  */
#line 6931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 36102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1006: /* opt_ident: %empty  */
#line 6942 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 36108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1007: /* opt_ident: field_ident  */
#line 6943 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 36114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1008: /* string_list: text_string  */
#line 6948 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 36120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1009: /* string_list: string_list ',' text_string  */
#line 6950 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 36126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1010: /* $@89: %empty  */
#line 6959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 36146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1011: /* $@90: %empty  */
#line 6975 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 36162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1012: /* alter: ALTER $@89 alter_options TABLE_SYM opt_if_exists table_ident opt_lock_wait_timeout $@90 alter_commands  */
#line 6987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 36177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1013: /* $@91: %empty  */
#line 6998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 36187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1014: /* alter: ALTER DATABASE ident_or_empty $@91 create_database_options  */
#line 7004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 36201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1015: /* $@92: %empty  */
#line 7014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 36211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1016: /* alter: ALTER DATABASE COMMENT_SYM opt_equal TEXT_STRING_sys $@92 opt_create_database_options  */
#line 7020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= Lex_ident_sys();
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 36224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1017: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 36236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1018: /* $@93: %empty  */
#line 7037 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_procedure_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 36245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1019: /* alter: ALTER PROCEDURE_SYM sp_name $@93 sp_a_chistics stmt_end  */
#line 7042 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 36251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1020: /* $@94: %empty  */
#line 7044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_function_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 36260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1021: /* alter: ALTER FUNCTION_SYM sp_name $@94 sp_a_chistics stmt_end  */
#line 7049 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 36266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1022: /* $@95: %empty  */
#line 7051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 36277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1023: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@95 view_list_opt AS view_select stmt_end  */
#line 7057 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 36283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1024: /* $@96: %empty  */
#line 7064 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 36294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1025: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@96 view_list_opt AS view_select stmt_end  */
#line 7070 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 36300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1026: /* $@97: %empty  */
#line 7072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 36323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1027: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@97 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 7095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 36343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1028: /* $@98: %empty  */
#line 7111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 36353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1029: /* alter: ALTER SERVER_SYM ident_or_text $@98 OPTIONS_SYM '(' server_options_list ')'  */
#line 7115 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    { }
#line 36359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1030: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 7119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 36368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1031: /* $@99: %empty  */
#line 7124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 36384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1032: /* $@100: %empty  */
#line 7136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 36398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1033: /* $@101: %empty  */
#line 7146 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36409 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1034: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@99 table_ident $@100 sequence_defs $@101 stmt_end  */
#line 7151 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 36415 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1035: /* account_locking_option: LOCK_SYM  */
#line 7156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 36423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1036: /* account_locking_option: UNLOCK_SYM  */
#line 7160 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 36431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1037: /* opt_password_expire_option: %empty  */
#line 7167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 36439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1038: /* opt_password_expire_option: NEVER_SYM  */
#line 7171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 36447 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1039: /* opt_password_expire_option: DEFAULT  */
#line 7175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 36455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1040: /* opt_password_expire_option: INTERVAL_SYM NUM DAY_SYM  */
#line 7179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 36465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1046: /* ev_alter_on_schedule_completion: %empty  */
#line 7195 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 36471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1047: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 7196 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.num)= 1; }
#line 36477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1048: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 7197 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 36483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1049: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 7198 "/home/buildbot/git/sql/sql_yacc.yy"
                                                            { (yyval.num)= 1; }
#line 36489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1050: /* opt_ev_rename_to: %empty  */
#line 7202 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 36495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1051: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 7204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 36508 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1052: /* opt_ev_sql_stmt: %empty  */
#line 7215 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= 0;}
#line 36514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1053: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 7216 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 36520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1054: /* ident_or_empty: %empty  */
#line 7221 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.ident_sys)= Lex_ident_sys(); }
#line 36526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1057: /* alter_commands: DISCARD TABLESPACE  */
#line 7228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1058: /* alter_commands: IMPORT TABLESPACE  */
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1064: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 7258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 36560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1065: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 36570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1066: /* $@102: %empty  */
#line 7272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1068: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7285 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 36600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1069: /* $@103: %empty  */
#line 7296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1071: /* $@104: %empty  */
#line 7308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36629 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1073: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 7320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 36640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1074: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 7327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1076: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident have_partitioning  */
#line 7339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-1].table)))
              MYSQL_YYABORT;
          }
#line 36663 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1077: /* alter_commands: CONVERT_SYM PARTITION_SYM alt_part_name_item TO_SYM TABLE_SYM table_ident have_partitioning  */
#line 7345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->stmt_alter_table((yyvsp[-1].table)))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            lex->alter_info.partition_flags|= ALTER_PARTITION_CONVERT_OUT;
          }
#line 36677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1078: /* $@105: %empty  */
#line 7355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), nullptr, 0,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            /*
              This will appear as (new_db, new_name) in alter_ctx.
              new_db will be IX-locked and new_name X-locked.
            */
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            lex->name= (yyvsp[0].table)->table;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;

            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->part_info->num_parts= 1;
            /*
              OR-ed with ALTER_PARTITION_ADD because too many checks of
              ALTER_PARTITION_ADD required.
            */
            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD |
                                              ALTER_PARTITION_CONVERT_IN;
          }
#line 36711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1079: /* alter_commands: CONVERT_SYM TABLE_SYM table_ident $@105 TO_SYM PARTITION_SYM part_definition  */
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1080: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 7395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 36730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1081: /* all_or_alt_part_name_list: ALL  */
#line 7402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 36738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1083: /* $@106: %empty  */
#line 7411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 36754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1084: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@106 add_part_extra  */
#line 7423 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1086: /* add_part_extra: '(' part_def_list ')'  */
#line 7429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 36769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1087: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 7434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 36777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1088: /* $@107: %empty  */
#line 7441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 36790 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1090: /* reorg_parts_rule: %empty  */
#line 7454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 36798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1091: /* $@108: %empty  */
#line 7458 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 36806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1092: /* reorg_parts_rule: alt_part_name_list $@108 INTO '(' part_def_list ')'  */
#line 7462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 36815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1093: /* alt_part_name_list: alt_part_name_item  */
#line 7469 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 36821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1094: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 7470 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    {}
#line 36827 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1095: /* alt_part_name_item: ident  */
#line 7475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1099: /* alter_list_item: add_column column_def opt_place  */
#line 7497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 36848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1100: /* alter_list_item: ADD key_def  */
#line 7504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1101: /* alter_list_item: ADD period_for_system_time  */
#line 7509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 36865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1102: /* alter_list_item: ADD PERIOD_SYM opt_if_not_exists_table_element period_for_application_time  */
#line 7514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 36875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1103: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 7520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1104: /* alter_list_item: ADD constraint_def  */
#line 7527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 36894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1105: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 7531 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 36903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1106: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 7537 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 36914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1107: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 7545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 36925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1108: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 7552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 36939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1109: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 7562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 36954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1110: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 7573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 36968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1111: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 7583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name.str,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 36983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1112: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 7594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 36997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1113: /* alter_list_item: DISABLE_SYM KEYS  */
#line 7604 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 37007 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1114: /* alter_list_item: ENABLE_SYM KEYS  */
#line 7610 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 37017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1115: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 7616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str), (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 37028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1116: /* alter_list_item: ALTER key_or_index opt_if_exists_table_element ident ignorability  */
#line 7623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            Alter_index_ignorability *ac= new (thd->mem_root)
                                        Alter_index_ignorability((yyvsp[-1].ident_sys).str, (yyvsp[0].num), (yyvsp[-2].num));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_ignorability_list.push_back(ac);
            lex->alter_info.flags|= ALTER_INDEX_IGNORABILITY;
          }
#line 37042 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1117: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 7633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str), (Virtual_column_info*) 0, (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 37051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1118: /* alter_list_item: RENAME opt_to table_ident  */
#line 7638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table((yyvsp[0].table)))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_RENAME;
          }
#line 37061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1119: /* alter_list_item: RENAME COLUMN_SYM opt_if_exists_table_element ident TO_SYM ident  */
#line 7644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 37070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1120: /* alter_list_item: RENAME key_or_index opt_if_exists_table_element field_ident TO_SYM field_ident  */
#line 7649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (thd->mem_root)
                                    Alter_rename_key((yyvsp[-2].lex_str), (yyvsp[0].lex_str), (yyvsp[-3].num));
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= ALTER_RENAME_INDEX;
          }
#line 37084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1121: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default  */
#line 7659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset((yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 37093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1122: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 7665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset((yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation)))
              MYSQL_YYABORT;
          }
#line 37102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1123: /* alter_list_item: create_table_options_space_separated  */
#line 7670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 37111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1124: /* alter_list_item: FORCE_SYM  */
#line 7675 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 37119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1125: /* alter_list_item: alter_order_clause  */
#line 7679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 37128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1128: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 7686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 37137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1129: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 7691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 37146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1130: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 7696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 37154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1131: /* alter_list_item: DROP PERIOD_SYM opt_if_exists_table_element FOR_SYM ident  */
#line 7700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 37166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1137: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 7719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 37175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1138: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 7724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 37184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1139: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 7732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 37193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1140: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 7737 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 37202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1141: /* opt_column: %empty  */
#line 7744 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37208 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1142: /* opt_column: COLUMN_SYM  */
#line 7745 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 37214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1143: /* opt_ignore: %empty  */
#line 7749 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->ignore= 0;}
#line 37220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1144: /* opt_ignore: IGNORE_SYM  */
#line 7750 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 37226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1145: /* $@109: %empty  */
#line 7754 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->ignore= 0;}
#line 37232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1151: /* alter_option: IGNORE_SYM  */
#line 7768 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 37238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1152: /* alter_option: ONLINE_SYM  */
#line 7770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 37247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1153: /* opt_restrict: %empty  */
#line 7777 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 37253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1154: /* opt_restrict: RESTRICT  */
#line 7778 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 37259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1155: /* opt_restrict: CASCADE  */
#line 7779 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 37265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1156: /* opt_place: %empty  */
#line 7783 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 37271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1157: /* opt_place: AFTER_SYM ident  */
#line 7785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 37280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1158: /* opt_place: FIRST_SYM  */
#line 7790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 37290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1159: /* opt_to: %empty  */
#line 7798 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1160: /* opt_to: TO_SYM  */
#line 7799 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 37302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1161: /* opt_to: '='  */
#line 7800 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 37308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1162: /* opt_to: AS  */
#line 7801 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 37314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1163: /* $@110: %empty  */
#line 7806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 37325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1164: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel $@110 slave_until  */
#line 7813 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1165: /* $@111: %empty  */
#line 7815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 37342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1166: /* slave: START_SYM ALL SLAVES slave_thread_opts $@111  */
#line 7821 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1167: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel  */
#line 7823 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 37359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1168: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 7830 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 37370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1169: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 7840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 37387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1170: /* opt_start_transaction_option_list: %empty  */
#line 7856 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 37395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1171: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 7860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 37403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1172: /* start_transaction_option_list: start_transaction_option  */
#line 7867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 37411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1173: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 7871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 37419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1174: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 7878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 37427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1175: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 7882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 37435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1176: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 7886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 37443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1177: /* $@112: %empty  */
#line 7892 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->slave_thd_opt= 0; }
#line 37449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1178: /* slave_thread_opts: $@112 slave_thread_opt_list  */
#line 7894 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1181: /* slave_thread_opt: %empty  */
#line 7903 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37461 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1182: /* slave_thread_opt: SQL_THREAD  */
#line 7904 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 37467 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1183: /* slave_thread_opt: RELAY_THREAD  */
#line 7905 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 37473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1184: /* slave_until: %empty  */
#line 7909 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1185: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 7911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 37492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1186: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 7920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 37500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1189: /* $@113: %empty  */
#line 7932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37511 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1190: /* checksum: CHECKSUM_SYM table_or_tables $@113 table_list opt_checksum_type  */
#line 7939 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1191: /* opt_checksum_type: %empty  */
#line 7943 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= 0; }
#line 37523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1192: /* opt_checksum_type: QUICK  */
#line 7944 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 37529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1193: /* opt_checksum_type: EXTENDED_SYM  */
#line 7945 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 37535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1195: /* $@114: %empty  */
#line 7951 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 37541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1197: /* $@115: %empty  */
#line 7957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1198: /* repair: REPAIR opt_no_write_to_binlog $@115 repair_table_or_view  */
#line 7967 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1199: /* opt_mi_repair_type: %empty  */
#line 7977 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 37573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1200: /* opt_mi_repair_type: mi_repair_types  */
#line 7978 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 37579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1201: /* mi_repair_types: mi_repair_type  */
#line 7982 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 37585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1202: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 7983 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 37591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1203: /* mi_repair_type: QUICK  */
#line 7987 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 37597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1204: /* mi_repair_type: EXTENDED_SYM  */
#line 7988 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 37603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1205: /* mi_repair_type: USE_FRM  */
#line 7989 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 37609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1206: /* opt_view_repair_type: %empty  */
#line 7993 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 37615 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1207: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 7994 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 37621 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1208: /* $@116: %empty  */
#line 7999 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1209: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@116 analyze_table_list  */
#line 8009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37647 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1213: /* opt_persistent_stat_clause: %empty  */
#line 8029 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37653 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1214: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8031 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 37661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1215: /* persistent_stat_spec: ALL  */
#line 8038 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1216: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8040 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1217: /* persistent_column_stat_spec: ALL  */
#line 8044 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 37679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1218: /* $@117: %empty  */
#line 8046 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 37690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1219: /* persistent_column_stat_spec: '(' $@117 table_column_list ')'  */
#line 8054 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 37696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1220: /* persistent_index_stat_spec: ALL  */
#line 8058 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 37702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1221: /* $@118: %empty  */
#line 8060 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 37713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1222: /* persistent_index_stat_spec: '(' $@118 table_index_list ')'  */
#line 8068 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 37719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1223: /* table_column_list: %empty  */
#line 8073 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1224: /* table_column_list: ident  */
#line 8075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 37734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1225: /* table_column_list: table_column_list ',' ident  */
#line 8080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 37743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1226: /* table_index_list: %empty  */
#line 8088 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1229: /* table_index_name: ident  */
#line 8095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 37759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1230: /* table_index_name: PRIMARY_SYM  */
#line 8102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 37770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1231: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 8112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 37781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1232: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 8120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 37791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1234: /* $@119: %empty  */
#line 8130 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 37797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1236: /* $@120: %empty  */
#line 8135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1237: /* check: CHECK_SYM $@120 check_view_or_table  */
#line 8145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1238: /* opt_mi_check_type: %empty  */
#line 8157 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 37831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1239: /* opt_mi_check_type: mi_check_types  */
#line 8158 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 37837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1240: /* mi_check_types: mi_check_type  */
#line 8162 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 37843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1241: /* mi_check_types: mi_check_type mi_check_types  */
#line 8163 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 37849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1242: /* mi_check_type: QUICK  */
#line 8167 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 37855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1243: /* mi_check_type: FAST_SYM  */
#line 8168 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 37861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1244: /* mi_check_type: MEDIUM_SYM  */
#line 8169 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 37867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1245: /* mi_check_type: EXTENDED_SYM  */
#line 8170 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 37873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1246: /* mi_check_type: CHANGED  */
#line 8171 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 37879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1247: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 8172 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 37885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1248: /* opt_view_check_type: %empty  */
#line 8176 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 37891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1249: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 8177 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 37897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1250: /* $@121: %empty  */
#line 8182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1251: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@121 table_list opt_lock_wait_timeout  */
#line 8192 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1252: /* opt_no_write_to_binlog: %empty  */
#line 8202 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 37929 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1253: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 8203 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 37935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1254: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 8204 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 37941 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1255: /* $@122: %empty  */
#line 8209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            Lex->create_info.set((yyvsp[0].object_ddl_options));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 37952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1256: /* rename: RENAME table_or_tables opt_if_exists $@122 table_to_table_list  */
#line 8216 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 37960 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1257: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 8220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 37968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1258: /* rename_list: user TO_SYM user  */
#line 8227 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 37978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1259: /* rename_list: rename_list ',' user TO_SYM user  */
#line 8233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 37988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1262: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 8247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 38004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1263: /* $@123: %empty  */
#line 8262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.reset();
          }
#line 38012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1264: /* keycache: CACHE_SYM INDEX_SYM $@123 keycache_list_or_parts IN_SYM key_cache_name  */
#line 8266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1269: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 8285 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1270: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 8296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1271: /* key_cache_name: ident  */
#line 8306 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 38052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1272: /* key_cache_name: DEFAULT  */
#line 8307 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str) = default_base; }
#line 38058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1273: /* $@124: %empty  */
#line 8312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 38070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1274: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@124 preload_list_or_parts  */
#line 8320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 38078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1279: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 8337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1280: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 8348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1281: /* $@125: %empty  */
#line 8359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 38110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1283: /* $@126: %empty  */
#line 8366 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 38120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1285: /* cache_key_list_or_empty: %empty  */
#line 8375 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 38126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1287: /* opt_ignore_leaves: %empty  */
#line 8381 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 38132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1288: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 8382 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 38138 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1289: /* $@127: %empty  */
#line 8392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 38149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1290: /* select: query_expression_no_with_clause $@127 opt_procedure_or_into  */
#line 8399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 38160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1291: /* $@128: %empty  */
#line 8406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 38171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1292: /* select: with_clause query_expression_no_with_clause $@128 opt_procedure_or_into  */
#line 8413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 38183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1293: /* $@129: %empty  */
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 38192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1294: /* select_into: select_into_query_specification $@129 opt_order_limit_lock  */
#line 8429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 38206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1295: /* $@130: %empty  */
#line 8440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 38215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1296: /* select_into: with_clause select_into_query_specification $@130 opt_order_limit_lock  */
#line 8445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 38231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1297: /* simple_table: query_specification  */
#line 8459 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1298: /* simple_table: table_value_constructor  */
#line 8460 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1299: /* $@131: %empty  */
#line 8465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 38252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1300: /* table_value_constructor: VALUES $@131 values_list  */
#line 8470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 38261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1301: /* $@132: %empty  */
#line 8478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) || lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 38274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1302: /* $@133: %empty  */
#line 8487 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= SELECT_LIST;
          }
#line 38282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1303: /* query_specification_start: SELECT_SYM $@132 select_options $@133 select_item_list  */
#line 8491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 38290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1304: /* query_specification: query_specification_start opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8503 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 38298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1305: /* select_into_query_specification: query_specification_start into opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 38306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1306: /* query_expression: query_expression_no_with_clause  */
#line 8574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 38315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1307: /* query_expression: with_clause query_expression_no_with_clause  */
#line 8580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 38325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1308: /* query_expression_no_with_clause: query_expression_body_ext  */
#line 8593 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 38331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1309: /* query_expression_no_with_clause: query_expression_body_ext_parens  */
#line 8594 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 38337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1310: /* $@134: %empty  */
#line 8609 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 38349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1311: /* query_expression_body_ext: query_expression_body $@134 opt_query_expression_tail  */
#line 8617 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 38360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1312: /* $@135: %empty  */
#line 8624 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 38369 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1313: /* query_expression_body_ext: query_expression_body_ext_parens $@135 query_expression_tail  */
#line 8629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 38378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1314: /* query_expression_body_ext_parens: '(' query_expression_body_ext_parens ')'  */
#line 8637 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 38384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1315: /* query_expression_body_ext_parens: '(' query_expression_body_ext ')'  */
#line 8639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 38395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1316: /* query_expression_body: query_simple  */
#line 8654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 38405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1317: /* $@136: %empty  */
#line 8661 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 38416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1318: /* query_expression_body: query_expression_body unit_type_decl $@136 query_primary  */
#line 8668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 38427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1319: /* query_expression_body: query_expression_body_ext_parens unit_type_decl query_primary  */
#line 8677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 38439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1320: /* query_primary: query_simple  */
#line 8693 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38445 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1321: /* query_primary: query_expression_body_ext_parens  */
#line 8695 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 38451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1322: /* query_simple: simple_table  */
#line 8704 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 38457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1323: /* subselect: query_expression  */
#line 8709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1324: /* subquery: query_expression_body_ext_parens  */
#line 8750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1325: /* subquery: '(' with_clause query_expression_no_with_clause ')'  */
#line 8759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1329: /* table_reference_list: join_table_list  */
#line 8778 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 38500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1332: /* select_options: select_option_list  */
#line 8793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 38510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1333: /* opt_history_unit: %empty  */
#line 8802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 38518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1334: /* opt_history_unit: TRANSACTION_SYM  */
#line 8806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 38526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1335: /* opt_history_unit: TIMESTAMP  */
#line 8810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 38534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1336: /* history_point: TIMESTAMP TEXT_STRING  */
#line 8817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 38547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1337: /* history_point: function_call_keyword_timestamp  */
#line 8826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 38555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1338: /* history_point: opt_history_unit bit_expr  */
#line 8830 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 38563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1339: /* for_portion_of_time_clause: FOR_SYM PORTION_SYM OF_SYM remember_tok_start ident FROM bit_expr TO_SYM bit_expr  */
#line 8838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 38579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1340: /* opt_for_portion_of_time_clause: %empty  */
#line 8853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 38587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1341: /* opt_for_portion_of_time_clause: for_portion_of_time_clause  */
#line 8857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 38595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1342: /* opt_for_system_time_clause: %empty  */
#line 8864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 38603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1343: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 8868 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 38611 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1344: /* system_time_expr: AS OF_SYM history_point  */
#line 8875 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 38619 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1345: /* system_time_expr: ALL  */
#line 8879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 38627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1346: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 8883 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 38635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1347: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 8887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 38643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1351: /* select_option: SQL_NO_CACHE_SYM  */
#line 8900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 38656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1352: /* select_option: SQL_CACHE_SYM  */
#line 8909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 38669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1353: /* select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout_new  */
#line 8922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 38679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1354: /* select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout_new  */
#line 8928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 38689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1355: /* opt_select_lock_type: %empty  */
#line 8938 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 38697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1356: /* opt_select_lock_type: select_lock_type  */
#line 8942 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 38705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1357: /* opt_lock_wait_timeout_new: %empty  */
#line 8949 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 38713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1358: /* opt_lock_wait_timeout_new: WAIT_SYM ulong_num  */
#line 8953 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 38723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1359: /* opt_lock_wait_timeout_new: NOWAIT_SYM  */
#line 8959 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 38733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1360: /* opt_lock_wait_timeout_new: SKIP_SYM LOCKED_SYM  */
#line 8965 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).skip_locked= 1;
          Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SKIP_LOCKED);
        }
#line 38743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1363: /* select_item_list: '*'  */
#line 8976 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_parsing_returning=
                              thd->lex->current_select->parsing_place ==
                                                IN_RETURNING;
            SELECT_LEX *correct_select= is_parsing_returning ?
                                              thd->lex->returning() :
                                              thd->lex->current_select;
            Item *item= new (thd->mem_root)
                          Item_field(thd, &correct_select->context,
                                     star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            correct_select->with_wild++;
          }
#line 38764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1364: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 8996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 38773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1365: /* select_item: remember_name expr remember_end select_alias  */
#line 9001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 38796 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1366: /* remember_tok_start: %empty  */
#line 9022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 38804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1367: /* remember_name: %empty  */
#line 9028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 38812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1368: /* remember_end: %empty  */
#line 9034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 38820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1369: /* select_alias: %empty  */
#line 9040 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 38826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1370: /* select_alias: AS ident  */
#line 9041 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 38832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1371: /* select_alias: AS TEXT_STRING_sys  */
#line 9042 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 38838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1372: /* select_alias: ident  */
#line 9043 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 38844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1373: /* select_alias: TEXT_STRING_sys  */
#line 9044 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 38850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1374: /* opt_default_time_precision: %empty  */
#line 9048 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 38856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1375: /* opt_default_time_precision: '(' ')'  */
#line 9049 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 38862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1376: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9050 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 38868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1377: /* opt_time_precision: %empty  */
#line 9054 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 38874 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1378: /* opt_time_precision: '(' ')'  */
#line 9055 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 38880 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1379: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9056 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 38886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1380: /* optional_braces: %empty  */
#line 9060 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 38892 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1381: /* optional_braces: '(' ')'  */
#line 9061 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 38898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1382: /* expr: expr or expr  */
#line 9067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 38953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1383: /* expr: expr XOR expr  */
#line 9118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1384: /* expr: expr and expr  */
#line 9125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 39011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1385: /* expr: NOT_SYM expr  */
#line 9168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1387: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9178 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1388: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1389: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1390: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1391: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1392: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9208 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1393: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1394: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1395: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1396: /* boolean_test: boolean_test comp_op predicate  */
#line 9232 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39121 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1397: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1399: /* predicate: predicate IN_SYM subquery  */
#line 9248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1400: /* predicate: predicate not IN_SYM subquery  */
#line 9254 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1401: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1402: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1403: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1404: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1405: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1406: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1407: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 9306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1408: /* predicate: predicate LIKE predicate  */
#line 9316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1409: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 9322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1410: /* predicate: predicate not LIKE predicate  */
#line 9329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1411: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 9336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1412: /* predicate: predicate REGEXP predicate  */
#line 9344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1413: /* predicate: predicate not REGEXP predicate  */
#line 9350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1415: /* bit_expr: bit_expr '|' bit_expr  */
#line 9363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1416: /* bit_expr: bit_expr '&' bit_expr  */
#line 9369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1417: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 9375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1418: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 9381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1419: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 9387 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1420: /* bit_expr: bit_expr '+' bit_expr  */
#line 9394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1421: /* bit_expr: bit_expr '-' bit_expr  */
#line 9400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1422: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 9406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1423: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 9412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1424: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 9419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1425: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 9425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1426: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 9431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1427: /* bit_expr: bit_expr '*' bit_expr  */
#line 9437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1428: /* bit_expr: bit_expr '/' bit_expr  */
#line 9443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1429: /* bit_expr: bit_expr '%' bit_expr  */
#line 9449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1430: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 9455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1431: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 9461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1432: /* bit_expr: bit_expr '^' bit_expr  */
#line 9467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1442: /* comp_op: '='  */
#line 9496 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 39489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1443: /* comp_op: GE  */
#line 9497 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 39495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1444: /* comp_op: '>'  */
#line 9498 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 39501 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1445: /* comp_op: LE  */
#line 9499 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 39507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1446: /* comp_op: '<'  */
#line 9500 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 39513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1447: /* comp_op: NE  */
#line 9501 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 39519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1448: /* all_or_any: ALL  */
#line 9505 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 39525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1449: /* all_or_any: ANY_SYM  */
#line 9506 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 39531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1450: /* opt_dyncol_type: %empty  */
#line 9511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
	  }
#line 39539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1451: /* opt_dyncol_type: AS dyncol_type  */
#line 9514 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 39545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1455: /* numeric_dyncol_type: INT_SYM  */
#line 9524 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 39551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1456: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 9525 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 39557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1457: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 9526 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 39563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1458: /* numeric_dyncol_type: REAL  */
#line 9527 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 39569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1459: /* numeric_dyncol_type: FLOAT_SYM  */
#line 9528 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 39575 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1460: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 9529 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 39581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1461: /* temporal_dyncol_type: DATE_SYM  */
#line 9533 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 39587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1462: /* temporal_dyncol_type: TIME_SYM opt_field_scale  */
#line 9534 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, (yyvsp[0].Lex_length_and_dec)); }
#line 39593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1463: /* temporal_dyncol_type: DATETIME opt_field_scale  */
#line 9535 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, (yyvsp[0].Lex_length_and_dec)); }
#line 39599 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1464: /* string_dyncol_type: char opt_binary  */
#line 9540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_dyncol_type).set(DYN_COL_STRING, (yyvsp[0].Lex_exact_charset_extended_collation_attrs), thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 39608 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1465: /* string_dyncol_type: nchar  */
#line 9545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING, national_charset_info);
          }
#line 39616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1466: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 9552 "/home/buildbot/git/sql/sql_yacc.yy"
   {
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= (yyvsp[0].Lex_dyncol_type).charset_collation();
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_length())
       (yyval.dyncol_def)->len= (yyvsp[0].Lex_dyncol_type).length();
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_dec())
       (yyval.dyncol_def)->frac= (yyvsp[0].Lex_dyncol_type).dec();
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 39639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1467: /* dyncall_create_list: dyncall_create_element  */
#line 9574 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 39650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1468: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 9581 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 39659 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1469: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 9589 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 39665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1470: /* plsql_cursor_attr: FOUND_SYM  */
#line 9590 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 39671 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1471: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 9591 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 39677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1472: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 9592 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 39683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1473: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 9597 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 39692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1474: /* trim_operands: expr  */
#line 9605 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 39698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1475: /* trim_operands: LEADING expr FROM expr  */
#line 9606 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 39704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1476: /* trim_operands: TRAILING expr FROM expr  */
#line 9607 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 39710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1477: /* trim_operands: BOTH expr FROM expr  */
#line 9608 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 39716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1478: /* trim_operands: LEADING FROM expr  */
#line 9609 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 39722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1479: /* trim_operands: TRAILING FROM expr  */
#line 9610 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 39728 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1480: /* trim_operands: BOTH FROM expr  */
#line 9611 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 39734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1481: /* trim_operands: expr FROM expr  */
#line 9612 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 39740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1488: /* column_default_non_parenthesized_expr: param_marker  */
#line 9650 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 39746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1490: /* column_default_non_parenthesized_expr: sum_expr  */
#line 9653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top || Lex->json_table)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 39758 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1491: /* column_default_non_parenthesized_expr: window_func_expr  */
#line 9661 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 39770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1493: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 9670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1494: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 9677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1495: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 9683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1496: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 9688 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 39814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1497: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 9698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 39823 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1498: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 9703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 39832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1499: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 9708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 39842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1500: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 9714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 39851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1501: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 9719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1502: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 9725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 39876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1503: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1504: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 9743 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 39896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1505: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 9748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 39905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1506: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 9753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 39914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1507: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 9758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 39923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1508: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ')'  */
#line 9763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 39932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1509: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ')'  */
#line 9768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 39941 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1510: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ',' ulonglong_num ')'  */
#line 9773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 39950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1513: /* primary_expr: '(' parenthesized_expr ')'  */
#line 9782 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 39956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1514: /* primary_expr: subquery  */
#line 9784 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 39965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1516: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 9793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root)
                               Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].Lex_extended_collation)))))
              MYSQL_YYABORT;
          }
#line 39975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1518: /* simple_expr: BINARY simple_expr  */
#line 9803 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 39985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1519: /* simple_expr: '+' simple_expr  */
#line 9809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1520: /* simple_expr: '-' simple_expr  */
#line 9813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1521: /* simple_expr: '~' simple_expr  */
#line 9819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1522: /* simple_expr: not2 simple_expr  */
#line 9825 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1524: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 9835 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40033 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1525: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 9844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1526: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 9851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1527: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 9865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1528: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 9871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1529: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 9877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1530: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 9886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1531: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 9895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1532: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 9901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1533: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 9907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1534: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 9913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1535: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 9919 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1536: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 9934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1537: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 9945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1538: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 9951 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1539: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 9957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1540: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 9963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1541: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 9969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1542: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 9975 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1543: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 9983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1544: /* function_call_keyword: function_call_keyword_timestamp  */
#line 9990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 40255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1545: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 9994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_trim(thd, (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 40265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1546: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 40277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1547: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1548: /* substring_operands: expr ',' expr ',' expr  */
#line 10017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1549: /* substring_operands: expr ',' expr  */
#line 10021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1550: /* substring_operands: expr FROM expr FOR_SYM expr  */
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1551: /* substring_operands: expr FROM expr  */
#line 10029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40319 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1552: /* function_call_nonkeyword: ADD_MONTHS_SYM '(' expr ',' expr ')'  */
#line 10049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                           INTERVAL_MONTH, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40330 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1553: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1554: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10063 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40351 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1555: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40362 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1556: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10076 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1557: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1558: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1559: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ')'  */
#line 10095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1560: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1561: /* function_call_nonkeyword: DECODE_MARIADB_SYM '(' expr ',' expr ')'  */
#line 10107 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1562: /* function_call_nonkeyword: DECODE_ORACLE_SYM '(' expr ',' decode_when_list_oracle ')'  */
#line 10113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 40433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1563: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1564: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1565: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1566: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1567: /* function_call_nonkeyword: ROWNUM_SYM optional_braces  */
#line 10149 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_rownum(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1568: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1569: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1570: /* function_call_nonkeyword: SUBSTRING '(' substring_operands ')'  */
#line 10168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_substr(thd, (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 40515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1571: /* function_call_nonkeyword: SYSDATE  */
#line 10175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 40524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1572: /* function_call_nonkeyword: SYSDATE '(' ')'  */
#line 10181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 40533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1573: /* function_call_nonkeyword: SYSDATE '(' real_ulong_num ')'  */
#line 10186 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, (uint) (yyvsp[-1].ulong_num)))))
               MYSQL_YYABORT;
          }
#line 40542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1574: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1575: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10197 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1576: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 40571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1577: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10208 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1578: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1579: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1580: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1581: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1582: /* function_call_nonkeyword: COLUMN_CHECK_SYM '(' expr ')'  */
#line 10244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1583: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1584: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type), (yyvsp[-1].Lex_cast_type).charset());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1585: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1586: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1587: /* function_call_conflict: COALESCE '(' expr_list ')'  */
#line 10285 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1588: /* function_call_conflict: COLLATION_SYM '(' expr ')'  */
#line 10291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1589: /* function_call_conflict: DATABASE '(' ')'  */
#line 10297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1590: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1591: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ')'  */
#line 10310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1592: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1593: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10325 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1594: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1595: /* function_call_conflict: MICROSECOND_SYM '(' expr ')'  */
#line 10343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1596: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10349 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1597: /* function_call_conflict: OLD_PASSWORD_SYM '(' expr ')'  */
#line 10355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1598: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 10362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 40805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1599: /* function_call_conflict: QUARTER_SYM '(' expr ')'  */
#line 10370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1600: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1601: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 10382 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 40835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1602: /* function_call_conflict: REVERSE_SYM '(' expr ')'  */
#line 10388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1603: /* function_call_conflict: ROW_COUNT_SYM '(' ')'  */
#line 10394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1604: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 10402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1605: /* function_call_conflict: WEEK_SYM '(' expr ')'  */
#line 10408 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40877 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1606: /* function_call_conflict: WEEK_SYM '(' expr ',' expr ')'  */
#line 10414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1607: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 10420 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1608: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 10426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1609: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 10434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1610: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 10446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1611: /* @137: %empty  */
#line 10465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 40959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1612: /* function_call_generic: IDENT_sys '(' @137 opt_udf_expr_list ')'  */
#line 10484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Type_handler *h;
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Constructors, like POINT(1,1)
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            if ((builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys))))
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else if ((h= Type_handler::handler_by_name(thd, (yyvsp[-4].ident_sys))) &&
                     (item= h->make_constructor_item(thd, (yyvsp[-1].item_list))))
            {
              // Found a constructor with a proper argument count
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 41018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1613: /* function_call_generic: CONTAINS_SYM '(' opt_expr_list ')'  */
#line 10539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1614: /* function_call_generic: OVERLAPS_SYM '(' opt_expr_list ')'  */
#line 10545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1615: /* function_call_generic: WITHIN '(' opt_expr_list ')'  */
#line 10551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1616: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 10557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1617: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 10562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41066 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1618: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 10570 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 41072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1619: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 10572 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= FT_BOOL; }
#line 41078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1620: /* opt_natural_language_mode: %empty  */
#line 10576 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 41084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1621: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 10577 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 41090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1622: /* opt_query_expansion: %empty  */
#line 10581 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 0;         }
#line 41096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1623: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 10582 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 41102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1624: /* opt_udf_expr_list: %empty  */
#line 10586 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= NULL; }
#line 41108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1625: /* opt_udf_expr_list: udf_expr_list  */
#line 10587 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 41114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1626: /* udf_expr_list: udf_expr  */
#line 10592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 41125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1627: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 10599 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 41134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1628: /* udf_expr: remember_name expr remember_end select_alias  */
#line 10607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 41162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1629: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 10634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1630: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1631: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 10646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1632: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 10652 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1633: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 10658 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1634: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 10664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1635: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 10673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1636: /* $@138: %empty  */
#line 10679 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1637: /* $@139: %empty  */
#line 10681 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr--; }
#line 41247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1638: /* sum_expr: COUNT_SYM '(' DISTINCT $@138 expr_list $@139 ')'  */
#line 10683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41257 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1639: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 10689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1640: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1641: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 10706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1642: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1643: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 10718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1644: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 10724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1645: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 10730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41327 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1646: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 10736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1647: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 10742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1648: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1649: /* $@140: %empty  */
#line 10754 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1650: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@140 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 10758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->limit_params.select_limit,
                                        sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 41383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1651: /* $@141: %empty  */
#line 10774 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1652: /* sum_expr: JSON_ARRAYAGG_SYM '(' opt_distinct $@141 expr_list opt_gorder_clause opt_glimit_clause ')'  */
#line 10777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            List<Item> *args= (yyvsp[-3].item_list);
            sel->in_sum_expr--;
            if (args && args->elements > 1)
            {
              /* JSON_ARRAYAGG supports only one parameter */
              my_error(ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT, MYF(0), "JSON_ARRAYAGG");
              MYSQL_YYABORT;
            }
            String* s= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely(s == NULL))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root)
                  Item_func_json_arrayagg(thd, Lex->current_context(),
                                          (yyvsp[-5].num), args,
                                          sel->gorder_list, s, (yyvsp[-1].num),
                                          sel->limit_params.select_limit,
                                          sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 41420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1653: /* $@142: %empty  */
#line 10804 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1654: /* sum_expr: JSON_OBJECTAGG_SYM '(' $@142 expr ',' expr ')'  */
#line 10806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;

            (yyval.item)= new (thd->mem_root) Item_func_json_objectagg(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1655: /* window_func_expr: window_func OVER_SYM window_name  */
#line 10818 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1656: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 10827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41470 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1659: /* window_func: function_call_generic  */
#line 10849 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1660: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 10864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41496 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1661: /* simple_window_func: RANK_SYM '(' ')'  */
#line 10871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1662: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1663: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 10885 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1664: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 10892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1665: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 10899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41546 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1666: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 10906 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1667: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 10913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1668: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 10920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1669: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 10927 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1670: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 10938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1671: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 10945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1672: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 10956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1673: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 10968 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1674: /* $@143: %empty  */
#line 10986 "/home/buildbot/git/sql/sql_yacc.yy"
           { Select->prepare_add_window_spec(thd); }
#line 41649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1675: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@143 order_by_single_element_list ')'  */
#line 10988 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 41657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1676: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 10992 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1677: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1678: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11015 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1679: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 41704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1680: /* window_name: ident  */
#line 11033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 41714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1681: /* $@144: %empty  */
#line 11042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 41723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1682: /* variable: '@' $@144 variable_aux  */
#line 11047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 41731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1683: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_set_user_var *item;
            if (!(yyvsp[-2].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 41750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1684: /* variable_aux: ident_or_text  */
#line 11069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1685: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11082 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 41776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1686: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11087 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 41785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1687: /* opt_distinct: %empty  */
#line 11094 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 41791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1688: /* opt_distinct: DISTINCT  */
#line 11095 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 41797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1689: /* opt_gconcat_separator: %empty  */
#line 11100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 41807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1690: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11105 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 41813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1693: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1694: /* gorder_list: order_ident order_dir  */
#line 11120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1695: /* opt_glimit_clause: %empty  */
#line 11127 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 41837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1696: /* opt_glimit_clause: glimit_clause  */
#line 11128 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num) = 1; }
#line 41843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1697: /* glimit_clause: LIMIT glimit_options  */
#line 11134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1698: /* glimit_options: limit_options  */
#line 11141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 41859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1699: /* $@145: %empty  */
#line 11150 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1700: /* in_sum_expr: opt_all $@145 expr  */
#line 11159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 41881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1701: /* cast_type: BINARY opt_field_length  */
#line 11167 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), &my_charset_bin); }
#line 41887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1702: /* cast_type: CHAR_SYM opt_field_length opt_binary  */
#line 11169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 41897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1703: /* cast_type: VARCHAR field_length opt_binary  */
#line 11175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 41907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1704: /* cast_type: VARCHAR2_ORACLE_SYM field_length opt_binary  */
#line 11181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 41917 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1705: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11187 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), national_charset_info);
          }
#line 41925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1706: /* cast_type: cast_type_numeric  */
#line 11190 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 41931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1707: /* cast_type: cast_type_temporal  */
#line 11191 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 41937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1708: /* cast_type: IDENT_sys  */
#line 11193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 41946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1709: /* cast_type: reserved_keyword_udt  */
#line 11198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].kwd)))
              MYSQL_YYABORT;
          }
#line 41955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1710: /* cast_type: non_reserved_keyword_udt  */
#line 11203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].kwd)))
              MYSQL_YYABORT;
          }
#line 41964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1711: /* cast_type_numeric: INT_SYM  */
#line 11210 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 41970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1712: /* cast_type_numeric: SIGNED_SYM  */
#line 11211 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 41976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1713: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11212 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 41982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1714: /* cast_type_numeric: UNSIGNED  */
#line 11213 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 41988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1715: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11214 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 41994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1716: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11215 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 42000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1717: /* cast_type_numeric: FLOAT_SYM  */
#line 11216 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 42006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1718: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11217 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 42012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1719: /* cast_type_temporal: DATE_SYM  */
#line 11221 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 42018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1720: /* cast_type_temporal: TIME_SYM opt_field_scale  */
#line 11222 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, (yyvsp[0].Lex_length_and_dec)); }
#line 42024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1721: /* cast_type_temporal: DATETIME opt_field_scale  */
#line 11223 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, (yyvsp[0].Lex_length_and_dec)); }
#line 42030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1722: /* cast_type_temporal: INTERVAL_SYM DAY_SECOND_SYM field_scale  */
#line 11225 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, (yyvsp[0].Lex_length_and_dec));
          }
#line 42038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1723: /* opt_expr_list: %empty  */
#line 11231 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item_list)= NULL; }
#line 42044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1724: /* opt_expr_list: expr_list  */
#line 11232 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 42050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1725: /* expr_list: expr  */
#line 11237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 42059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1726: /* expr_list: expr_list ',' expr  */
#line 11242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1727: /* ident_list_arg: ident_list  */
#line 11249 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 42074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1728: /* ident_list_arg: '(' ident_list ')'  */
#line 11250 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 42080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1729: /* ident_list: simple_ident  */
#line 11255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1730: /* ident_list: ident_list ',' simple_ident  */
#line 11262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1731: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1732: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 42124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1734: /* when_list_opt_else: when_list ELSE expr  */
#line 11290 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1735: /* decode_when_list_oracle: expr ',' expr  */
#line 11299 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 42147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1736: /* decode_when_list_oracle: decode_when_list_oracle ',' expr  */
#line 11308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42157 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1737: /* table_ref: table_factor  */
#line 11319 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1738: /* table_ref: join_table  */
#line 11321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1739: /* json_text_literal: TEXT_STRING  */
#line 11333 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1740: /* json_text_literal: NCHAR_STRING  */
#line 11337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= national_charset_info;
          }
#line 42192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1741: /* json_text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 11341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= (yyvsp[-1].charset);
            (yyval.lex_string_with_metadata)= (yyvsp[0].lex_string_with_metadata);
          }
#line 42201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1743: /* json_text_literal_or_num: NUM  */
#line 11350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1744: /* json_text_literal_or_num: LONG_NUM  */
#line 11354 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1745: /* json_text_literal_or_num: DECIMAL_NUM  */
#line 11358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1746: /* json_text_literal_or_num: FLOAT_NUM  */
#line 11362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1747: /* join_table_list: derived_table_list  */
#line 11368 "/home/buildbot/git/sql/sql_yacc.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 42239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1748: /* json_table_columns_clause: COLUMNS '(' json_table_columns_list ')'  */
#line 11373 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1750: /* json_table_columns_list: json_table_columns_list ',' json_table_column  */
#line 11379 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1751: /* $@146: %empty  */
#line 11384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));

            lex->json_table->m_cur_json_table_column=
              new (thd->mem_root) Json_table_column(f,
                                    lex->json_table->get_cur_nested_path());

            if (unlikely(!f ||
                !lex->json_table->m_cur_json_table_column))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].ident_sys));
          }
#line 42274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1752: /* json_table_column: ident $@146 json_table_column_type  */
#line 11403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->json_table->
                           m_cur_json_table_column->m_field->check(thd)))
              MYSQL_YYABORT;
            lex->json_table->m_columns.push_back(
               lex->json_table->m_cur_json_table_column, thd->mem_root);
          }
#line 42287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1753: /* $@147: %empty  */
#line 11412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Json_table_nested_path *np= new (thd->mem_root)
              Json_table_nested_path();
            np->set_path(thd, (yyvsp[0].lex_string_with_metadata));
            lex->json_table->start_nested_path(np);
          }
#line 42299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1754: /* json_table_column: NESTED_SYM PATH_SYM json_text_literal $@147 json_table_columns_clause  */
#line 11420 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->json_table->end_nested_path();
          }
#line 42308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1755: /* json_table_column_type: FOR_SYM ORDINALITY_SYM  */
#line 11428 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_field_type_st type;
            type.set(&type_handler_slong);
            Lex->last_field->set_attributes(thd, type,
                                            COLUMN_DEFINITION_TABLE_FIELD);
            Lex->json_table->m_cur_json_table_column->
              set(Json_table_column::FOR_ORDINALITY);
          }
#line 42321 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1756: /* json_table_column_type: json_table_field_type PATH_SYM json_text_literal json_opt_on_empty_or_error  */
#line 11438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::PATH, (yyvsp[-1].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
            {
              MYSQL_YYABORT;
            }
          }
#line 42336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1757: /* json_table_column_type: json_table_field_type EXISTS PATH_SYM json_text_literal  */
#line 11449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::EXISTS_PATH, (yyvsp[0].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
               MYSQL_YYABORT;
          }
#line 42349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1762: /* json_opt_on_empty_or_error: %empty  */
#line 11468 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42355 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1767: /* json_on_response: ERROR_SYM  */
#line 11477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_ERROR;
          }
#line 42363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1768: /* json_on_response: NULL_SYM  */
#line 11481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_NULL;
          }
#line 42371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1769: /* json_on_response: DEFAULT json_text_literal_or_num  */
#line 11485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_DEFAULT;
            (yyval.json_on_response).m_default= (yyvsp[0].lex_string_with_metadata);
            Lex->json_table->m_cur_json_table_column->m_defaults_cs=
                                    thd->variables.collation_connection;
          }
#line 42382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1770: /* json_on_error_response: json_on_response ON ERROR_SYM  */
#line 11495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_error= (yyvsp[-2].json_on_response);
          }
#line 42390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1771: /* json_on_empty_response: json_on_response ON EMPTY_SYM  */
#line 11502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_empty= (yyvsp[-2].json_on_response);
          }
#line 42398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1772: /* $@148: %empty  */
#line 11509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            push_table_function_arg_context(Lex, thd->mem_root);
            //TODO: introduce IN_TABLE_FUNC_ARGUMENT?
            Select->parsing_place= IN_ON;
          }
#line 42408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1773: /* $@149: %empty  */
#line 11515 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_function_json_table *jt=
              new (thd->mem_root) Table_function_json_table((yyvsp[-1].item));
            if (unlikely(!jt))
              MYSQL_YYABORT;
            /* See comment for class Table_function_json_table: */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->json_table= jt;

            Select->parsing_place= NO_MATTER;
            jt->set_name_resolution_context(Lex->pop_context());
          }
#line 42425 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1774: /* table_function: JSON_TABLE_SYM '(' $@148 expr ',' $@149 json_text_literal json_table_columns_clause ')' opt_table_alias_clause  */
#line 11528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (unlikely((yyvsp[0].lex_str_ptr) == NULL))
            {
              /* Alias is not optional. */
              my_error(ER_JSON_TABLE_ALIAS_REQUIRED, MYF(0));
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->json_table->m_nested_path.set_path(thd, (yyvsp[-3].lex_string_with_metadata))))
              MYSQL_YYABORT;
            if (!((yyval.table_list)= sel->add_table_to_list(thd,
                           new (thd->mem_root) Table_ident(thd, &any_db,
                                                           (yyvsp[0].lex_str_ptr), TRUE),
                           NULL,
                           TL_OPTION_TABLE_FUNCTION,
                           YYPS->m_lock_type,
                           YYPS->m_mdl_type,
                           0,0,0)))
              MYSQL_YYABORT;
            (yyval.table_list)->table_function= Lex->json_table;
            Lex->json_table= 0;
            status_var_increment(thd->status_var.feature_json);
          }
#line 42453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1775: /* esc_table_ref: table_ref  */
#line 11561 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 42459 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1776: /* esc_table_ref: '{' ident table_ref '}'  */
#line 11562 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 42465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1777: /* derived_table_list: esc_table_ref  */
#line 11569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1778: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 11574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1779: /* join_table: table_ref normal_join table_ref  */
#line 11588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 42493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1780: /* $@150: %empty  */
#line 11595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1781: /* join_table: table_ref normal_join table_ref ON $@150 expr  */
#line 11605 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 42518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1782: /* $@151: %empty  */
#line 11613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 42528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1783: /* join_table: table_ref normal_join table_ref USING $@151 '(' using_list ')'  */
#line 11619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 42538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1784: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 11625 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 42550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1785: /* $@152: %empty  */
#line 11636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1786: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@152 expr  */
#line 11646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 42576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1787: /* $@153: %empty  */
#line 11654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1788: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@153 USING '(' using_list ')'  */
#line 11660 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 42596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1789: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 11666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 42609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1790: /* $@154: %empty  */
#line 11678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42623 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1791: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@154 expr  */
#line 11688 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 42636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1792: /* $@155: %empty  */
#line 11697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1793: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@155 USING '(' using_list ')'  */
#line 11703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 42657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1794: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 11710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 42671 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1795: /* inner_join: JOIN_SYM  */
#line 11723 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1796: /* inner_join: INNER_SYM JOIN_SYM  */
#line 11724 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1797: /* inner_join: STRAIGHT_JOIN  */
#line 11725 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 1; }
#line 42689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1798: /* normal_join: inner_join  */
#line 11729 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 42695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1799: /* normal_join: CROSS JOIN_SYM  */
#line 11730 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42701 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1800: /* opt_use_partition: %empty  */
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.string_list)= 0;}
#line 42707 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1802: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 11744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 42717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1803: /* table_factor: table_primary_ident_opt_parens  */
#line 11752 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1804: /* table_factor: table_primary_derived_opt_parens  */
#line 11753 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1805: /* table_factor: join_table_parens  */
#line 11755 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 42738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1806: /* table_factor: table_reference_list_parens  */
#line 11759 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1807: /* table_factor: table_function  */
#line 11760 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1808: /* table_primary_ident_opt_parens: table_primary_ident  */
#line 11764 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1809: /* table_primary_ident_opt_parens: '(' table_primary_ident_opt_parens ')'  */
#line 11765 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1810: /* table_primary_derived_opt_parens: table_primary_derived  */
#line 11769 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42768 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1811: /* table_primary_derived_opt_parens: '(' table_primary_derived_opt_parens ')'  */
#line 11770 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1812: /* table_reference_list_parens: '(' table_reference_list_parens ')'  */
#line 11774 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42780 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1813: /* table_reference_list_parens: '(' nested_table_reference_list ')'  */
#line 11776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 42789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1814: /* nested_table_reference_list: table_ref ',' table_ref  */
#line 11784 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 42801 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1815: /* nested_table_reference_list: nested_table_reference_list ',' table_ref  */
#line 11792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 42810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1816: /* join_table_parens: '(' join_table_parens ')'  */
#line 11799 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1817: /* join_table_parens: '(' join_table ')'  */
#line 11801 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1818: /* table_primary_ident: table_ident opt_use_partition opt_for_system_time_clause opt_table_alias_clause opt_key_definition  */
#line 11815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 42845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1819: /* table_primary_derived: subquery opt_for_system_time_clause table_alias_clause  */
#line 11831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 42854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1820: /* table_primary_derived: subquery opt_for_system_time_clause  */
#line 11838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING alias;
            if ((yyvsp[-1].select_lex)->make_unique_derived_name(thd, &alias) ||
                !((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-1].select_lex)->master_unit(), (yyvsp[0].num), &alias)))
              MYSQL_YYABORT;
          }
#line 42865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1821: /* opt_outer: %empty  */
#line 11848 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 42871 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1822: /* opt_outer: OUTER  */
#line 11849 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 42877 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1823: /* index_hint_clause: %empty  */
#line 11854 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (thd->variables.old_behavior & OLD_MODE_IGNORE_INDEX_ONLY_FOR_JOIN) ?
                INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 42886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1824: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 11858 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 42892 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1825: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 11859 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 42898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1826: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 11860 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 42904 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1827: /* index_hint_type: FORCE_SYM  */
#line 11864 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 42910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1828: /* index_hint_type: IGNORE_SYM  */
#line 11865 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 42916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1829: /* $@156: %empty  */
#line 11870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 42924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1831: /* $@157: %empty  */
#line 11875 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 42932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1836: /* $@158: %empty  */
#line 11888 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->alloc_index_hints(thd); }
#line 42938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1838: /* $@159: %empty  */
#line 11892 "/home/buildbot/git/sql/sql_yacc.yy"
          {  Select->clear_index_hints(); }
#line 42944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1840: /* opt_key_usage_list: %empty  */
#line 11897 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 42950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1841: /* opt_key_usage_list: key_usage_list  */
#line 11898 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 42956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1842: /* key_usage_element: ident  */
#line 11903 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 42962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1843: /* key_usage_element: PRIMARY_SYM  */
#line 11905 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 42968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1846: /* using_list: ident  */
#line 11915 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 42983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1847: /* using_list: using_list ',' ident  */
#line 11926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 42998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1848: /* interval: interval_time_stamp  */
#line 11939 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 43004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1849: /* interval: DAY_HOUR_SYM  */
#line 11940 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 43010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1850: /* interval: DAY_MICROSECOND_SYM  */
#line 11941 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 43016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1851: /* interval: DAY_MINUTE_SYM  */
#line 11942 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 43022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1852: /* interval: DAY_SECOND_SYM  */
#line 11943 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 43028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1853: /* interval: HOUR_MICROSECOND_SYM  */
#line 11944 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 43034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1854: /* interval: HOUR_MINUTE_SYM  */
#line 11945 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 43040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1855: /* interval: HOUR_SECOND_SYM  */
#line 11946 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 43046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1856: /* interval: MINUTE_MICROSECOND_SYM  */
#line 11947 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 43052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1857: /* interval: MINUTE_SECOND_SYM  */
#line 11948 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 43058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1858: /* interval: SECOND_MICROSECOND_SYM  */
#line 11949 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 43064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1859: /* interval: YEAR_MONTH_SYM  */
#line 11950 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 43070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1860: /* interval_time_stamp: DAY_SYM  */
#line 11954 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 43076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1861: /* interval_time_stamp: WEEK_SYM  */
#line 11955 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 43082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1862: /* interval_time_stamp: HOUR_SYM  */
#line 11956 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 43088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1863: /* interval_time_stamp: MINUTE_SYM  */
#line 11957 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 43094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1864: /* interval_time_stamp: MONTH_SYM  */
#line 11958 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 43100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1865: /* interval_time_stamp: QUARTER_SYM  */
#line 11959 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 43106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1866: /* interval_time_stamp: SECOND_SYM  */
#line 11960 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 43112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1867: /* interval_time_stamp: MICROSECOND_SYM  */
#line 11961 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 43118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1868: /* interval_time_stamp: YEAR_SYM  */
#line 11962 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 43124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1869: /* date_time_type: DATE_SYM  */
#line 11966 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 43130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1870: /* date_time_type: TIME_SYM  */
#line 11967 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 43136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1871: /* date_time_type: DATETIME  */
#line 11968 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 43142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1872: /* date_time_type: TIMESTAMP  */
#line 11969 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 43148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1876: /* opt_table_alias_clause: %empty  */
#line 11979 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 43154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1877: /* opt_table_alias_clause: table_alias_clause  */
#line 11980 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 43160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1878: /* table_alias_clause: table_alias ident_table_alias  */
#line 11985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 43170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1881: /* opt_where_clause: %empty  */
#line 11998 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->where= 0; }
#line 43176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1882: /* $@160: %empty  */
#line 12000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 43184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1883: /* opt_where_clause: WHERE $@160 expr  */
#line 12004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 43196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1885: /* $@161: %empty  */
#line 12016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 43204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1886: /* opt_having_clause: HAVING $@161 expr  */
#line 12020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 43216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1889: /* group_list: group_list ',' order_ident order_dir  */
#line 12040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 43225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1890: /* group_list: order_ident order_dir  */
#line 12045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 43234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1891: /* olap_opt: %empty  */
#line 12052 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1892: /* olap_opt: WITH_CUBE_SYM  */
#line 12054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 43261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1893: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12071 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 43280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1894: /* opt_window_clause: %empty  */
#line 12093 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43286 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1895: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12096 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1898: /* window_def: window_name AS window_spec  */
#line 12106 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 43305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1899: /* $@162: %empty  */
#line 12118 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->prepare_add_window_spec(thd); }
#line 43311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1900: /* window_spec: '(' $@162 opt_window_ref opt_window_partition_clause opt_window_order_clause opt_window_frame_clause ')'  */
#line 12122 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 43317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1901: /* opt_window_ref: %empty  */
#line 12126 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1902: /* opt_window_ref: ident  */
#line 12128 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 43333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1903: /* opt_window_partition_clause: %empty  */
#line 12136 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 43339 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1905: /* opt_window_order_clause: %empty  */
#line 12141 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 43345 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1906: /* opt_window_order_clause: ORDER_SYM BY order_list  */
#line 12142 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Select->order_list= *((yyvsp[0].select_order)); }
#line 43351 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1907: /* opt_window_frame_clause: %empty  */
#line 12146 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1908: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 43372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1909: /* window_frame_units: ROWS_SYM  */
#line 12161 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 43378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1910: /* window_frame_units: RANGE_SYM  */
#line 12162 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 43384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1911: /* window_frame_extent: window_frame_start  */
#line 12167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 43398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1912: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12177 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 43408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1913: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12186 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1914: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12193 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1915: /* window_frame_start: literal PRECEDING_SYM  */
#line 12200 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43441 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1916: /* window_frame_bound: window_frame_start  */
#line 12209 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 43447 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1917: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1918: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1919: /* opt_window_frame_exclusion: %empty  */
#line 12227 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1920: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12229 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 43481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1921: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12231 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 43487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1922: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12233 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 43493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1923: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12235 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43499 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1924: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12237 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1928: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 43515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1929: /* opt_order_clause: %empty  */
#line 12268 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= NULL; }
#line 43521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1930: /* opt_order_clause: order_clause  */
#line 12270 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= (yyvsp[0].select_order); }
#line 43527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1931: /* $@163: %empty  */
#line 12275 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= "ORDER clause";
          }
#line 43535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1932: /* order_clause: ORDER_SYM BY $@163 order_list  */
#line 12279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 43543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1933: /* order_list: order_list ',' order_ident order_dir  */
#line 12286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 43553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1934: /* order_list: order_ident order_dir  */
#line 12292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 43563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1935: /* order_dir: %empty  */
#line 12300 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 1; }
#line 43569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1936: /* order_dir: ASC  */
#line 12301 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 1; }
#line 43575 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1937: /* order_dir: DESC  */
#line 12302 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 0; }
#line 43581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1938: /* opt_limit_clause: %empty  */
#line 12308 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit).clear(); }
#line 43587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1939: /* opt_limit_clause: limit_clause  */
#line 12310 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 43593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1940: /* limit_clause: LIMIT limit_options  */
#line 12315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1941: /* limit_clause: LIMIT limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12323 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1942: /* limit_clause: LIMIT ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).clear();
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1943: /* limit_clause: fetch_first_clause  */
#line 12333 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit ||
                !(yyval.select_limit).select_limit->basic_const_item() ||
                 (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1944: /* fetch_first_clause: FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1945: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= (yyvsp[-5].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1946: /* fetch_first_clause: FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12365 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1947: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[-6].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1948: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows  */
#line 12380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= (yyvsp[-1].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1953: /* only_or_with_ties: ONLY_SYM  */
#line 12399 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 0; }
#line 43701 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1954: /* only_or_with_ties: WITH TIES_SYM  */
#line 12400 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 43707 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1955: /* opt_global_limit_clause: opt_limit_clause  */
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 43715 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1956: /* limit_options: limit_option  */
#line 12413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= NULL;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1957: /* limit_options: limit_option ',' limit_option  */
#line 12420 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43737 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1958: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1959: /* limit_option: ident_cli  */
#line 12437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1960: /* limit_option: ident_cli '.' ident_cli  */
#line 12442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1961: /* limit_option: param_marker  */
#line 12447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 43774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1962: /* limit_option: ULONGLONG_NUM  */
#line 12451 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1963: /* limit_option: LONG_NUM  */
#line 12457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1964: /* limit_option: NUM  */
#line 12463 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1965: /* limit_rows_option: limit_option  */
#line 12472 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 43812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1966: /* delete_limit_clause: %empty  */
#line 12479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->limit_params.select_limit= 0;
          }
#line 43821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1967: /* delete_limit_clause: LIMIT limit_option  */
#line 12484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->limit_params.select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->limit_params.explicit_limit= 1;
          }
#line 43832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1968: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 12490 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 43838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1969: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 12491 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 43844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1970: /* order_limit_lock: order_or_limit  */
#line 12496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 43853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1971: /* order_limit_lock: order_or_limit select_lock_type  */
#line 12501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 43862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1972: /* order_limit_lock: select_lock_type  */
#line 12506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.clear();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 43875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1973: /* opt_order_limit_lock: %empty  */
#line 12518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 43884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1974: /* opt_order_limit_lock: order_limit_lock  */
#line 12522 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 43890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1977: /* opt_procedure_or_into: %empty  */
#line 12535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock).empty();
          }
#line 43898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1978: /* opt_procedure_or_into: procedure_clause opt_select_lock_type  */
#line 12539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 43906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1979: /* opt_procedure_or_into: into opt_select_lock_type  */
#line 12543 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 43915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1980: /* order_or_limit: order_clause opt_limit_clause  */
#line 12552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 43927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1981: /* order_or_limit: limit_clause  */
#line 12560 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 43939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1984: /* int_num: opt_plus NUM  */
#line 12576 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1985: /* int_num: '-' NUM  */
#line 12577 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1986: /* ulong_num: opt_plus NUM  */
#line 12581 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1987: /* ulong_num: HEX_NUM  */
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= strtoul((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 43963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1988: /* ulong_num: opt_plus LONG_NUM  */
#line 12583 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43969 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1989: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 12584 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1990: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 12585 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1991: /* ulong_num: opt_plus FLOAT_NUM  */
#line 12586 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43987 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1992: /* real_ulong_num: NUM  */
#line 12590 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 43993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1993: /* real_ulong_num: HEX_NUM  */
#line 12591 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 43999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1994: /* real_ulong_num: LONG_NUM  */
#line 12592 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1995: /* real_ulong_num: ULONGLONG_NUM  */
#line 12593 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1996: /* real_ulong_num: dec_num_error  */
#line 12594 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 44017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1997: /* longlong_num: opt_plus NUM  */
#line 12598 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1998: /* longlong_num: LONG_NUM  */
#line 12599 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1999: /* longlong_num: '-' NUM  */
#line 12600 "/home/buildbot/git/sql/sql_yacc.yy"
                          { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2000: /* longlong_num: '-' LONG_NUM  */
#line 12601 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2001: /* ulonglong_num: opt_plus NUM  */
#line 12605 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2002: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 12606 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44053 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2003: /* ulonglong_num: opt_plus LONG_NUM  */
#line 12607 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2004: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 12608 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2005: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 12609 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2006: /* real_ulonglong_num: NUM  */
#line 12613 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2007: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 12614 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2008: /* real_ulonglong_num: HEX_NUM  */
#line 12615 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2009: /* real_ulonglong_num: LONG_NUM  */
#line 12616 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2010: /* real_ulonglong_num: dec_num_error  */
#line 12617 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 44101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2011: /* dec_num_error: dec_num  */
#line 12622 "/home/buildbot/git/sql/sql_yacc.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 44107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2014: /* choice: ulong_num  */
#line 12631 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 44113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2015: /* choice: DEFAULT  */
#line 12632 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 44119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2016: /* bool: ulong_num  */
#line 12636 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 44125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2017: /* bool: TRUE_SYM  */
#line 12637 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1; }
#line 44131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2018: /* bool: FALSE_SYM  */
#line 12638 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 44137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2019: /* $@164: %empty  */
#line 12643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           (yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 44165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2020: /* procedure_clause: PROCEDURE_SYM ident $@164 '(' procedure_list ')'  */
#line 12667 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 44174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2021: /* procedure_list: %empty  */
#line 12674 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2022: /* procedure_list: procedure_list2  */
#line 12675 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 44186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2025: /* procedure_item: remember_name expr remember_end  */
#line 12685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2026: /* $@165: %empty  */
#line 12694 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 44209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2027: /* select_var_list_init: $@165 select_var_list  */
#line 12702 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2029: /* select_var_list: select_var_ident  */
#line 12707 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 44221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2030: /* select_var_ident: select_outvar  */
#line 12711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 44242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2031: /* select_outvar: '@' ident_or_text  */
#line 12731 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 44256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2032: /* select_outvar: ident_or_text  */
#line 12741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 44265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2033: /* select_outvar: ident '.' ident  */
#line 12746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 44274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2034: /* into: INTO into_destination  */
#line 12754 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2035: /* $@166: %empty  */
#line 12759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 44296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2036: /* $@167: %empty  */
#line 12771 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2038: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 12774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 44321 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2039: /* into_destination: select_var_list_init  */
#line 12789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            status_var_increment(thd->status_var.feature_into_variable);
          }
#line 44330 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2040: /* $@168: %empty  */
#line 12801 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 44342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2041: /* do: DO_SYM $@168 expr_list  */
#line 12809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 44353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2042: /* $@169: %empty  */
#line 12823 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2043: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@169 table_list opt_lock_wait_timeout opt_restrict  */
#line 12830 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2044: /* $@170: %empty  */
#line 12832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 44379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2045: /* drop: DROP INDEX_SYM $@170 opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 12837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 44401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2046: /* drop: DROP DATABASE opt_if_exists ident  */
#line 12855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 44411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2047: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 12861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 44419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2048: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 12865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 44427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2049: /* $@171: %empty  */
#line 12869 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2050: /* drop: DROP VIEW_SYM opt_if_exists $@171 table_list opt_restrict  */
#line 12876 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2051: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 12878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 44453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2052: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 12883 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 44463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2053: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 12889 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 44472 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2054: /* $@172: %empty  */
#line 12895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2055: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@172 table_list  */
#line 12903 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2059: /* table_name: table_ident  */
#line 12914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 44503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2060: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 12926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 44517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2063: /* table_alias_ref: table_ident_opt_wild  */
#line 12944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 44531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2064: /* opt_if_exists_table_element: %empty  */
#line 12957 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 44540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2065: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 12962 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 44549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2066: /* opt_if_exists: %empty  */
#line 12970 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 44557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2067: /* opt_if_exists: IF_SYM EXISTS  */
#line 12974 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 44565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2068: /* opt_temporary: %empty  */
#line 12980 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 44571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2069: /* opt_temporary: TEMPORARY  */
#line 12981 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 44577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2070: /* $@173: %empty  */
#line 12989 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_INSERT;
            Lex->duplicates= DUP_ERROR;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 44588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2071: /* $@174: %empty  */
#line 12996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-3].lock_type), true, false);
          }
#line 44596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2072: /* insert: INSERT $@173 insert_start insert_lock_option opt_ignore opt_into insert_table $@174 insert_field_spec opt_insert_update opt_returning stmt_end  */
#line 13001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 44605 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2073: /* $@175: %empty  */
#line 13009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REPLACE;
            Lex->duplicates= DUP_REPLACE;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 44616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2074: /* $@176: %empty  */
#line 13016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true, false);
          }
#line 44624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2075: /* replace: REPLACE $@175 insert_start replace_lock_option opt_into insert_table $@176 insert_field_spec opt_returning stmt_end  */
#line 13021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 44633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2076: /* insert_start: %empty  */
#line 13027 "/home/buildbot/git/sql/sql_yacc.yy"
              {
                if (Lex->main_select_push())
                  MYSQL_YYABORT;
                Lex->init_select();
                Lex->inc_select_stack_outer_barrier();
                Lex->current_select->parsing_place= BEFORE_OPT_LIST;
              }
#line 44645 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2077: /* stmt_end: %empty  */
#line 13036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
              Lex->pop_select(); //main select
              if (Lex->check_main_unit_semantics())
                MYSQL_YYABORT;
            }
#line 44655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2078: /* insert_lock_option: %empty  */
#line 13045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2080: /* insert_lock_option: HIGH_PRIORITY  */
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 44674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2081: /* replace_lock_option: %empty  */
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2083: /* insert_replace_option: LOW_PRIORITY  */
#line 13063 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2084: /* insert_replace_option: DELAYED_SYM  */
#line 13065 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 44696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2087: /* $@177: %empty  */
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 44704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2088: /* insert_table: $@177 table_name_with_opt_use_partition  */
#line 13079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 44715 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2089: /* insert_field_spec: insert_values  */
#line 13088 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 44721 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2090: /* insert_field_spec: insert_field_list insert_values  */
#line 13089 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 44727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2091: /* $@178: %empty  */
#line 13091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 44740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2093: /* insert_field_list: LEFT_PAREN_ALT opt_fields ')'  */
#line 13104 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 44748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2096: /* fields: fields ',' insert_ident  */
#line 13116 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2097: /* fields: insert_ident  */
#line 13117 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2098: /* insert_values: create_select_query_expression  */
#line 13123 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 44766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2103: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2104: /* equal: '='  */
#line 13147 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 44783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2105: /* equal: SET_VAR  */
#line 13148 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 44789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2106: /* opt_equal: %empty  */
#line 13152 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2107: /* opt_equal: equal  */
#line 13153 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 44801 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2108: /* opt_with: opt_equal  */
#line 13157 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 44807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2109: /* opt_with: WITH  */
#line 13158 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 44813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2110: /* opt_by: opt_equal  */
#line 13162 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 44819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2111: /* opt_by: BY  */
#line 13163 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 44825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2112: /* $@179: %empty  */
#line 13168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 44834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2113: /* no_braces: '(' $@179 opt_values ')'  */
#line 13173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2114: /* $@180: %empty  */
#line 13184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 44855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2115: /* no_braces_with_names: '(' $@180 opt_values_with_names ')'  */
#line 13189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2116: /* opt_values: %empty  */
#line 13199 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2118: /* opt_values_with_names: %empty  */
#line 13204 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2120: /* values: values ',' expr_or_ignore_or_default  */
#line 13210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44888 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2121: /* values: expr_or_ignore_or_default  */
#line 13215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2122: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 44909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2123: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13231 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2124: /* expr_or_ignore: expr  */
#line 13241 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 44927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2125: /* expr_or_ignore: IGNORE_SYM  */
#line 13243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2126: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13251 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 44943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2127: /* expr_or_ignore_or_default: DEFAULT  */
#line 13253 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2129: /* $@181: %empty  */
#line 13262 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 44959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2130: /* $@182: %empty  */
#line 13264 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 44967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2131: /* opt_insert_update: ON DUPLICATE_SYM $@181 KEY_SYM UPDATE_SYM $@182 insert_update_list  */
#line 13268 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 44975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2132: /* update_table_list: table_ident opt_use_partition for_portion_of_time_clause opt_table_alias_clause opt_key_definition  */
#line 13276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 44990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2133: /* update_table_list: join_table_list  */
#line 13286 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2134: /* $@183: %empty  */
#line 13293 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 45009 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2135: /* $@184: %empty  */
#line 13303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1, false);
          }
#line 45032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2136: /* $@185: %empty  */
#line 13322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
          }
#line 45041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2137: /* update: UPDATE_SYM $@183 opt_low_priority opt_ignore update_table_list SET update_list $@184 opt_where_clause opt_order_clause delete_limit_clause $@185 stmt_end  */
#line 13325 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2140: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 45058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2141: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 45067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2144: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2145: /* opt_low_priority: %empty  */
#line 13364 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 45084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2146: /* opt_low_priority: LOW_PRIORITY  */
#line 13365 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 45090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2147: /* $@186: %empty  */
#line 13372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 45106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2148: /* delete: DELETE_SYM $@186 delete_part2  */
#line 13384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 45115 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2149: /* opt_delete_system_time: %empty  */
#line 13392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 45123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2150: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 45131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2151: /* delete_part2: opt_delete_options single_multi  */
#line 13402 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 45137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2152: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time  */
#line 13404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2153: /* delete_single_table: FROM table_ident opt_use_partition  */
#line 13414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2154: /* delete_single_table_for_period: delete_single_table opt_for_portion_of_time_clause  */
#line 13429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].num))
              Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 45173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2155: /* single_multi: delete_single_table_for_period opt_where_clause opt_order_clause delete_limit_clause opt_returning  */
#line 13441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2156: /* $@187: %empty  */
#line 13449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2157: /* $@188: %empty  */
#line 13455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 45204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2158: /* single_multi: table_wild_list $@187 FROM join_table_list opt_where_clause $@188 stmt_end  */
#line 13458 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2159: /* $@189: %empty  */
#line 13460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2160: /* $@190: %empty  */
#line 13466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 45229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2161: /* single_multi: FROM table_alias_ref_list $@189 USING join_table_list opt_where_clause $@190 stmt_end  */
#line 13469 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2162: /* opt_returning: %empty  */
#line 13474 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
          }
#line 45243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2163: /* $@191: %empty  */
#line 13478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
            /*
              When parsing_place is IN_RETURNING, we push select items to
              item_list of builtin_select instead of current_select.
              But set parsing_place of current_select to true.

              Because parsing_place for builtin_select will be IN_RETURNING,
              regardless there is SELECT in RETURNING. Example, if
              there is RETURNING (SELECT...), then when we parse
              SELECT inside RETURNING, builtin_select->parsing_place
              will still be true. So the select items of SELECT inside
              RETURNING will be added to item_list of builtin_select which
              is incorrect. We want to prevent this from happening.
              Since for every new select, a new SELECT_LEX
              object is created and pushed to select stack, current_select
              will point to SELECT inside RETURNING, and also has
              parsing_place not set to IN_RETURNING by default.
              So items are correctly added to item_list of SELECT inside
              RETURNING instead of builtin_select.
            */

            thd->lex->current_select->parsing_place= IN_RETURNING;
            thd->lex->push_context(&thd->lex->returning()->context);
          }
#line 45273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2164: /* opt_returning: RETURNING_SYM $@191 select_item_list  */
#line 13504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->pop_context();
            thd->lex->current_select->parsing_place= NO_MATTER;
          }
#line 45282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2167: /* table_wild_one: ident opt_wild  */
#line 13517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 45301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2168: /* table_wild_one: ident '.' ident opt_wild  */
#line 13532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 45320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2169: /* opt_wild: %empty  */
#line 13549 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2170: /* opt_wild: '.' '*'  */
#line 13550 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 45332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2171: /* opt_delete_options: %empty  */
#line 13554 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2172: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 13555 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 45344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2173: /* opt_delete_option: QUICK  */
#line 13559 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->options|= OPTION_QUICK; }
#line 45350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2174: /* opt_delete_option: LOW_PRIORITY  */
#line 13560 "/home/buildbot/git/sql/sql_yacc.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 45356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2175: /* opt_delete_option: IGNORE_SYM  */
#line 13561 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->ignore= 1; }
#line 45362 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2176: /* $@192: %empty  */
#line 13566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 45377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2177: /* $@193: %empty  */
#line 13577 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 45389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2178: /* truncate: TRUNCATE_SYM $@192 opt_table_sym table_name opt_lock_wait_timeout $@193 opt_truncate_table_storage_clause  */
#line 13584 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { }
#line 45395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2185: /* profile_def: CPU_SYM  */
#line 13602 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 45403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2186: /* profile_def: MEMORY_SYM  */
#line 13606 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 45411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2187: /* profile_def: BLOCK_SYM IO_SYM  */
#line 13610 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 45419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2188: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 13614 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 45427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2189: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 13618 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 45435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2190: /* profile_def: IPC_SYM  */
#line 13622 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 45443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2191: /* profile_def: SWAPS_SYM  */
#line 13626 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 45451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2192: /* profile_def: SOURCE_SYM  */
#line 13630 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 45459 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2193: /* profile_def: ALL  */
#line 13634 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 45467 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2194: /* opt_profile_args: %empty  */
#line 13641 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 45475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2195: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 13645 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 45483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2196: /* $@194: %empty  */
#line 13654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 45498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2197: /* show: SHOW $@194 show_param  */
#line 13665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 45507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2198: /* show_param: DATABASES wild_and_where  */
#line 13673 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 45518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2199: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 13680 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 45530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2200: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 13688 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 45542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2201: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 13696 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 45554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2202: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 13704 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 45566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2203: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 13712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 45578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2204: /* show_param: PLUGINS_SYM  */
#line 13720 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2205: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 13727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2206: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 13734 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2207: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 13740 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 45616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2208: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 13742 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= NULL; }
#line 45622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2209: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 13744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 45635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2210: /* show_param: master_or_binary LOGS_SYM  */
#line 13753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 45643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2211: /* show_param: SLAVE HOSTS_SYM  */
#line 13757 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 45651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2212: /* $@195: %empty  */
#line 13761 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 45660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2214: /* $@196: %empty  */
#line 13767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 45669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2215: /* show_param: RELAYLOG_SYM optional_connection_name EVENTS_SYM binlog_in binlog_from $@196 opt_global_limit_clause optional_for_channel  */
#line 13772 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 45675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2216: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 13774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 45688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2217: /* show_param: opt_storage ENGINES_SYM  */
#line 13783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 45699 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2218: /* show_param: AUTHORS_SYM  */
#line 13790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 45708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2219: /* show_param: CONTRIBUTORS_SYM  */
#line 13795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 45717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2220: /* show_param: PRIVILEGES  */
#line 13800 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 45726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2221: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 13805 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 45735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2222: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 13810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 45744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2223: /* show_param: WARNINGS opt_global_limit_clause  */
#line 13815 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 45750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2224: /* show_param: ERRORS opt_global_limit_clause  */
#line 13817 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 45756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2225: /* show_param: PROFILES_SYM  */
#line 13819 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 45762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2226: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_global_limit_clause  */
#line 13821 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 45773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2227: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 13828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 45785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2228: /* show_param: opt_full PROCESSLIST_SYM  */
#line 13836 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 45791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2229: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 13838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 45803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2230: /* show_param: charset wild_and_where  */
#line 13846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 45814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2231: /* show_param: COLLATION_SYM wild_and_where  */
#line 13853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 45825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2232: /* show_param: GRANTS  */
#line 13860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 45837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2233: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 13868 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 45847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2234: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 13874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 45856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2235: /* show_param: CREATE TABLE_SYM table_ident  */
#line 13879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 45868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2236: /* show_param: CREATE VIEW_SYM table_ident  */
#line 13887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 45880 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2237: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 13895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 45892 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2238: /* show_param: BINLOG_SYM STATUS_SYM  */
#line 13903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 45900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2239: /* show_param: MASTER_SYM STATUS_SYM  */
#line 13907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 45908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2240: /* show_param: ALL SLAVES STATUS_SYM  */
#line 13911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status(true)))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 45919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2241: /* show_param: SLAVE optional_connection_name STATUS_SYM optional_for_channel  */
#line 13918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status()))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 45930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2242: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 13925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 45941 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2243: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 13932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 45952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2244: /* show_param: CREATE PACKAGE_MARIADB_SYM sp_name  */
#line 13939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 45962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2245: /* show_param: CREATE PACKAGE_ORACLE_SYM sp_name  */
#line 13945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 45972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2246: /* show_param: CREATE PACKAGE_MARIADB_SYM BODY_MARIADB_SYM sp_name  */
#line 13951 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 45982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2247: /* show_param: CREATE PACKAGE_ORACLE_SYM BODY_ORACLE_SYM sp_name  */
#line 13957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 45992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2248: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 13963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 46002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2249: /* show_param: CREATE USER_SYM  */
#line 13969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 46014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2250: /* show_param: CREATE USER_SYM user  */
#line 13977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 46023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2251: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 13982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2252: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 13989 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2253: /* show_param: PACKAGE_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 13996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2254: /* show_param: PACKAGE_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2255: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2256: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2257: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2258: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2259: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM CODE_SYM sp_name  */
#line 14034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2260: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM CODE_SYM sp_name  */
#line 14039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2261: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 46134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2262: /* show_param: describe_command opt_format_json FOR_SYM expr  */
#line 14053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2263: /* show_param: ANALYZE_SYM opt_format_json FOR_SYM expr  */
#line 14061 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_ANALYZE;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_ANALYZE_JSON : SCH_ANALYZE_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46158 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2264: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14069 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 46181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2265: /* show_engine_param: STATUS_SYM  */
#line 14091 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 46187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2266: /* show_engine_param: MUTEX_SYM  */
#line 14093 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 46193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2267: /* show_engine_param: LOGS_SYM  */
#line 14095 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 46199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2272: /* opt_db: %empty  */
#line 14109 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 46205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2273: /* opt_db: from_or_in ident  */
#line 14110 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 46211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2274: /* opt_full: %empty  */
#line 14114 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=0; }
#line 46217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2275: /* opt_full: FULL  */
#line 14115 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=1; }
#line 46223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2278: /* binlog_in: %empty  */
#line 14124 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 46229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2279: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14125 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 46235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2280: /* binlog_from: %empty  */
#line 14129 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 46241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2281: /* binlog_from: FROM ulonglong_num  */
#line 14130 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 46247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2282: /* wild_and_where: %empty  */
#line 14134 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.simple_string)= 0; }
#line 46253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2283: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).length,
                                                   system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 46266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2284: /* wild_and_where: WHERE remember_tok_start expr  */
#line 14145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 46277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2285: /* $@197: %empty  */
#line 14156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 46294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2286: /* describe: describe_command table_ident $@197 opt_describe_column  */
#line 14169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 46303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2287: /* $@198: %empty  */
#line 14174 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 46309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2288: /* describe: describe_command opt_extended_describe $@198 explainable_command  */
#line 14176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 46318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2297: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 46326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2298: /* opt_extended_describe: EXTENDED_SYM  */
#line 14204 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 46332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2299: /* opt_extended_describe: EXTENDED_SYM ALL  */
#line 14206 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 46338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2300: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14207 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 46344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2301: /* opt_extended_describe: opt_format_json  */
#line 14208 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 46350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2302: /* opt_format_json: %empty  */
#line 14212 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2303: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                                "EXPLAIN/ANALYZE", (yyvsp[0].lex_str).str));
          }
#line 46370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2304: /* opt_describe_column: %empty  */
#line 14226 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2305: /* opt_describe_column: text_string  */
#line 14227 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 46382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2306: /* opt_describe_column: ident  */
#line 14229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 46394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2307: /* explain_for_connection: describe_command opt_format_json FOR_SYM CONNECTION_SYM expr  */
#line 14245 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2308: /* $@199: %empty  */
#line 14268 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 46427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2309: /* flush: FLUSH_SYM opt_no_write_to_binlog $@199 flush_options  */
#line 14274 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 46433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2310: /* $@200: %empty  */
#line 14279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 46447 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2311: /* flush_options: table_or_tables $@200 opt_table_list opt_flush_lock  */
#line 14289 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2312: /* flush_options: flush_options_list  */
#line 14291 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46459 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2313: /* opt_flush_lock: %empty  */
#line 14295 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2314: /* opt_flush_lock: flush_lock  */
#line 14297 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 46479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2315: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14310 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 46485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2316: /* $@201: %empty  */
#line 14312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 46499 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2317: /* flush_lock: FOR_SYM $@201 EXPORT_SYM  */
#line 14320 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 46505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2319: /* flush_options_list: flush_option  */
#line 14326 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46511 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2320: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14331 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 46517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2321: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14333 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 46523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2322: /* flush_option: GENERAL LOGS_SYM  */
#line 14335 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 46529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2323: /* flush_option: SLOW LOGS_SYM  */
#line 14337 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 46535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2324: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14339 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 46541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2325: /* flush_option: RELAY LOGS_SYM optional_connection_name optional_for_channel  */
#line 14341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 46553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2326: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14349 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 46559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2327: /* flush_option: HOSTS_SYM  */
#line 14351 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 46565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2328: /* flush_option: PRIVILEGES  */
#line 14353 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 46571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2329: /* flush_option: LOGS_SYM  */
#line 14355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 46580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2330: /* flush_option: STATUS_SYM  */
#line 14360 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 46586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2331: /* flush_option: SLAVE optional_connection_name  */
#line 14362 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 46598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2332: /* flush_option: MASTER_SYM  */
#line 14370 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 46604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2333: /* flush_option: DES_KEY_FILE  */
#line 14372 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 46610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2334: /* flush_option: RESOURCES  */
#line 14374 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 46616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2335: /* flush_option: SSL_SYM  */
#line 14376 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SSL;}
#line 46622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2336: /* flush_option: THREADS_SYM  */
#line 14378 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_THREADS;}
#line 46628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2337: /* flush_option: IDENT_sys remember_tok_start  */
#line 14380 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 46646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2338: /* opt_table_list: %empty  */
#line 14396 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 46652 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2339: /* opt_table_list: table_list  */
#line 14397 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 46658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2340: /* backup: BACKUP_SYM backup_statements  */
#line 14401 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 46664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2341: /* backup_statements: STAGE_SYM ident  */
#line 14406 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 46680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2342: /* $@202: %empty  */
#line 14418 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP LOCK"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 46691 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2343: /* backup_statements: LOCK_SYM $@202 table_ident  */
#line 14425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 46703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2344: /* backup_statements: UNLOCK_SYM  */
#line 14433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP UNLOCK"));
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 46714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2345: /* opt_delete_gtid_domain: %empty  */
#line 14442 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46720 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2346: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 14444 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2350: /* delete_domain_id: ulonglong_num  */
#line 14454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 46743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2351: /* optional_flush_tables_arguments: %empty  */
#line 14469 "/home/buildbot/git/sql/sql_yacc.yy"
                             {(yyval.num)= 0;}
#line 46749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2352: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 14470 "/home/buildbot/git/sql/sql_yacc.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 46755 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2353: /* $@203: %empty  */
#line 14475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 46764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2354: /* reset: RESET_SYM $@203 reset_options  */
#line 14480 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2357: /* $@204: %empty  */
#line 14489 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 46776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2358: /* reset_option: SLAVE $@204 optional_connection_name slave_reset_options optional_for_channel  */
#line 14492 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 46782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2359: /* $@205: %empty  */
#line 14494 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 46791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2361: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 14499 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 46797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2362: /* slave_reset_options: %empty  */
#line 14503 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= false; }
#line 46803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2363: /* slave_reset_options: ALL  */
#line 14504 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= true; }
#line 46809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2364: /* master_reset_options: %empty  */
#line 14508 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2365: /* master_reset_options: TO_SYM ulong_num  */
#line 14510 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 46823 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2366: /* purge: PURGE master_or_binary LOGS_SYM TO_SYM TEXT_STRING_sys  */
#line 14517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 46831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2367: /* $@206: %empty  */
#line 14521 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 46837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2368: /* purge: PURGE master_or_binary LOGS_SYM BEFORE_SYM $@206 expr  */
#line 14523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 46847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2369: /* $@207: %empty  */
#line 14535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 46859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2370: /* kill: KILL_SYM $@207 kill_type kill_option  */
#line 14543 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 46867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2371: /* kill_type: %empty  */
#line 14549 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 46873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2372: /* kill_type: HARD_SYM  */
#line 14550 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 46879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2373: /* kill_type: SOFT_SYM  */
#line 14551 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 46885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2374: /* kill_option: opt_connection kill_expr  */
#line 14555 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 46891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2375: /* kill_option: QUERY_SYM kill_expr  */
#line 14556 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 46897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2376: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 14558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 46907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2377: /* opt_connection: %empty  */
#line 14566 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 46913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2378: /* opt_connection: CONNECTION_SYM  */
#line 14567 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 46919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2379: /* kill_expr: expr  */
#line 14572 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 46927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2380: /* kill_expr: USER_SYM user  */
#line 14576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 46936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2381: /* $@208: %empty  */
#line 14583 "/home/buildbot/git/sql/sql_yacc.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 46942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2382: /* shutdown: SHUTDOWN $@208 shutdown_option  */
#line 14584 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 46948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2383: /* shutdown_option: %empty  */
#line 14588 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->is_shutdown_wait_for_slaves= false; }
#line 46954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2384: /* shutdown_option: WAIT_SYM FOR_SYM ALL SLAVES  */
#line 14590 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 46962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2385: /* use: USE_SYM ident  */
#line 14599 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 46972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2386: /* $@209: %empty  */
#line 14610 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 46990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2387: /* $@210: %empty  */
#line 14624 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 47005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2388: /* $@211: %empty  */
#line 14635 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 47022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2389: /* $@212: %empty  */
#line 14648 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 47028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2390: /* load: LOAD data_or_xml $@209 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@210 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@211 opt_load_data_charset $@212 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec stmt_end  */
#line 14653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
          }
#line 47036 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2391: /* data_or_xml: DATA_SYM  */
#line 14659 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 47042 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2392: /* data_or_xml: XML_SYM  */
#line 14660 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 47048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2393: /* opt_local: %empty  */
#line 14664 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=0;}
#line 47054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2394: /* opt_local: LOCAL_SYM  */
#line 14665 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1;}
#line 47060 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2395: /* load_data_lock: %empty  */
#line 14669 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 47066 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2396: /* load_data_lock: CONCURRENT  */
#line 14671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 47078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2397: /* load_data_lock: LOW_PRIORITY  */
#line 14678 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 47084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2398: /* opt_duplicate: %empty  */
#line 14682 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 47090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2399: /* opt_duplicate: REPLACE  */
#line 14683 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 47096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2400: /* opt_duplicate: IGNORE_SYM  */
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1; }
#line 47102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2405: /* field_term: TERMINATED BY text_string  */
#line 14699 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 47111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2406: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 14704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 47122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2407: /* field_term: ENCLOSED BY text_string  */
#line 14711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 47131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2408: /* field_term: ESCAPED BY text_string  */
#line 14716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 47140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2413: /* line_term: TERMINATED BY text_string  */
#line 14734 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 47149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2414: /* line_term: STARTING BY text_string  */
#line 14739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 47158 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2415: /* opt_xml_rows_identified_by: %empty  */
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 47164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2416: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 14748 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 47170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2418: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 14754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 47179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2419: /* lines_or_rows: LINES  */
#line 14761 "/home/buildbot/git/sql/sql_yacc.yy"
                { }
#line 47185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2420: /* lines_or_rows: ROWS_SYM  */
#line 14762 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 47191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2421: /* opt_field_or_var_spec: %empty  */
#line 14766 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2422: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 14767 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 47203 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2423: /* opt_field_or_var_spec: '(' ')'  */
#line 14768 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 47209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2424: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 14773 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 47215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2425: /* fields_or_vars: field_or_var  */
#line 14775 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 47221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2426: /* field_or_var: simple_ident_nospvar  */
#line 14779 "/home/buildbot/git/sql/sql_yacc.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 47227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2427: /* field_or_var: '@' ident_or_text  */
#line 14781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2428: /* opt_load_data_set_spec: %empty  */
#line 14795 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2429: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 14796 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 47255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2432: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 14806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 47267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2433: /* text_literal: TEXT_STRING  */
#line 14819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 47276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2434: /* text_literal: NCHAR_STRING  */
#line 14824 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 47285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2435: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 14829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 47294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2436: /* text_literal: text_literal TEXT_STRING_literal  */
#line 14834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 47303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2437: /* text_string: TEXT_STRING_literal  */
#line 14842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                           (yyvsp[0].lex_str).length,
                                           thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 47315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2438: /* text_string: hex_or_bin_String  */
#line 14849 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 47321 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2439: /* hex_or_bin_String: HEX_NUM  */
#line 14855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2440: /* hex_or_bin_String: HEX_STRING  */
#line 14863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47345 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2441: /* hex_or_bin_String: BIN_NUM  */
#line 14871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47361 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2442: /* param_marker: PARAM_MARKER  */
#line 14886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 47372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2443: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 14893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 47382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2444: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 14899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 47393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2445: /* signed_literal: '+' NUM_literal  */
#line 14908 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 47399 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2446: /* signed_literal: '-' NUM_literal  */
#line 14910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 47408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2447: /* literal: text_literal  */
#line 14917 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 47414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2448: /* literal: NUM_literal  */
#line 14918 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 47420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2449: /* literal: temporal_literal  */
#line 14919 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 47426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2450: /* literal: NULL_SYM  */
#line 14921 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 47444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2451: /* literal: FALSE_SYM  */
#line 14935 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2452: /* literal: TRUE_SYM  */
#line 14941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2453: /* literal: HEX_NUM  */
#line 14947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2454: /* literal: HEX_STRING  */
#line 14953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2455: /* literal: BIN_NUM  */
#line 14959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2456: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 14965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_string_with_introducer *item_str;
            LEX_CSTRING tmp;
            (yyvsp[0].string)->get_value(&tmp);
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, null_clex_str,
                                           tmp, (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 47516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2457: /* NUM_literal: NUM  */
#line 14986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2458: /* NUM_literal: LONG_NUM  */
#line 14996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2459: /* NUM_literal: ULONGLONG_NUM  */
#line 15006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2460: /* NUM_literal: DECIMAL_NUM  */
#line 15012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 47565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2461: /* NUM_literal: FLOAT_NUM  */
#line 15019 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 47575 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2462: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2463: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2464: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47608 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2465: /* $@213: %empty  */
#line 15053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->with_cte_resolution= true;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&lex->with_clauses_list,
                                      lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 47628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2466: /* with_clause: WITH opt_recursive $@213 with_list  */
#line 15069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 47637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2467: /* opt_recursive: %empty  */
#line 15077 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 0; }
#line 47643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2468: /* opt_recursive: RECURSIVE_SYM  */
#line 15078 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 47649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2471: /* with_list_element: with_element_head opt_with_column_list AS '(' query_expression ')' opt_cycle  */
#line 15092 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-3].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].with_element_head), *(yyvsp[-5].ident_sys_list), (yyvsp[-2].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            if ((yyvsp[0].ident_sys_list))
            {
              elem->set_cycle_list((yyvsp[0].ident_sys_list));
            }
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 47671 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2472: /* opt_cycle: %empty  */
#line 15113 "/home/buildbot/git/sql/sql_yacc.yy"
         { (yyval.ident_sys_list)= NULL; }
#line 47677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2473: /* $@214: %empty  */
#line 15116 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (!Lex->curr_with_clause->with_recursive)
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].kwd).pos());
           }
         }
#line 47688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2474: /* opt_cycle: CYCLE_SYM $@214 comma_separated_ident_list RESTRICT  */
#line 15123 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list);
         }
#line 47696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2475: /* opt_with_column_list: %empty  */
#line 15131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>) == NULL)
              MYSQL_YYABORT;
          }
#line 47705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2476: /* opt_with_column_list: '(' with_column_list ')'  */
#line 15136 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list); }
#line 47711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2478: /* ident_sys_alloc: ident_cli  */
#line 15145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            void *buf= thd->alloc(sizeof(Lex_ident_sys));
            if (!buf)
              MYSQL_YYABORT;
            (yyval.ident_sys_ptr)= new (buf) Lex_ident_sys(thd, &(yyvsp[0].ident_cli));
          }
#line 47722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2479: /* comma_separated_ident_list: ident_sys_alloc  */
#line 15155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>;
            if (unlikely((yyval.ident_sys_list) == NULL || (yyval.ident_sys_list)->push_back((yyvsp[0].ident_sys_ptr))))
              MYSQL_YYABORT;
	  }
#line 47732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2480: /* comma_separated_ident_list: comma_separated_ident_list ',' ident_sys_alloc  */
#line 15161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= (yyvsp[-2].ident_sys_list))->push_back((yyvsp[0].ident_sys_ptr)))
              MYSQL_YYABORT;
          }
#line 47741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2481: /* with_element_head: ident  */
#line 15170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if (unlikely(name == NULL || (yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 47754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2482: /* insert_ident: simple_ident_nospvar  */
#line 15187 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 47760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2483: /* insert_ident: table_wild  */
#line 15188 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 47766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2484: /* table_wild: ident '.' '*'  */
#line 15193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2485: /* table_wild: ident '.' ident '.' '*'  */
#line 15198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2486: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15206 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2487: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2488: /* order_ident: expr  */
#line 15218 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 47808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2489: /* simple_ident: ident_cli  */
#line 15224 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47817 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2490: /* simple_ident: ident_cli '.' ident_cli  */
#line 15229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2491: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47836 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2492: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15240 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2493: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15245 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2494: /* simple_ident_nospvar: ident  */
#line 15253 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2495: /* simple_ident_nospvar: ident '.' ident  */
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2496: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 47881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2497: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15268 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2498: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15274 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2499: /* field_ident: ident  */
#line 15281 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 47906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2500: /* field_ident: ident '.' ident '.' ident  */
#line 15283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 47921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2501: /* field_ident: ident '.' ident  */
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 47933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2502: /* field_ident: '.' ident  */
#line 15301 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 47939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2503: /* table_ident: ident  */
#line 15306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 47949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2504: /* table_ident: ident '.' ident  */
#line 15312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 47959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2505: /* table_ident: '.' ident  */
#line 15318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 47970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2506: /* table_ident_opt_wild: ident opt_wild  */
#line 15328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 47980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2507: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 47990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2508: /* table_ident_nodb: ident  */
#line 15343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db= any_db;
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48001 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2513: /* ident_cli: keyword_ident  */
#line 15359 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48007 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2514: /* IDENT_sys: IDENT_cli  */
#line 15364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 48016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2515: /* TEXT_STRING_sys: TEXT_STRING  */
#line 15372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48025 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2516: /* TEXT_STRING_literal: TEXT_STRING  */
#line 15380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2517: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 15388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2519: /* ident_table_alias: keyword_table_alias  */
#line 15397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2520: /* ident_cli_set_usual_case: IDENT_cli  */
#line 15404 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ident_cli)= (yyvsp[0].ident_cli); }
#line 48058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2521: /* ident_cli_set_usual_case: keyword_set_usual_case  */
#line 15405 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2523: /* ident_sysvar_name: keyword_sysvar_name  */
#line 15411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2524: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 15416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 48082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2526: /* ident: keyword_ident  */
#line 15426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2528: /* label_ident: keyword_label  */
#line 15435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2529: /* ident_or_text: ident  */
#line 15442 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 48106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2530: /* ident_or_text: TEXT_STRING_sys  */
#line 15443 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 48112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2531: /* ident_or_text: LEX_HOSTNAME  */
#line 15444 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 48118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2532: /* user_maybe_role: ident_or_text  */
#line 15449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 48133 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2533: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 15460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 48166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2534: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 15489 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 48177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2537: /* user: user_maybe_role  */
#line 15500 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 48187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3267: /* $@215: %empty  */
#line 16368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
          }
#line 48196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3268: /* set: SET $@215 set_param  */
#line 16373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 48205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3271: /* $@216: %empty  */
#line 16383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= OPT_DEFAULT;
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3272: /* set_param: TRANSACTION_SYM $@216 transaction_characteristics  */
#line 16389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3273: /* $@217: %empty  */
#line 16394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 48232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3275: /* $@218: %empty  */
#line 16400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 48246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3281: /* $@219: %empty  */
#line 16427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3282: /* start_option_value_list_following_option_type: TRANSACTION_SYM $@219 transaction_characteristics  */
#line 16432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3285: /* $@220: %empty  */
#line 16447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 48272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3288: /* option_type: GLOBAL_SYM  */
#line 16455 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 48278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3289: /* option_type: LOCAL_SYM  */
#line 16456 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3290: /* option_type: SESSION_SYM  */
#line 16457 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3291: /* opt_var_type: %empty  */
#line 16461 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3292: /* opt_var_type: GLOBAL_SYM  */
#line 16462 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 48302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3293: /* opt_var_type: LOCAL_SYM  */
#line 16463 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3294: /* opt_var_type: SESSION_SYM  */
#line 16464 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3295: /* opt_var_ident_type: %empty  */
#line 16468 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 48320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3296: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 16469 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 48326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3297: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 16470 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 48332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3298: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 16471 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 48338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3299: /* $@221: %empty  */
#line 16480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3300: /* set_stmt_option: ident_cli equal $@221 set_expr_or_default  */
#line 16485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp, (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3301: /* $@222: %empty  */
#line 16493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3302: /* set_stmt_option: ident_cli '.' ident equal $@222 set_expr_or_default  */
#line 16498 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type,
                         &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3303: /* $@223: %empty  */
#line 16507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3304: /* set_stmt_option: DEFAULT '.' ident equal $@223 set_expr_or_default  */
#line 16512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3305: /* $@224: %empty  */
#line 16524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3306: /* option_value_following_option_type: ident_cli equal $@224 set_expr_or_default  */
#line 16529 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3307: /* $@225: %empty  */
#line 16537 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3308: /* option_value_following_option_type: ident_cli '.' ident equal $@225 set_expr_or_default  */
#line 16542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type, &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3309: /* $@226: %empty  */
#line 16550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3310: /* option_value_following_option_type: DEFAULT '.' ident equal $@226 set_expr_or_default  */
#line 16555 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3311: /* $@227: %empty  */
#line 16565 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3312: /* option_value_no_option_type: ident_cli_set_usual_case equal $@227 set_expr_or_default  */
#line 16570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3313: /* $@228: %empty  */
#line 16578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3314: /* option_value_no_option_type: ident_cli_set_usual_case '.' ident equal $@228 set_expr_or_default  */
#line 16583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3315: /* $@229: %empty  */
#line 16591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3316: /* option_value_no_option_type: DEFAULT '.' ident equal $@229 set_expr_or_default  */
#line 16596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3317: /* $@230: %empty  */
#line 16603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            if (sp_create_assignment_lex(thd, (yyvsp[-2].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3318: /* option_value_no_option_type: '@' ident_or_text equal $@230 expr  */
#line 16614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-3].lex_str), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3319: /* $@231: %empty  */
#line 16620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48558 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3320: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal $@231 set_expr_or_default  */
#line 16625 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-4].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3321: /* $@232: %empty  */
#line 16631 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3322: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal $@232 set_expr_or_default  */
#line 16636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-6].var_type), &(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3323: /* $@233: %empty  */
#line 16642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3324: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal $@233 set_expr_or_default  */
#line 16647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-6].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3325: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 16653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3326: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 16671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 48643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3327: /* option_value_no_option_type: NAMES_SYM charset_name_or_default  */
#line 16682 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            CHARSET_INFO *def= global_system_variables.character_set_client;
            Lex_exact_charset_opt_extended_collate tmp((yyvsp[0].charset) ? (yyvsp[0].charset) : def, false);
            if (Lex->set_names((yyvsp[-1].kwd).pos(), tmp, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 48654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3328: /* option_value_no_option_type: NAMES_SYM charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 16690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            CHARSET_INFO *def= global_system_variables.character_set_client;
            Lex_exact_charset_opt_extended_collate tmp((yyvsp[-2].charset) ? (yyvsp[-2].charset) : def, false);
            if (tmp.merge_collation((yyvsp[0].Lex_extended_collation)) ||
                Lex->set_names((yyvsp[-3].kwd).pos(), tmp, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 48666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3329: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 16698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3330: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 16720 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3331: /* option_value_no_option_type: ROLE_SYM role_name  */
#line 16736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_user)->user);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3332: /* $@234: %empty  */
#line 16747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3333: /* option_value_no_option_type: ROLE_SYM equal $@234 set_expr_or_default  */
#line 16752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].kwd));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3334: /* $@235: %empty  */
#line 16760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3335: /* option_value_no_option_type: PASSWORD_SYM equal $@235 text_or_password  */
#line 16765 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3336: /* $@236: %empty  */
#line 16771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3337: /* option_value_no_option_type: PASSWORD_SYM FOR_SYM $@236 user equal text_or_password  */
#line 16776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[-2].lex_user), (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48786 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3342: /* transaction_access_mode: transaction_access_mode_types  */
#line 16792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 48806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3343: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 16811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 48825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3344: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 16828 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 48831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3345: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 16829 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 48837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3346: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 16833 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 48843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3347: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 16834 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 48849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3348: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 16835 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 48855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3349: /* isolation_types: SERIALIZABLE_SYM  */
#line 16836 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 48861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3350: /* text_or_password: TEXT_STRING  */
#line 16842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 48870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3351: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16847 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 48879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3352: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
            (yyval.user_auth)->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            (yyval.user_auth)->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 48891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3353: /* set_expr_or_default: expr  */
#line 16862 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 48897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3354: /* set_expr_or_default: DEFAULT  */
#line 16863 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.item)=0; }
#line 48903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3355: /* set_expr_or_default: ON  */
#line 16865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3356: /* set_expr_or_default: ALL  */
#line 16871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3357: /* set_expr_or_default: BINARY  */
#line 16877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3358: /* $@237: %empty  */
#line 16888 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 48945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3359: /* lock: LOCK_SYM table_or_tables $@237 table_lock_list opt_lock_wait_timeout  */
#line 16896 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3360: /* opt_lock_wait_timeout: %empty  */
#line 16901 "/home/buildbot/git/sql/sql_yacc.yy"
        {}
#line 48957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3361: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 16903 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 48967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3362: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 16909 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 48977 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3363: /* table_or_tables: TABLE_SYM  */
#line 16917 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 48983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3364: /* table_or_tables: TABLES  */
#line 16918 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 48989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3367: /* table_lock: table_ident opt_table_alias_clause lock_option  */
#line 16928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_FIRST_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 49009 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3368: /* lock_option: READ_SYM  */
#line 16946 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 49015 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3369: /* lock_option: WRITE_SYM  */
#line 16947 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 49021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3370: /* lock_option: WRITE_SYM CONCURRENT  */
#line 16949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 49029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3371: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 16953 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 49035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3372: /* lock_option: READ_SYM LOCAL_SYM  */
#line 16954 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 49041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3373: /* $@238: %empty  */
#line 16959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 49053 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3374: /* unlock: UNLOCK_SYM $@238 table_or_tables  */
#line 16967 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3375: /* $@239: %empty  */
#line 16976 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 49068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3376: /* handler: HANDLER_SYM $@239 handler_tail  */
#line 16981 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 49076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3377: /* handler_tail: table_ident OPEN_SYM opt_table_alias_clause  */
#line 16988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 49089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3378: /* handler_tail: table_ident_nodb CLOSE_SYM  */
#line 16997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 49102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3379: /* $@240: %empty  */
#line 17006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            select->limit_params.select_limit= one;
            select->limit_params.offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 49124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3380: /* handler_tail: table_ident_nodb READ_SYM $@240 handler_read_or_scan opt_where_clause opt_global_limit_clause  */
#line 17024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->limit_params.explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              select->limit_params.select_limit= one;
              select->limit_params.offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 49150 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3381: /* handler_read_or_scan: handler_scan_function  */
#line 17048 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= null_clex_str; }
#line 49156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3382: /* handler_read_or_scan: ident handler_rkey_function  */
#line 17049 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 49162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3383: /* handler_scan_function: FIRST_SYM  */
#line 17053 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 49168 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3384: /* handler_scan_function: NEXT_SYM  */
#line 17054 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 49174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3385: /* handler_rkey_function: FIRST_SYM  */
#line 17058 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 49180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3386: /* handler_rkey_function: NEXT_SYM  */
#line 17059 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 49186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3387: /* handler_rkey_function: PREV_SYM  */
#line 17060 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 49192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3388: /* handler_rkey_function: LAST_SYM  */
#line 17061 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 49198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3389: /* $@241: %empty  */
#line 17063 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 49210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3390: /* handler_rkey_function: handler_rkey_mode $@241 '(' values ')'  */
#line 17071 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3391: /* handler_rkey_mode: '='  */
#line 17075 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 49222 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3392: /* handler_rkey_mode: GE  */
#line 17076 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 49228 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3393: /* handler_rkey_mode: LE  */
#line 17077 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 49234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3394: /* handler_rkey_mode: '>'  */
#line 17078 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 49240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3395: /* handler_rkey_mode: '<'  */
#line 17079 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 49246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3396: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17086 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3397: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_table(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident)))
              MYSQL_YYABORT;
          }
#line 49261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3398: /* revoke_command: grant_privileges ON sp_handler grant_ident FROM user_and_role_list  */
#line 17096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_sp(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident), *(yyvsp[-3].sp_handler)))
              MYSQL_YYABORT;
          }
#line 49270 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3399: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 49278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3400: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17105 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_proxy(thd, (yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 49287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3401: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3402: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17119 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 49303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3403: /* admin_option_for_role: grant_role  */
#line 17121 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 49309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3404: /* grant: GRANT clear_privileges grant_command  */
#line 17126 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3405: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_table(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3406: /* grant_command: grant_privileges ON sp_handler grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_sp(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), *(yyvsp[-5].sp_handler), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3407: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_proxy(thd, (yyvsp[-3].lex_user), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3408: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3409: /* opt_with_admin: %empty  */
#line 17159 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = 0; }
#line 49360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3410: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17160 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 49366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3411: /* opt_with_admin_option: %empty  */
#line 17164 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= false; }
#line 49372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3412: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17165 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= true; }
#line 49378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3413: /* role_list: grant_role  */
#line 17170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3414: /* role_list: role_list ',' grant_role  */
#line 17175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3415: /* current_role: CURRENT_ROLE optional_braces  */
#line 17183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
          }
#line 49406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3416: /* role_name: ident_or_text  */
#line 17192 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             CHARSET_INFO *cs= system_charset_info;
             /* trim end spaces (as they'll be lost in mysql.user anyway) */
             (yyvsp[0].lex_str).length= cs->lengthsp((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
             ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
             if (unlikely((yyvsp[0].lex_str).length == 0))
               my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
             if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
               MYSQL_YYABORT;
             if (lex_string_eq(&(yyvsp[0].lex_str), &none))
               (yyval.lex_user)->user= none;
             else if (lex_string_eq(&(yyvsp[0].lex_str), &public_name))
               (yyval.lex_user)->user= public_name;
             else if (check_string_char_length(&((yyval.lex_user)->user= (yyvsp[0].lex_str)), ER_USERNAME,
                                               username_char_length, cs, 0))
               MYSQL_YYABORT;
             (yyval.lex_user)->host= empty_clex_str;
           }
#line 49429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3422: /* grant_privileges: ALL opt_privileges  */
#line 17222 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege(GLOBAL_ACLS, true)))
              MYSQL_YYABORT;
          }
#line 49438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3425: /* object_privilege_list: object_privilege  */
#line 17235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege((yyvsp[0].privilege))))
              MYSQL_YYABORT;
          }
#line 49447 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3426: /* object_privilege_list: column_list_privilege  */
#line 17240 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege()) ||
                (yyval.lex_grant)->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                   (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 49458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3427: /* object_privilege_list: object_privilege_list ',' object_privilege  */
#line 17247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            ((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_object_privilege((yyvsp[0].privilege));
          }
#line 49466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3428: /* object_privilege_list: object_privilege_list ',' column_list_privilege  */
#line 17251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                         (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 49476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3429: /* column_list_privilege: column_privilege '(' comma_separated_ident_list ')'  */
#line 17260 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.column_list_privilege)= Lex_column_list_privilege((yyvsp[-1].ident_sys_list), (yyvsp[-3].privilege));
          }
#line 49484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3430: /* column_privilege: SELECT_SYM  */
#line 17266 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 49490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3431: /* column_privilege: INSERT  */
#line 17267 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 49496 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3432: /* column_privilege: UPDATE_SYM  */
#line 17268 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 49502 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3433: /* column_privilege: REFERENCES  */
#line 17269 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 49508 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3434: /* object_privilege: SELECT_SYM  */
#line 17273 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 49514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3435: /* object_privilege: INSERT  */
#line 17274 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 49520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3436: /* object_privilege: UPDATE_SYM  */
#line 17275 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 49526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3437: /* object_privilege: REFERENCES  */
#line 17276 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 49532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3438: /* object_privilege: DELETE_SYM  */
#line 17277 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_ACL;}
#line 49538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3439: /* object_privilege: USAGE  */
#line 17278 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= NO_ACL; }
#line 49544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3440: /* object_privilege: INDEX_SYM  */
#line 17279 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INDEX_ACL;}
#line 49550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3441: /* object_privilege: ALTER  */
#line 17280 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_ACL;}
#line 49556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3442: /* object_privilege: CREATE  */
#line 17281 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_ACL;}
#line 49562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3443: /* object_privilege: DROP  */
#line 17282 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DROP_ACL;}
#line 49568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3444: /* object_privilege: EXECUTE_SYM  */
#line 17283 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EXECUTE_ACL;}
#line 49574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3445: /* object_privilege: RELOAD  */
#line 17284 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= RELOAD_ACL;}
#line 49580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3446: /* object_privilege: SHUTDOWN  */
#line 17285 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHUTDOWN_ACL;}
#line 49586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3447: /* object_privilege: PROCESS  */
#line 17286 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= PROCESS_ACL;}
#line 49592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3448: /* object_privilege: FILE_SYM  */
#line 17287 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FILE_ACL;}
#line 49598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3449: /* object_privilege: GRANT OPTION  */
#line 17288 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= GRANT_ACL;}
#line 49604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3450: /* object_privilege: SHOW DATABASES  */
#line 17289 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_DB_ACL;}
#line 49610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3451: /* object_privilege: SUPER_SYM  */
#line 17290 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SUPER_ACL;}
#line 49616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3452: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17291 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TMP_ACL;}
#line 49622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3453: /* object_privilege: LOCK_SYM TABLES  */
#line 17292 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= LOCK_TABLES_ACL; }
#line 49628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3454: /* object_privilege: REPLICATION SLAVE  */
#line 17293 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REPL_SLAVE_ACL; }
#line 49634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3455: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17294 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= BINLOG_MONITOR_ACL; /*Compatibility*/ }
#line 49640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3456: /* object_privilege: CREATE VIEW_SYM  */
#line 17295 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_VIEW_ACL; }
#line 49646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3457: /* object_privilege: SHOW VIEW_SYM  */
#line 17296 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_VIEW_ACL; }
#line 49652 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3458: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17297 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_PROC_ACL; }
#line 49658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3459: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17298 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_PROC_ACL; }
#line 49664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3460: /* object_privilege: CREATE USER_SYM  */
#line 17299 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_USER_ACL; }
#line 49670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3461: /* object_privilege: EVENT_SYM  */
#line 17300 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EVENT_ACL;}
#line 49676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3462: /* object_privilege: TRIGGER_SYM  */
#line 17301 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= TRIGGER_ACL; }
#line 49682 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3463: /* object_privilege: CREATE TABLESPACE  */
#line 17302 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TABLESPACE_ACL; }
#line 49688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3464: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17303 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_HISTORY_ACL; }
#line 49694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3465: /* object_privilege: SET USER_SYM  */
#line 17304 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SET_USER_ACL; }
#line 49700 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3466: /* object_privilege: FEDERATED_SYM ADMIN_SYM  */
#line 17305 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FEDERATED_ADMIN_ACL; }
#line 49706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3467: /* object_privilege: CONNECTION_SYM ADMIN_SYM  */
#line 17306 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= CONNECTION_ADMIN_ACL; }
#line 49712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3468: /* object_privilege: READ_SYM ONLY_SYM ADMIN_SYM  */
#line 17307 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 49718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3469: /* object_privilege: READ_ONLY_SYM ADMIN_SYM  */
#line 17308 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 49724 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3470: /* object_privilege: BINLOG_SYM MONITOR_SYM  */
#line 17309 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_MONITOR_ACL; }
#line 49730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3471: /* object_privilege: BINLOG_SYM ADMIN_SYM  */
#line 17310 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_ADMIN_ACL; }
#line 49736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3472: /* object_privilege: BINLOG_SYM REPLAY_SYM  */
#line 17311 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_REPLAY_ACL; }
#line 49742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3473: /* object_privilege: REPLICATION MASTER_SYM ADMIN_SYM  */
#line 17312 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_MASTER_ADMIN_ACL; }
#line 49748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3474: /* object_privilege: REPLICATION SLAVE ADMIN_SYM  */
#line 17313 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_SLAVE_ADMIN_ACL; }
#line 49754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3475: /* object_privilege: SLAVE MONITOR_SYM  */
#line 17314 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SLAVE_MONITOR_ACL; }
#line 49760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3476: /* opt_and: %empty  */
#line 17318 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 49766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3477: /* opt_and: AND_SYM  */
#line 17319 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 49772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3480: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 49783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3481: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 17336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 49794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3482: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 17343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 49805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3483: /* grant_ident: '*'  */
#line 17353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db;
            if (unlikely(Lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(db,
                                            Lex_grant_object_name::STAR)))
              MYSQL_YYABORT;
          }
#line 49818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3484: /* grant_ident: ident '.' '*'  */
#line 17362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[-2].ident_sys),
                                            Lex_grant_object_name::IDENT_STAR)))
              MYSQL_YYABORT;
          }
#line 49828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3485: /* grant_ident: '*' '.' '*'  */
#line 17368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(
                                            null_clex_str,
                                            Lex_grant_object_name::STAR_STAR)))
              MYSQL_YYABORT;
          }
#line 49839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3486: /* grant_ident: table_ident  */
#line 17375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 49848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3487: /* user_list: user  */
#line 17383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3488: /* user_list: user_list ',' user  */
#line 17388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3489: /* grant_list: grant_user  */
#line 17396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3490: /* grant_list: grant_list ',' grant_user  */
#line 17401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3491: /* user_and_role_list: user_or_role  */
#line 17409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49893 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3492: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 17414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3497: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 17425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 49912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3498: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 17431 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 49922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3499: /* grant_user: user IDENTIFIED_SYM via_or_with auth_expression  */
#line 17437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 49931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3500: /* grant_user: user_or_role  */
#line 17442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 49939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3501: /* auth_expression: auth_token OR_SYM auth_expression  */
#line 17449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 49949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3502: /* auth_expression: auth_token  */
#line 17455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 49957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3503: /* auth_token: ident_or_text opt_auth_str  */
#line 17462 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 49966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3504: /* opt_auth_str: %empty  */
#line 17470 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 49975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3505: /* opt_auth_str: using_or_as TEXT_STRING_sys  */
#line 17475 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 49985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3506: /* opt_auth_str: using_or_as PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17481 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 49995 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3508: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 17491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 50003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3509: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 17495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 50011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3510: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 17499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 50019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3511: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 17503 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 50027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3512: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 17510 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 50036 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3513: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 17515 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 50045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3514: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 17520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 50054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3515: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 17525 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 50063 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3516: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 17530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 50072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3517: /* resource_option_list: resource_option_list resource_option  */
#line 17537 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 50078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3518: /* resource_option_list: resource_option  */
#line 17538 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 50084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3519: /* opt_resource_options: %empty  */
#line 17542 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3521: /* opt_grant_options: %empty  */
#line 17548 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= NO_ACL;  }
#line 50096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3522: /* opt_grant_options: WITH grant_option_list  */
#line 17549 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= (yyvsp[0].privilege); }
#line 50102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3523: /* opt_grant_option: %empty  */
#line 17553 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= NO_ACL;    }
#line 50108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3524: /* opt_grant_option: WITH GRANT OPTION  */
#line 17554 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= GRANT_ACL; }
#line 50114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3525: /* grant_option_list: grant_option_list grant_option  */
#line 17558 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.privilege)= (yyvsp[-1].privilege) | (yyvsp[0].privilege); }
#line 50120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3527: /* grant_option: GRANT OPTION  */
#line 17563 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= GRANT_ACL;}
#line 50126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3528: /* grant_option: resource_option  */
#line 17564 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= NO_ACL; }
#line 50132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3529: /* $@242: %empty  */
#line 17569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 50142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3530: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@242 opt_work  */
#line 17574 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 50148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3531: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 17579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 50158 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3532: /* opt_not: %empty  */
#line 17587 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 50164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3533: /* opt_not: not  */
#line 17588 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 1; }
#line 50170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3534: /* opt_work: %empty  */
#line 17592 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3535: /* opt_work: WORK_SYM  */
#line 17593 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 50182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3536: /* opt_chain: %empty  */
#line 17598 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 50188 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3537: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 17599 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 50194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3538: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 17600 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 50200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3539: /* opt_release: %empty  */
#line 17605 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 50206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3540: /* opt_release: RELEASE_SYM  */
#line 17606 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 50212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3541: /* opt_release: NO_SYM RELEASE_SYM  */
#line 17607 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 50218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3542: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 17612 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 50231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3543: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 17624 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 50244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3544: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 17633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3545: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 17639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3546: /* savepoint: SAVEPOINT_SYM ident  */
#line 17648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3547: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 17657 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3548: /* unit_type_decl: UNION_SYM union_option  */
#line 17670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3549: /* unit_type_decl: INTERSECT_SYM union_option  */
#line 17672 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3550: /* unit_type_decl: EXCEPT_SYM union_option  */
#line 17674 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3551: /* union_option: %empty  */
#line 17681 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=1; }
#line 50308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3552: /* union_option: DISTINCT  */
#line 17682 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 50314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3553: /* union_option: ALL  */
#line 17683 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 50320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3554: /* query_expression_option: STRAIGHT_JOIN  */
#line 17687 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 50326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3555: /* query_expression_option: HIGH_PRIORITY  */
#line 17689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 50336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3556: /* query_expression_option: DISTINCT  */
#line 17694 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 50342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3557: /* query_expression_option: UNIQUE_SYM  */
#line 17695 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 50348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3558: /* query_expression_option: SQL_SMALL_RESULT  */
#line 17696 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 50354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3559: /* query_expression_option: SQL_BIG_RESULT  */
#line 17697 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 50360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3560: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 17698 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Select->options|= OPTION_BUFFER_RESULT; }
#line 50366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3561: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 17699 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Select->options|= OPTION_FOUND_ROWS; }
#line 50372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3562: /* query_expression_option: ALL  */
#line 17700 "/home/buildbot/git/sql/sql_yacc.yy"
              { Select->options|= SELECT_ALL; }
#line 50378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3565: /* no_definer: %empty  */
#line 17716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 50393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3566: /* definer: DEFINER_SYM '=' user_or_role  */
#line 17730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 50402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3567: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 17743 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 50408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3568: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 17744 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 50414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3569: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 17745 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 50420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3570: /* opt_view_suid: %empty  */
#line 17749 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 50426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3571: /* opt_view_suid: view_suid  */
#line 17750 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 50432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3572: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 17754 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 50438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3573: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 17755 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 50444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3574: /* view_list_opt: %empty  */
#line 17760 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3575: /* view_list_opt: '(' view_list ')'  */
#line 17761 "/home/buildbot/git/sql/sql_yacc.yy"
                            { }
#line 50456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3576: /* view_list: ident  */
#line 17766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 50466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3577: /* view_list: view_list ',' ident  */
#line 17772 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 50476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3578: /* $@243: %empty  */
#line 17780 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 50486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3579: /* view_select: $@243 query_expression view_check_option  */
#line 17787 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 50495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3580: /* view_check_option: %empty  */
#line 17794 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 50501 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3581: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 17795 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 50507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3582: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 17796 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 50513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3583: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 17797 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 50519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3584: /* trigger_action_order: FOLLOWS_SYM  */
#line 17808 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 50525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3585: /* trigger_action_order: PRECEDES_SYM  */
#line 17810 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 50531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3586: /* trigger_follows_precedes_clause: %empty  */
#line 17815 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 50541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3587: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 17822 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 50550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3588: /* $@244: %empty  */
#line 17831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 50559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3589: /* $@245: %empty  */
#line 17840 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 50567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3590: /* $@246: %empty  */
#line 17846 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 50575 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3591: /* $@247: %empty  */
#line 17851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 50583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3592: /* $@248: %empty  */
#line 17855 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 50608 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3593: /* trigger_tail: remember_name opt_if_not_exists $@244 sp_name trg_action_time trg_event ON remember_name $@245 table_ident FOR_SYM remember_name $@246 EACH_SYM ROW_SYM $@247 trigger_follows_precedes_clause $@248 sp_proc_stmt force_lookahead  */
#line 17876 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $21 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 50631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3594: /* $@249: %empty  */
#line 17904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str);
          }
#line 50641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3595: /* sf_return_type: $@249 field_type  */
#line 17910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sf_return_fill_definition((yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 50650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3596: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 17920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 50658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3597: /* xa: XA_SYM END xid opt_suspend  */
#line 17924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 50666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3598: /* xa: XA_SYM PREPARE_SYM xid  */
#line 17928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 50674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3599: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 17932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 50682 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3600: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 17936 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 50690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3601: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 17940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 50699 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3602: /* opt_format_xid: %empty  */
#line 17947 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= false; }
#line 50705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3603: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 17949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 50722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3604: /* xid: text_string  */
#line 17965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 50733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3605: /* xid: text_string ',' text_string  */
#line 17972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 50744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3606: /* xid: text_string ',' text_string ',' ulong_num  */
#line 17979 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE &&
                                 (yyvsp[0].ulong_num) <= static_cast<ulong>(
                                         std::numeric_limits<int32_t>::max()));
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 50758 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3607: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 17991 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 50764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3608: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 17992 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 50770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3609: /* begin_or_start: START_SYM  */
#line 17993 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 50776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3610: /* opt_join_or_resume: %empty  */
#line 17997 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 50782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3611: /* opt_join_or_resume: JOIN_SYM  */
#line 17998 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 50788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3612: /* opt_join_or_resume: RESUME_SYM  */
#line 17999 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 50794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3613: /* opt_one_phase: %empty  */
#line 18003 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 50800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3614: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18004 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 50806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3615: /* opt_suspend: %empty  */
#line 18009 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 50812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3616: /* $@250: %empty  */
#line 18011 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 50818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3618: /* opt_migrate: %empty  */
#line 18016 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 50824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3619: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18017 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 50830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3620: /* install: INSTALL_SYM PLUGIN_SYM opt_if_not_exists ident SONAME_SYM TEXT_STRING_sys  */
#line 18022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 50839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3621: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 50847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3622: /* uninstall: UNINSTALL_SYM PLUGIN_SYM opt_if_exists ident  */
#line 18034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 50856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3623: /* uninstall: UNINSTALL_SYM SONAME_SYM opt_if_exists TEXT_STRING_sys  */
#line 18039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 50865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3624: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18048 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYERROR;
          }
#line 50873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3629: /* $@251: %empty  */
#line 18489 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // Direct procedure call (without the CALL keyword)
            Lex_ident_sys tmp(thd, &(yyvsp[0].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp)))
              MYSQL_YYABORT;
          }
#line 50885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3630: /* sp_statement: ident_cli_directly_assignable $@251 opt_sp_cparam_list  */
#line 18497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 50894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3631: /* $@252: %empty  */
#line 18502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-2].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 50905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3632: /* sp_statement: ident_cli_directly_assignable '.' ident $@252 opt_sp_cparam_list  */
#line 18509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 50914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3633: /* $@253: %empty  */
#line 18514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-4].ident_cli));
            if (unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 50924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3634: /* sp_statement: ident_cli_directly_assignable '.' ident '.' ident $@253 opt_sp_cparam_list  */
#line 18520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 50933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3635: /* sp_if_then_statements: sp_proc_stmts1_implicit_block  */
#line 18527 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 50939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3636: /* sp_case_then_statements: sp_proc_stmts1_implicit_block  */
#line 18531 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 50945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3660: /* row_field_name: ident_directly_assignable  */
#line 18581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 50954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3661: /* $@254: %empty  */
#line 18589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_while_loop_expression(thd)))
              MYSQL_YYABORT;
          }
#line 50963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3662: /* while_body: expr_lex LOOP_SYM $@254 sp_proc_stmts1 END LOOP_SYM  */
#line 18594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 50972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3663: /* for_loop_statements: LOOP_SYM sp_proc_stmts1 END LOOP_SYM  */
#line 18602 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 50978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3665: /* sp_block_label: labels_declaration_oracle  */
#line 18612 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 50988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3666: /* remember_end_opt: %empty  */
#line 18621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 50999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3667: /* sp_opt_default: _empty  */
#line 18630 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = NULL; }
#line 51005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3668: /* sp_opt_default: DEFAULT expr  */
#line 18631 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item); }
#line 51011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3669: /* sp_opt_default: SET_VAR expr  */
#line 18632 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item); }
#line 51017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3670: /* sp_opt_inout: _empty  */
#line 18636 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 51023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3672: /* sp_opt_inout: IN_SYM OUT_SYM  */
#line 18638 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 51029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3673: /* $@255: %empty  */
#line 18642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 51037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3674: /* sp_proc_stmts1_implicit_block: $@255 sp_proc_stmts1  */
#line 18646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 51046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3675: /* remember_lex: %empty  */
#line 18654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
          }
#line 51054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3685: /* ident_directly_assignable: keyword_directly_assignable  */
#line 18673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 51063 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3687: /* ident_cli_directly_assignable: keyword_directly_assignable  */
#line 18681 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 51069 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3688: /* $@256: %empty  */
#line 18687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 51080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3689: /* set_assign: ident_cli_directly_assignable SET_VAR $@256 set_expr_or_default  */
#line 18694 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3690: /* $@257: %empty  */
#line 18703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 51104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3691: /* set_assign: ident_cli_directly_assignable '.' ident SET_VAR $@257 set_expr_or_default  */
#line 18710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3692: /* $@258: %empty  */
#line 18721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 51135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3693: /* set_assign: COLON_ORACLE_SYM ident '.' ident SET_VAR $@258 set_expr_or_default  */
#line 18733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3694: /* labels_declaration_oracle: label_declaration_oracle  */
#line 18744 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 51153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3695: /* labels_declaration_oracle: labels_declaration_oracle label_declaration_oracle  */
#line 18745 "/home/buildbot/git/sql/sql_yacc.yy"
                                                             { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 51159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3696: /* label_declaration_oracle: SHIFT_LEFT label_ident SHIFT_RIGHT  */
#line 18750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 51169 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3697: /* opt_exception_clause: _empty  */
#line 18758 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= 0; }
#line 51175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3698: /* opt_exception_clause: EXCEPTION_ORACLE_SYM exception_handlers  */
#line 18759 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= (yyvsp[0].num); }
#line 51181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3699: /* exception_handlers: exception_handler  */
#line 18763 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 1; }
#line 51187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3700: /* exception_handlers: exception_handlers exception_handler  */
#line 18764 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 51193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3701: /* $@259: %empty  */
#line 18769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 51202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3702: /* exception_handler: WHEN_SYM $@259 sp_hcond_list THEN_SYM sp_proc_stmts1_implicit_block  */
#line 18776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 51211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3703: /* sp_no_param: _empty  */
#line 18784 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 51220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3708: /* opt_sp_name: _empty  */
#line 18802 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= NULL; }
#line 51226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3709: /* opt_sp_name: sp_name  */
#line 18803 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= (yyvsp[0].spname); }
#line 51232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3710: /* opt_package_routine_end_name: _empty  */
#line 18808 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 51238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3711: /* opt_package_routine_end_name: ident  */
#line 18809 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 51244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3714: /* sp_instr_addr: %empty  */
#line 18818 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 51250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3715: /* $@260: %empty  */
#line 18822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 51258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3716: /* $@261: %empty  */
#line 18826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 51267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3717: /* $@262: %empty  */
#line 18832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 51277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3719: /* create_package_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 18842 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 51283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3720: /* create_package_chistic: sp_suid  */
#line 18844 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 51289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3721: /* create_package_chistics: create_package_chistic  */
#line 18848 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 51295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3722: /* create_package_chistics: create_package_chistics create_package_chistic  */
#line 18849 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         { }
#line 51301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3724: /* opt_create_package_chistics: create_package_chistics  */
#line 18854 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { }
#line 51307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3725: /* $@263: %empty  */
#line 18858 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.init(); }
#line 51313 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3727: /* package_implementation_executable_section: END  */
#line 18865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 51323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3728: /* package_implementation_executable_section: BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 18870 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                  { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 51329 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3731: /* package_implementation_declare_section: package_implementation_declare_section_list1 package_implementation_declare_section_list2  */
#line 18882 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3733: /* package_implementation_declare_section_list1: package_implementation_declare_section_list1 package_implementation_item_declaration  */
#line 18889 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3735: /* package_implementation_declare_section_list2: package_implementation_declare_section_list2 package_implementation_routine_definition  */
#line 18896 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3736: /* package_routine_lex: %empty  */
#line 18900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 51358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3737: /* $@264: %empty  */
#line 18911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function,
                                                        NOT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 51377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3738: /* package_specification_function: remember_lex package_routine_lex ident $@264 opt_sp_parenthesized_fdparam_list RETURN_ORACLE_SYM sf_return_type sp_c_chistics  */
#line 18928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-7].lex);
            (yyval.lex)= (yyvsp[-6].lex);
          }
#line 51388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3739: /* $@265: %empty  */
#line 18938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure,
                                                        DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 51406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3740: /* package_specification_procedure: remember_lex package_routine_lex ident $@265 opt_sp_parenthesized_pdparam_list sp_c_chistics  */
#line 18953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);
          }
#line 51417 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3741: /* package_implementation_routine_definition: FUNCTION_SYM package_specification_function package_implementation_function_body ';'  */
#line 18965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 51429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3742: /* package_implementation_routine_definition: PROCEDURE_SYM package_specification_procedure package_implementation_procedure_body ';'  */
#line 18974 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 51441 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3743: /* package_implementation_routine_definition: package_specification_element  */
#line 18981 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.spblock).init(); }
#line 51447 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3744: /* $@266: %empty  */
#line 18987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51460 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3745: /* package_implementation_function_body: sp_tail_is remember_lex $@266 sp_body opt_package_routine_end_name  */
#line 18996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 51471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3746: /* $@267: %empty  */
#line 19006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3747: /* package_implementation_procedure_body: sp_tail_is remember_lex $@267 sp_body opt_package_routine_end_name  */
#line 19015 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 51495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3753: /* package_specification_element: FUNCTION_SYM package_specification_function ';'  */
#line 19040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 51506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3754: /* package_specification_element: PROCEDURE_SYM package_specification_procedure ';'  */
#line 19047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 51517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3755: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM TYPE_SYM sp_opt_default  */
#line 19059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 51527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3756: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM sp_opt_default  */
#line 19067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 51537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3757: /* sp_param_name_and_mode: sp_param_name sp_opt_inout  */
#line 19076 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             (yyvsp[-1].spvar)->mode= (yyvsp[0].spvar_mode);
             (yyval.spvar)= (yyvsp[-1].spvar);
          }
#line 51546 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3758: /* sp_param: sp_param_name_and_mode field_type  */
#line 19084 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 51555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3759: /* sp_param: sp_param_name_and_mode ROW_SYM row_type_body  */
#line 19089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 51564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3761: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3762: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3763: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3764: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3765: /* $@268: %empty  */
#line 19122 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3766: /* sf_c_chistics_and_body_standalone: sp_c_chistics $@268 sp_tail_is sp_body force_lookahead  */
#line 19128 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 51619 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3767: /* $@269: %empty  */
#line 19136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 51630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3768: /* $@270: %empty  */
#line 19144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3769: /* sp_tail_standalone: sp_name $@269 opt_sp_parenthesized_pdparam_list sp_c_chistics $@270 sp_tail_is sp_body opt_sp_name  */
#line 19151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 51648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3770: /* drop_routine: DROP FUNCTION_SYM opt_if_exists ident '.' ident  */
#line 19159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_function((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 51657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3771: /* drop_routine: DROP FUNCTION_SYM opt_if_exists ident  */
#line 19164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_function((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 51666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3772: /* drop_routine: DROP PROCEDURE_SYM opt_if_exists sp_name  */
#line 19169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_procedure((yyvsp[-1].object_ddl_options), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3773: /* drop_routine: DROP PACKAGE_ORACLE_SYM opt_if_exists sp_name  */
#line 19174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 51687 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3774: /* drop_routine: DROP PACKAGE_ORACLE_SYM BODY_ORACLE_SYM opt_if_exists sp_name  */
#line 19182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 51699 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3775: /* $@271: %empty  */
#line 19194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 51708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3776: /* create_routine: create_or_replace definer_opt PROCEDURE_SYM opt_if_not_exists $@271 sp_tail_standalone  */
#line 19199 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_create_routine_finalize();
          }
#line 51716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3777: /* $@272: %empty  */
#line 19204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3778: /* create_routine: create_or_replace definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@272 opt_sp_parenthesized_fdparam_list RETURN_ORACLE_SYM sf_return_type sf_c_chistics_and_body_standalone opt_sp_name  */
#line 19212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3779: /* $@273: %empty  */
#line 19218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3780: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@273 opt_sp_parenthesized_fdparam_list RETURN_ORACLE_SYM sf_return_type sf_c_chistics_and_body_standalone opt_sp_name  */
#line 19226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51752 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3781: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 19232 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 51762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3782: /* $@274: %empty  */
#line 19241 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
          }
#line 51777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3783: /* create_routine: create_or_replace definer_opt PACKAGE_ORACLE_SYM opt_if_not_exists sp_name opt_create_package_chistics_init sp_tail_is remember_name $@274 opt_package_specification_element_list END remember_end_opt opt_sp_name  */
#line 19253 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 51786 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3784: /* $@275: %empty  */
#line 19261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 51802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3785: /* $@276: %empty  */
#line 19273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 51811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3786: /* $@277: %empty  */
#line 19278 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 51821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3787: /* create_routine: create_or_replace definer_opt PACKAGE_ORACLE_SYM BODY_ORACLE_SYM opt_if_not_exists sp_name opt_create_package_chistics_init sp_tail_is remember_name $@275 package_implementation_declare_section $@276 package_implementation_executable_section $@277 remember_end_opt opt_sp_name  */
#line 19284 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 51830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3788: /* opt_sp_decl_body_list: _empty  */
#line 19292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).init();
          }
#line 51838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3789: /* opt_sp_decl_body_list: sp_decl_body_list  */
#line 19295 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.spblock)= (yyvsp[0].spblock); }
#line 51844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3790: /* $@278: %empty  */
#line 19300 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 51853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3791: /* sp_decl_body_list: sp_decl_non_handler_list $@278 opt_sp_decl_handler_list  */
#line 19305 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 51861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3793: /* sp_decl_non_handler_list: sp_decl_non_handler ';'  */
#line 19312 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 51867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3794: /* sp_decl_non_handler_list: sp_decl_non_handler_list sp_decl_non_handler ';'  */
#line 19314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 51875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3795: /* sp_decl_handler_list: sp_decl_handler ';'  */
#line 19320 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 51881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3796: /* sp_decl_handler_list: sp_decl_handler_list sp_decl_handler ';'  */
#line 19322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 51889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3797: /* opt_sp_decl_handler_list: _empty  */
#line 19328 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.spblock).init(); }
#line 51895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3800: /* sp_decl_non_handler: ident_directly_assignable CONDITION_SYM FOR_SYM sp_cond  */
#line 19335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 51906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3801: /* sp_decl_non_handler: ident_directly_assignable EXCEPTION_ORACLE_SYM  */
#line 19342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 51920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3802: /* $@279: %empty  */
#line 19352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 51928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3803: /* sp_decl_non_handler: CURSOR_SYM ident_directly_assignable $@279 opt_parenthesized_cursor_formal_parameters IS sp_cursor_stmt  */
#line 19357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 51942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3809: /* sp_proc_stmt: labels_declaration_oracle sp_labelable_stmt  */
#line 19375 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 51948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3820: /* sp_labelable_stmt: NULL_SYM  */
#line 19389 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 51954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3825: /* $@280: %empty  */
#line 19403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 51964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3826: /* sp_labeled_block: sp_block_label BEGIN_ORACLE_SYM $@280 sp_block_statements_and_exceptions END sp_opt_label  */
#line 19411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 51973 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3827: /* $@281: %empty  */
#line 19417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 51981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3828: /* $@282: %empty  */
#line 19421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 51990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3829: /* sp_labeled_block: sp_block_label DECLARE_ORACLE_SYM $@281 opt_sp_decl_body_list $@282 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END sp_opt_label  */
#line 19429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 52000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3832: /* $@283: %empty  */
#line 19443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3833: /* sp_unlabeled_block: BEGIN_ORACLE_SYM opt_not_atomic $@283 sp_block_statements_and_exceptions END  */
#line 19452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 52021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3834: /* $@284: %empty  */
#line 19457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 52031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3835: /* $@285: %empty  */
#line 19463 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3836: /* sp_unlabeled_block: DECLARE_ORACLE_SYM $@284 opt_sp_decl_body_list $@285 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 19470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 52050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3837: /* $@286: %empty  */
#line 19480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 52059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3838: /* sp_block_statements_and_exceptions: sp_instr_addr sp_proc_stmts $@286 opt_exception_clause  */
#line 19485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 52069 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;


#line 52073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

